   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1	@ Tag_ABI_HardFP_use
   3              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"genrtn.c"
  14              	@ GNU C99 (GNU Arm Embedded Toolchain 9-2020-q3-update) version 9.3.1 20200408 (release) (arm-none-
  15              	@	compiled by GNU C version 5.3.1 20160211, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -imultilib thumb/v7e-m+fp/hard
  19              	@ -iprefix c:\gcc\arm-eabi\bin\../lib/gcc/arm-none-eabi/9.3.1/
  20              	@ -isysroot c:\gcc\arm-eabi\bin\../arm-none-eabi -MD genrtn.d
  21              	@ -MF .dep/genrtn.o.d -MP -MQ genrtn.o -D__USES_INITFINI__ genrtn.c
  22              	@ -mcpu=cortex-m4 -mthumb -mthumb-interwork -mfpu=fpv4-sp-d16
  23              	@ -mfloat-abi=hard -march=armv7e-m+fp -auxbase-strip genrtn.o -gdwarf-2 -O0
  24              	@ -Wno-pointer-sign -Wall -Wimplicit -Wunused-but-set-variable
  25              	@ -Wpointer-arith -Wswitch -Wno-int-to-pointer-cast
  26              	@ -Wno-pointer-to-int-cast -Wredundant-decls -Wreturn-type -Wshadow
  27              	@ -Wunused -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes
  28              	@ -Wnested-externs -std=gnu99 -fverbose-asm -funsigned-char
  29              	@ -funsigned-bitfields -fpack-struct -fshort-enums
  30              	@ options enabled:  -faggressive-loop-optimizations -fassume-phsa
  31              	@ -fauto-inc-dec -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  32              	@ -fearly-inlining -feliminate-unused-debug-types -ffp-int-builtin-inexact
  33              	@ -ffunction-cse -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  34              	@ -finline-atomics -fipa-stack-alignment -fira-hoist-pressure
  35              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  36              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  37              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings -fpack-struct
  38              	@ -fpeephole -fplt -fprefetch-loop-arrays -freg-struct-return
  39              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  40              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  41              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  42              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  43              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  44              	@ -fssa-backprop -fstdarg-opt -fstrict-volatile-bitfields -fsync-libcalls
  45              	@ -ftrapping-math -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  46              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  47              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  48              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  49              	@ -masm-syntax-unified -mbe32 -mlittle-endian -mpic-data-is-text-relative
  50              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  51              	
  52              		.text
  53              	.Ltext0:
  54              		.cfi_sections	.debug_frame
  55              		.align	1
  56              		.global	fnDoPulse
  57              		.arch armv7e-m
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  61              		.fpu fpv4-sp-d16
  63              	fnDoPulse:
  64              	.LFB11:
  65              		.file 1 "genrtn.c"
   1:genrtn.c      **** //=============================================================================================
   2:genrtn.c      **** //                                        Quorb Inc.
   3:genrtn.c      **** //                                -------------------------
   4:genrtn.c      **** //
   5:genrtn.c      **** //                            General Functions Processing Code
   6:genrtn.c      **** //                  -----------------------------------------------------
   7:genrtn.c      **** //
   8:genrtn.c      **** //    This code is for use on the STM32F446 Processor Series of Micro Controllers it is
   9:genrtn.c      **** //    It is not fully compatible with other STM32FXXX Series Micro Controller Products
  10:genrtn.c      **** //
  11:genrtn.c      **** //                             Written By:  Sancar James Fredsti
  12:genrtn.c      **** //
  13:genrtn.c      **** //=============================================================================================
  14:genrtn.c      **** 
  15:genrtn.c      **** //---------------------------------------------------------------------------------------------
  16:genrtn.c      **** //         Program Defines and RAM Storage Definitions
  17:genrtn.c      **** //---------------------------------------------------------------------------------------------
  18:genrtn.c      **** 
  19:genrtn.c      **** #include "projectdefs.h"
  20:genrtn.c      **** 
  21:genrtn.c      **** //---------------------------------------------------------------------------------------------
  22:genrtn.c      **** //     Output a single pulse on PIN PA09
  23:genrtn.c      **** //---------------------------------------------------------------------------------------------
  24:genrtn.c      **** 
  25:genrtn.c      **** void  fnDoPulse (void)
  26:genrtn.c      **** {
  66              		.loc 1 26 1
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70              		@ link register save eliminated.
  71 0000 80B4     		push	{r7}	@
  72              	.LCFI0:
  73              		.cfi_def_cfa_offset 4
  74              		.cfi_offset 7, -4
  75 0002 00AF     		add	r7, sp, #0	@,,
  76              	.LCFI1:
  77              		.cfi_def_cfa_register 7
  78              	@ genrtn.c:27:   SET_PA09;                                       //--- Pulse Hi
  27:genrtn.c      ****   SET_PA09;                                       //--- Pulse Hi
  79              		.loc 1 27 3
  80 0004 0C4B     		ldr	r3, .L2	@ _1,
  81 0006 4FF40072 		mov	r2, #512	@ tmp112,
  82 000a 1A60     		str	r2, [r3]	@ tmp112, *_1
  83              	@ genrtn.c:28:   nop12;
  28:genrtn.c      ****   nop12;
  84              		.loc 1 28 3
  85              		.syntax unified
  86              	@ 28 "genrtn.c" 1
  87 000c 00BF     		nop
  88 000e 00BF     		nop
  89 0010 00BF     		nop
  90 0012 00BF     		nop
  91 0014 00BF     		nop
  92 0016 00BF     		nop
  93 0018 00BF     		nop
  94 001a 00BF     		nop
  95 001c 00BF     		nop
  96 001e 00BF     		nop
  97 0020 00BF     		nop
  98 0022 00BF     		nop
  99              		
 100              	@ 0 "" 2
 101              	@ genrtn.c:29:   CLR_PA09;                                       //--- Pulse Lo
  29:genrtn.c      ****   CLR_PA09;                                       //--- Pulse Lo
 102              		.loc 1 29 3
 103              		.thumb
 104              		.syntax unified
 105 0024 044B     		ldr	r3, .L2	@ _2,
 106 0026 4FF00072 		mov	r2, #33554432	@ tmp113,
 107 002a 1A60     		str	r2, [r3]	@ tmp113, *_2
 108              	@ genrtn.c:30: }
  30:genrtn.c      **** }
 109              		.loc 1 30 1
 110 002c 00BF     		nop	
 111 002e BD46     		mov	sp, r7	@,
 112              	.LCFI2:
 113              		.cfi_def_cfa_register 13
 114              		@ sp needed	@
 115 0030 5DF8047B 		ldr	r7, [sp], #4	@,
 116              	.LCFI3:
 117              		.cfi_restore 7
 118              		.cfi_def_cfa_offset 0
 119 0034 7047     		bx	lr	@
 120              	.L3:
 121 0036 00BF     		.align	2
 122              	.L2:
 123 0038 18000048 		.word	1207959576
 124              		.cfi_endproc
 125              	.LFE11:
 127              		.align	1
 128              		.global	fnPulseByteOut
 129              		.syntax unified
 130              		.thumb
 131              		.thumb_func
 132              		.fpu fpv4-sp-d16
 134              	fnPulseByteOut:
 135              	.LFB12:
  31:genrtn.c      **** 
  32:genrtn.c      **** //---------------------------------------------------------------------------------------------
  33:genrtn.c      **** //     Output a series of Pulses Representing a Word Value  Clock Bit on PA07  DATA on PA06
  34:genrtn.c      **** //---------------------------------------------------------------------------------------------
  35:genrtn.c      **** //--- Bit PA07 = Clock Bit
  36:genrtn.c      **** //--- Bit PA06 = Data Bit Hi to Low
  37:genrtn.c      **** 
  38:genrtn.c      **** //--- Output a 8 Bit Byte Value
  39:genrtn.c      **** void  fnPulseByteOut (u08 ubPulseByte)
  40:genrtn.c      **** {
 136              		.loc 1 40 1
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 16
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 141 003c 80B4     		push	{r7}	@
 142              	.LCFI4:
 143              		.cfi_def_cfa_offset 4
 144              		.cfi_offset 7, -4
 145 003e 85B0     		sub	sp, sp, #20	@,,
 146              	.LCFI5:
 147              		.cfi_def_cfa_offset 24
 148 0040 00AF     		add	r7, sp, #0	@,,
 149              	.LCFI6:
 150              		.cfi_def_cfa_register 7
 151 0042 0346     		mov	r3, r0	@ tmp119, ubPulseByte
 152 0044 FB71     		strb	r3, [r7, #7]	@ tmp120, ubPulseByte
 153              	@ genrtn.c:42:   u08 ubB = 0x80;                                 //--- Set High Bit Mask
  41:genrtn.c      ****   u16 uwA;
  42:genrtn.c      ****   u08 ubB = 0x80;                                 //--- Set High Bit Mask
 154              		.loc 1 42 7
 155 0046 8023     		movs	r3, #128	@ tmp121,
 156 0048 7B73     		strb	r3, [r7, #13]	@ tmp122, ubB
 157              	@ genrtn.c:46:   CLR_PA06;                                       //--- Clear Bit Out
  43:genrtn.c      **** 
  44:genrtn.c      ****   //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  45:genrtn.c      **** 
  46:genrtn.c      ****   CLR_PA06;                                       //--- Clear Bit Out
 158              		.loc 1 46 3
 159 004a 2B4B     		ldr	r3, .L9	@ _1,
 160 004c 4FF48002 		mov	r2, #4194304	@ tmp123,
 161 0050 1A60     		str	r2, [r3]	@ tmp123, *_1
 162              	@ genrtn.c:47:   CLR_PA07;                                       //--- Clear Clk Out
  47:genrtn.c      ****   CLR_PA07;                                       //--- Clear Clk Out
 163              		.loc 1 47 3
 164 0052 294B     		ldr	r3, .L9	@ _2,
 165 0054 4FF40002 		mov	r2, #8388608	@ tmp124,
 166 0058 1A60     		str	r2, [r3]	@ tmp124, *_2
 167              	@ genrtn.c:49:   for (uwA = 0; uwA < 8; uwA++)
  48:genrtn.c      **** 
  49:genrtn.c      ****   for (uwA = 0; uwA < 8; uwA++)
 168              		.loc 1 49 12
 169 005a 0023     		movs	r3, #0	@ tmp126,
 170 005c FB81     		strh	r3, [r7, #14]	@ movhi	@ tmp125, uwA
 171              	@ genrtn.c:49:   for (uwA = 0; uwA < 8; uwA++)
 172              		.loc 1 49 3
 173 005e 2AE0     		b	.L5		@
 174              	.L8:
 175              	@ genrtn.c:51:     if (ubPulseByte & ubB)
  50:genrtn.c      ****   {
  51:genrtn.c      ****     if (ubPulseByte & ubB)
 176              		.loc 1 51 9
 177 0060 FA79     		ldrb	r2, [r7, #7]	@ tmp127, ubPulseByte
 178 0062 7B7B     		ldrb	r3, [r7, #13]	@ tmp128, ubB
 179 0064 1340     		ands	r3, r3, r2	@, tmp129, tmp128, tmp127
 180 0066 DBB2     		uxtb	r3, r3	@ _3, tmp129
 181              	@ genrtn.c:51:     if (ubPulseByte & ubB)
 182              		.loc 1 51 8
 183 0068 002B     		cmp	r3, #0	@ _3,
 184 006a 03D0     		beq	.L6		@,
 185              	@ genrtn.c:53:       SET_PA06;                                   //--- Set Bit Hi
  52:genrtn.c      ****     {
  53:genrtn.c      ****       SET_PA06;                                   //--- Set Bit Hi
 186              		.loc 1 53 7
 187 006c 224B     		ldr	r3, .L9	@ _4,
 188 006e 4022     		movs	r2, #64	@ tmp130,
 189 0070 1A60     		str	r2, [r3]	@ tmp130, *_4
 190 0072 03E0     		b	.L7		@
 191              	.L6:
 192              	@ genrtn.c:57:       CLR_PA06;                                   //--- Set Bit Lo
  54:genrtn.c      ****     }
  55:genrtn.c      ****     else
  56:genrtn.c      ****     {
  57:genrtn.c      ****       CLR_PA06;                                   //--- Set Bit Lo
 193              		.loc 1 57 7
 194 0074 204B     		ldr	r3, .L9	@ _5,
 195 0076 4FF48002 		mov	r2, #4194304	@ tmp131,
 196 007a 1A60     		str	r2, [r3]	@ tmp131, *_5
 197              	.L7:
 198              	@ genrtn.c:60:     nop4;
  58:genrtn.c      ****     }
  59:genrtn.c      **** 
  60:genrtn.c      ****     nop4;
 199              		.loc 1 60 5 discriminator 2
 200              		.syntax unified
 201              	@ 60 "genrtn.c" 1
 202 007c 00BF     		nop
 203 007e 00BF     		nop
 204 0080 00BF     		nop
 205 0082 00BF     		nop
 206              		
 207              	@ 0 "" 2
 208              	@ genrtn.c:62:     SET_PA07;                                     //--- Set Clk Hi
  61:genrtn.c      **** 
  62:genrtn.c      ****     SET_PA07;                                     //--- Set Clk Hi
 209              		.loc 1 62 5 discriminator 2
 210              		.thumb
 211              		.syntax unified
 212 0084 1C4B     		ldr	r3, .L9	@ _6,
 213 0086 8022     		movs	r2, #128	@ tmp132,
 214 0088 1A60     		str	r2, [r3]	@ tmp132, *_6
 215              	@ genrtn.c:64:     nop4;
  63:genrtn.c      **** 
  64:genrtn.c      ****     nop4;
 216              		.loc 1 64 5 discriminator 2
 217              		.syntax unified
 218              	@ 64 "genrtn.c" 1
 219 008a 00BF     		nop
 220 008c 00BF     		nop
 221 008e 00BF     		nop
 222 0090 00BF     		nop
 223              		
 224              	@ 0 "" 2
 225              	@ genrtn.c:66:     CLR_PA07;                                     //--- Set Clk Lo
  65:genrtn.c      **** 
  66:genrtn.c      ****     CLR_PA07;                                     //--- Set Clk Lo
 226              		.loc 1 66 5 discriminator 2
 227              		.thumb
 228              		.syntax unified
 229 0092 194B     		ldr	r3, .L9	@ _7,
 230 0094 4FF40002 		mov	r2, #8388608	@ tmp133,
 231 0098 1A60     		str	r2, [r3]	@ tmp133, *_7
 232              	@ genrtn.c:68:     nop4;
  67:genrtn.c      **** 
  68:genrtn.c      ****     nop4;
 233              		.loc 1 68 5 discriminator 2
 234              		.syntax unified
 235              	@ 68 "genrtn.c" 1
 236 009a 00BF     		nop
 237 009c 00BF     		nop
 238 009e 00BF     		nop
 239 00a0 00BF     		nop
 240              		
 241              	@ 0 "" 2
 242              	@ genrtn.c:70:     CLR_PA06;                                     //--- Set Bit Lo
  69:genrtn.c      **** 
  70:genrtn.c      ****     CLR_PA06;                                     //--- Set Bit Lo
 243              		.loc 1 70 5 discriminator 2
 244              		.thumb
 245              		.syntax unified
 246 00a2 154B     		ldr	r3, .L9	@ _8,
 247 00a4 4FF48002 		mov	r2, #4194304	@ tmp134,
 248 00a8 1A60     		str	r2, [r3]	@ tmp134, *_8
 249              	@ genrtn.c:72:     ubB = ubB >> 1;                               //--- Rotate to Next Bit
  71:genrtn.c      **** 
  72:genrtn.c      ****     ubB = ubB >> 1;                               //--- Rotate to Next Bit
 250              		.loc 1 72 9 discriminator 2
 251 00aa 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2	@ tmp135, ubB
 252 00ac 5B08     		lsrs	r3, r3, #1	@ tmp136, tmp135,
 253 00ae 7B73     		strb	r3, [r7, #13]	@ tmp137, ubB
 254              	@ genrtn.c:49:   for (uwA = 0; uwA < 8; uwA++)
  49:genrtn.c      ****   {
 255              		.loc 1 49 29 discriminator 2
 256 00b0 FB89     		ldrh	r3, [r7, #14]	@ uwA.0_9, uwA
 257 00b2 0133     		adds	r3, r3, #1	@ tmp138, uwA.0_9,
 258 00b4 FB81     		strh	r3, [r7, #14]	@ movhi	@ tmp139, uwA
 259              	.L5:
 260              	@ genrtn.c:49:   for (uwA = 0; uwA < 8; uwA++)
  49:genrtn.c      ****   {
 261              		.loc 1 49 3 discriminator 1
 262 00b6 FB89     		ldrh	r3, [r7, #14]	@ tmp142, uwA
 263 00b8 072B     		cmp	r3, #7	@ tmp142,
 264 00ba D1D9     		bls	.L8		@,
 265              	@ genrtn.c:75:   nop24;
  73:genrtn.c      ****   }
  74:genrtn.c      **** 
  75:genrtn.c      ****   nop24;
 266              		.loc 1 75 3
 267              		.syntax unified
 268              	@ 75 "genrtn.c" 1
 269 00bc 00BF     		nop
 270 00be 00BF     		nop
 271 00c0 00BF     		nop
 272 00c2 00BF     		nop
 273 00c4 00BF     		nop
 274 00c6 00BF     		nop
 275 00c8 00BF     		nop
 276 00ca 00BF     		nop
 277 00cc 00BF     		nop
 278 00ce 00BF     		nop
 279 00d0 00BF     		nop
 280 00d2 00BF     		nop
 281 00d4 00BF     		nop
 282 00d6 00BF     		nop
 283 00d8 00BF     		nop
 284 00da 00BF     		nop
 285 00dc 00BF     		nop
 286 00de 00BF     		nop
 287 00e0 00BF     		nop
 288 00e2 00BF     		nop
 289 00e4 00BF     		nop
 290 00e6 00BF     		nop
 291 00e8 00BF     		nop
 292 00ea 00BF     		nop
 293              		
 294              	@ 0 "" 2
 295              	@ genrtn.c:76: }
  76:genrtn.c      **** }
 296              		.loc 1 76 1
 297              		.thumb
 298              		.syntax unified
 299 00ec 00BF     		nop	
 300 00ee 1437     		adds	r7, r7, #20	@,,
 301              	.LCFI7:
 302              		.cfi_def_cfa_offset 4
 303 00f0 BD46     		mov	sp, r7	@,
 304              	.LCFI8:
 305              		.cfi_def_cfa_register 13
 306              		@ sp needed	@
 307 00f2 5DF8047B 		ldr	r7, [sp], #4	@,
 308              	.LCFI9:
 309              		.cfi_restore 7
 310              		.cfi_def_cfa_offset 0
 311 00f6 7047     		bx	lr	@
 312              	.L10:
 313              		.align	2
 314              	.L9:
 315 00f8 18000048 		.word	1207959576
 316              		.cfi_endproc
 317              	.LFE12:
 319              		.align	1
 320              		.global	fnPulseWordOut
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 324              		.fpu fpv4-sp-d16
 326              	fnPulseWordOut:
 327              	.LFB13:
  77:genrtn.c      **** 
  78:genrtn.c      **** //--- Output a 16 Bit Word Value
  79:genrtn.c      **** void  fnPulseWordOut (u16 uwPulseWord)
  80:genrtn.c      **** {
 328              		.loc 1 80 1
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 16
 331              		@ frame_needed = 1, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333 00fc 80B4     		push	{r7}	@
 334              	.LCFI10:
 335              		.cfi_def_cfa_offset 4
 336              		.cfi_offset 7, -4
 337 00fe 85B0     		sub	sp, sp, #20	@,,
 338              	.LCFI11:
 339              		.cfi_def_cfa_offset 24
 340 0100 00AF     		add	r7, sp, #0	@,,
 341              	.LCFI12:
 342              		.cfi_def_cfa_register 7
 343 0102 0346     		mov	r3, r0	@ tmp119, uwPulseWord
 344 0104 FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp120, uwPulseWord
 345              	@ genrtn.c:82:   u16 uwB = 0x8000;
  81:genrtn.c      ****   u16 uwA;
  82:genrtn.c      ****   u16 uwB = 0x8000;
 346              		.loc 1 82 7
 347 0106 4FF40043 		mov	r3, #32768	@ tmp122,
 348 010a BB81     		strh	r3, [r7, #12]	@ movhi	@ tmp121, uwB
 349              	@ genrtn.c:86:   CLR_PA06;                                       //--- Clear Bit Out
  83:genrtn.c      **** 
  84:genrtn.c      ****   //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
  85:genrtn.c      **** 
  86:genrtn.c      ****   CLR_PA06;                                       //--- Clear Bit Out
 350              		.loc 1 86 3
 351 010c 2B4B     		ldr	r3, .L16	@ _1,
 352 010e 4FF48002 		mov	r2, #4194304	@ tmp123,
 353 0112 1A60     		str	r2, [r3]	@ tmp123, *_1
 354              	@ genrtn.c:87:   CLR_PA07;                                       //--- Clear Clk Out
  87:genrtn.c      ****   CLR_PA07;                                       //--- Clear Clk Out
 355              		.loc 1 87 3
 356 0114 294B     		ldr	r3, .L16	@ _2,
 357 0116 4FF40002 		mov	r2, #8388608	@ tmp124,
 358 011a 1A60     		str	r2, [r3]	@ tmp124, *_2
 359              	@ genrtn.c:89:   for (uwA = 0; uwA < 16; uwA++)
  88:genrtn.c      **** 
  89:genrtn.c      ****   for (uwA = 0; uwA < 16; uwA++)
 360              		.loc 1 89 12
 361 011c 0023     		movs	r3, #0	@ tmp126,
 362 011e FB81     		strh	r3, [r7, #14]	@ movhi	@ tmp125, uwA
 363              	@ genrtn.c:89:   for (uwA = 0; uwA < 16; uwA++)
 364              		.loc 1 89 3
 365 0120 2AE0     		b	.L12		@
 366              	.L15:
 367              	@ genrtn.c:91:     if (uwPulseWord & uwB)
  90:genrtn.c      ****   {
  91:genrtn.c      ****     if (uwPulseWord & uwB)
 368              		.loc 1 91 9
 369 0122 FA88     		ldrh	r2, [r7, #6]	@ movhi	@ tmp127, uwPulseWord
 370 0124 BB89     		ldrh	r3, [r7, #12]	@ movhi	@ tmp128, uwB
 371 0126 1340     		ands	r3, r3, r2	@, tmp129, tmp128, tmp127
 372 0128 9BB2     		uxth	r3, r3	@ _3, tmp129
 373              	@ genrtn.c:91:     if (uwPulseWord & uwB)
 374              		.loc 1 91 8
 375 012a 002B     		cmp	r3, #0	@ _3,
 376 012c 03D0     		beq	.L13		@,
 377              	@ genrtn.c:93:       SET_PA06;                                   //--- Set Bit Hi
  92:genrtn.c      ****     {
  93:genrtn.c      ****       SET_PA06;                                   //--- Set Bit Hi
 378              		.loc 1 93 7
 379 012e 234B     		ldr	r3, .L16	@ _4,
 380 0130 4022     		movs	r2, #64	@ tmp130,
 381 0132 1A60     		str	r2, [r3]	@ tmp130, *_4
 382 0134 03E0     		b	.L14		@
 383              	.L13:
 384              	@ genrtn.c:97:       CLR_PA06;                                   //--- Set Bit Lo
  94:genrtn.c      ****     }
  95:genrtn.c      ****     else
  96:genrtn.c      ****     {
  97:genrtn.c      ****       CLR_PA06;                                   //--- Set Bit Lo
 385              		.loc 1 97 7
 386 0136 214B     		ldr	r3, .L16	@ _5,
 387 0138 4FF48002 		mov	r2, #4194304	@ tmp131,
 388 013c 1A60     		str	r2, [r3]	@ tmp131, *_5
 389              	.L14:
 390              	@ genrtn.c:100:     nop4;
  98:genrtn.c      ****     }
  99:genrtn.c      **** 
 100:genrtn.c      ****     nop4;
 391              		.loc 1 100 5 discriminator 2
 392              		.syntax unified
 393              	@ 100 "genrtn.c" 1
 394 013e 00BF     		nop
 395 0140 00BF     		nop
 396 0142 00BF     		nop
 397 0144 00BF     		nop
 398              		
 399              	@ 0 "" 2
 400              	@ genrtn.c:102:     SET_PA07;                                     //--- Set Clk Hi
 101:genrtn.c      **** 
 102:genrtn.c      ****     SET_PA07;                                     //--- Set Clk Hi
 401              		.loc 1 102 5 discriminator 2
 402              		.thumb
 403              		.syntax unified
 404 0146 1D4B     		ldr	r3, .L16	@ _6,
 405 0148 8022     		movs	r2, #128	@ tmp132,
 406 014a 1A60     		str	r2, [r3]	@ tmp132, *_6
 407              	@ genrtn.c:104:     nop4;
 103:genrtn.c      **** 
 104:genrtn.c      ****     nop4;
 408              		.loc 1 104 5 discriminator 2
 409              		.syntax unified
 410              	@ 104 "genrtn.c" 1
 411 014c 00BF     		nop
 412 014e 00BF     		nop
 413 0150 00BF     		nop
 414 0152 00BF     		nop
 415              		
 416              	@ 0 "" 2
 417              	@ genrtn.c:106:     CLR_PA07;                                     //--- Set Clk Lo
 105:genrtn.c      **** 
 106:genrtn.c      ****     CLR_PA07;                                     //--- Set Clk Lo
 418              		.loc 1 106 5 discriminator 2
 419              		.thumb
 420              		.syntax unified
 421 0154 194B     		ldr	r3, .L16	@ _7,
 422 0156 4FF40002 		mov	r2, #8388608	@ tmp133,
 423 015a 1A60     		str	r2, [r3]	@ tmp133, *_7
 424              	@ genrtn.c:108:     nop4;
 107:genrtn.c      **** 
 108:genrtn.c      ****     nop4;
 425              		.loc 1 108 5 discriminator 2
 426              		.syntax unified
 427              	@ 108 "genrtn.c" 1
 428 015c 00BF     		nop
 429 015e 00BF     		nop
 430 0160 00BF     		nop
 431 0162 00BF     		nop
 432              		
 433              	@ 0 "" 2
 434              	@ genrtn.c:110:     CLR_PA06;                                     //--- Set Bit Lo
 109:genrtn.c      **** 
 110:genrtn.c      ****     CLR_PA06;                                     //--- Set Bit Lo
 435              		.loc 1 110 5 discriminator 2
 436              		.thumb
 437              		.syntax unified
 438 0164 154B     		ldr	r3, .L16	@ _8,
 439 0166 4FF48002 		mov	r2, #4194304	@ tmp134,
 440 016a 1A60     		str	r2, [r3]	@ tmp134, *_8
 441              	@ genrtn.c:112:     uwB = uwB >> 1;                               //--- Rotate to Next Bit
 111:genrtn.c      **** 
 112:genrtn.c      ****     uwB = uwB >> 1;                               //--- Rotate to Next Bit
 442              		.loc 1 112 9 discriminator 2
 443 016c BB89     		ldrh	r3, [r7, #12]	@ tmp135, uwB
 444 016e 5B08     		lsrs	r3, r3, #1	@ tmp136, tmp135,
 445 0170 BB81     		strh	r3, [r7, #12]	@ movhi	@ tmp137, uwB
 446              	@ genrtn.c:89:   for (uwA = 0; uwA < 16; uwA++)
  89:genrtn.c      ****   {
 447              		.loc 1 89 30 discriminator 2
 448 0172 FB89     		ldrh	r3, [r7, #14]	@ uwA.1_9, uwA
 449 0174 0133     		adds	r3, r3, #1	@ tmp138, uwA.1_9,
 450 0176 FB81     		strh	r3, [r7, #14]	@ movhi	@ tmp139, uwA
 451              	.L12:
 452              	@ genrtn.c:89:   for (uwA = 0; uwA < 16; uwA++)
  89:genrtn.c      ****   {
 453              		.loc 1 89 3 discriminator 1
 454 0178 FB89     		ldrh	r3, [r7, #14]	@ tmp142, uwA
 455 017a 0F2B     		cmp	r3, #15	@ tmp142,
 456 017c D1D9     		bls	.L15		@,
 457              	@ genrtn.c:115:   nop24;
 113:genrtn.c      ****   }
 114:genrtn.c      **** 
 115:genrtn.c      ****   nop24;
 458              		.loc 1 115 3
 459              		.syntax unified
 460              	@ 115 "genrtn.c" 1
 461 017e 00BF     		nop
 462 0180 00BF     		nop
 463 0182 00BF     		nop
 464 0184 00BF     		nop
 465 0186 00BF     		nop
 466 0188 00BF     		nop
 467 018a 00BF     		nop
 468 018c 00BF     		nop
 469 018e 00BF     		nop
 470 0190 00BF     		nop
 471 0192 00BF     		nop
 472 0194 00BF     		nop
 473 0196 00BF     		nop
 474 0198 00BF     		nop
 475 019a 00BF     		nop
 476 019c 00BF     		nop
 477 019e 00BF     		nop
 478 01a0 00BF     		nop
 479 01a2 00BF     		nop
 480 01a4 00BF     		nop
 481 01a6 00BF     		nop
 482 01a8 00BF     		nop
 483 01aa 00BF     		nop
 484 01ac 00BF     		nop
 485              		
 486              	@ 0 "" 2
 487              	@ genrtn.c:116: }
 116:genrtn.c      **** }
 488              		.loc 1 116 1
 489              		.thumb
 490              		.syntax unified
 491 01ae 00BF     		nop	
 492 01b0 1437     		adds	r7, r7, #20	@,,
 493              	.LCFI13:
 494              		.cfi_def_cfa_offset 4
 495 01b2 BD46     		mov	sp, r7	@,
 496              	.LCFI14:
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed	@
 499 01b4 5DF8047B 		ldr	r7, [sp], #4	@,
 500              	.LCFI15:
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 01b8 7047     		bx	lr	@
 504              	.L17:
 505 01ba 00BF     		.align	2
 506              	.L16:
 507 01bc 18000048 		.word	1207959576
 508              		.cfi_endproc
 509              	.LFE13:
 511              		.align	1
 512              		.global	fnPulseLongOut
 513              		.syntax unified
 514              		.thumb
 515              		.thumb_func
 516              		.fpu fpv4-sp-d16
 518              	fnPulseLongOut:
 519              	.LFB14:
 117:genrtn.c      **** 
 118:genrtn.c      **** //--- Output a 32 Bit Long Value
 119:genrtn.c      **** void  fnPulseLongOut (u32 ulPulseLong)
 120:genrtn.c      **** {
 520              		.loc 1 120 1
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 16
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 525 01c0 80B4     		push	{r7}	@
 526              	.LCFI16:
 527              		.cfi_def_cfa_offset 4
 528              		.cfi_offset 7, -4
 529 01c2 85B0     		sub	sp, sp, #20	@,,
 530              	.LCFI17:
 531              		.cfi_def_cfa_offset 24
 532 01c4 00AF     		add	r7, sp, #0	@,,
 533              	.LCFI18:
 534              		.cfi_def_cfa_register 7
 535 01c6 7860     		str	r0, [r7, #4]	@ ulPulseLong, ulPulseLong
 536              	@ genrtn.c:122:   u32 ulB = 0x80000000;
 121:genrtn.c      ****   u16 uwA;
 122:genrtn.c      ****   u32 ulB = 0x80000000;
 537              		.loc 1 122 7
 538 01c8 4FF00043 		mov	r3, #-2147483648	@ tmp119,
 539 01cc BB60     		str	r3, [r7, #8]	@ tmp119, ulB
 540              	@ genrtn.c:126:   CLR_PA06;                                       //--- Clear Bit Out
 123:genrtn.c      **** 
 124:genrtn.c      ****   //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 125:genrtn.c      **** 
 126:genrtn.c      ****   CLR_PA06;                                       //--- Clear Bit Out
 541              		.loc 1 126 3
 542 01ce 2B4B     		ldr	r3, .L23	@ _1,
 543 01d0 4FF48002 		mov	r2, #4194304	@ tmp120,
 544 01d4 1A60     		str	r2, [r3]	@ tmp120, *_1
 545              	@ genrtn.c:127:   CLR_PA07;                                       //--- Clear Clk Out
 127:genrtn.c      ****   CLR_PA07;                                       //--- Clear Clk Out
 546              		.loc 1 127 3
 547 01d6 294B     		ldr	r3, .L23	@ _2,
 548 01d8 4FF40002 		mov	r2, #8388608	@ tmp121,
 549 01dc 1A60     		str	r2, [r3]	@ tmp121, *_2
 550              	@ genrtn.c:129:   for (uwA = 0; uwA < 32; uwA++)
 128:genrtn.c      **** 
 129:genrtn.c      ****   for (uwA = 0; uwA < 32; uwA++)
 551              		.loc 1 129 12
 552 01de 0023     		movs	r3, #0	@ tmp123,
 553 01e0 FB81     		strh	r3, [r7, #14]	@ movhi	@ tmp122, uwA
 554              	@ genrtn.c:129:   for (uwA = 0; uwA < 32; uwA++)
 555              		.loc 1 129 3
 556 01e2 29E0     		b	.L19		@
 557              	.L22:
 558              	@ genrtn.c:131:     if (ulPulseLong & ulB)
 130:genrtn.c      ****   {
 131:genrtn.c      ****     if (ulPulseLong & ulB)
 559              		.loc 1 131 21
 560 01e4 7A68     		ldr	r2, [r7, #4]	@ tmp124, ulPulseLong
 561 01e6 BB68     		ldr	r3, [r7, #8]	@ tmp125, ulB
 562 01e8 1340     		ands	r3, r3, r2	@, _3, tmp125, tmp124
 563              	@ genrtn.c:131:     if (ulPulseLong & ulB)
 564              		.loc 1 131 8
 565 01ea 002B     		cmp	r3, #0	@ _3,
 566 01ec 03D0     		beq	.L20		@,
 567              	@ genrtn.c:133:       SET_PA06;                                   //--- Set Bit Hi
 132:genrtn.c      ****     {
 133:genrtn.c      ****       SET_PA06;                                   //--- Set Bit Hi
 568              		.loc 1 133 7
 569 01ee 234B     		ldr	r3, .L23	@ _4,
 570 01f0 4022     		movs	r2, #64	@ tmp126,
 571 01f2 1A60     		str	r2, [r3]	@ tmp126, *_4
 572 01f4 03E0     		b	.L21		@
 573              	.L20:
 574              	@ genrtn.c:137:       CLR_PA06;                                   //--- Set Bit Lo
 134:genrtn.c      ****     }
 135:genrtn.c      ****     else
 136:genrtn.c      ****     {
 137:genrtn.c      ****       CLR_PA06;                                   //--- Set Bit Lo
 575              		.loc 1 137 7
 576 01f6 214B     		ldr	r3, .L23	@ _5,
 577 01f8 4FF48002 		mov	r2, #4194304	@ tmp127,
 578 01fc 1A60     		str	r2, [r3]	@ tmp127, *_5
 579              	.L21:
 580              	@ genrtn.c:140:     nop4;
 138:genrtn.c      ****     }
 139:genrtn.c      **** 
 140:genrtn.c      ****     nop4;
 581              		.loc 1 140 5 discriminator 2
 582              		.syntax unified
 583              	@ 140 "genrtn.c" 1
 584 01fe 00BF     		nop
 585 0200 00BF     		nop
 586 0202 00BF     		nop
 587 0204 00BF     		nop
 588              		
 589              	@ 0 "" 2
 590              	@ genrtn.c:142:     SET_PA07;                                     //--- Set Clk Hi
 141:genrtn.c      **** 
 142:genrtn.c      ****     SET_PA07;                                     //--- Set Clk Hi
 591              		.loc 1 142 5 discriminator 2
 592              		.thumb
 593              		.syntax unified
 594 0206 1D4B     		ldr	r3, .L23	@ _6,
 595 0208 8022     		movs	r2, #128	@ tmp128,
 596 020a 1A60     		str	r2, [r3]	@ tmp128, *_6
 597              	@ genrtn.c:144:     nop4;
 143:genrtn.c      **** 
 144:genrtn.c      ****     nop4;
 598              		.loc 1 144 5 discriminator 2
 599              		.syntax unified
 600              	@ 144 "genrtn.c" 1
 601 020c 00BF     		nop
 602 020e 00BF     		nop
 603 0210 00BF     		nop
 604 0212 00BF     		nop
 605              		
 606              	@ 0 "" 2
 607              	@ genrtn.c:146:     CLR_PA07;                                     //--- Set Clk Lo
 145:genrtn.c      **** 
 146:genrtn.c      ****     CLR_PA07;                                     //--- Set Clk Lo
 608              		.loc 1 146 5 discriminator 2
 609              		.thumb
 610              		.syntax unified
 611 0214 194B     		ldr	r3, .L23	@ _7,
 612 0216 4FF40002 		mov	r2, #8388608	@ tmp129,
 613 021a 1A60     		str	r2, [r3]	@ tmp129, *_7
 614              	@ genrtn.c:148:     nop4;
 147:genrtn.c      **** 
 148:genrtn.c      ****     nop4;
 615              		.loc 1 148 5 discriminator 2
 616              		.syntax unified
 617              	@ 148 "genrtn.c" 1
 618 021c 00BF     		nop
 619 021e 00BF     		nop
 620 0220 00BF     		nop
 621 0222 00BF     		nop
 622              		
 623              	@ 0 "" 2
 624              	@ genrtn.c:150:     CLR_PA06;                                     //--- Set Bit Lo
 149:genrtn.c      **** 
 150:genrtn.c      ****     CLR_PA06;                                     //--- Set Bit Lo
 625              		.loc 1 150 5 discriminator 2
 626              		.thumb
 627              		.syntax unified
 628 0224 154B     		ldr	r3, .L23	@ _8,
 629 0226 4FF48002 		mov	r2, #4194304	@ tmp130,
 630 022a 1A60     		str	r2, [r3]	@ tmp130, *_8
 631              	@ genrtn.c:152:     ulB = ulB >> 1;                               //--- Rotate to Next Bit
 151:genrtn.c      **** 
 152:genrtn.c      ****     ulB = ulB >> 1;                               //--- Rotate to Next Bit
 632              		.loc 1 152 9 discriminator 2
 633 022c BB68     		ldr	r3, [r7, #8]	@ tmp132, ulB
 634 022e 5B08     		lsrs	r3, r3, #1	@ tmp131, tmp132,
 635 0230 BB60     		str	r3, [r7, #8]	@ tmp131, ulB
 636              	@ genrtn.c:129:   for (uwA = 0; uwA < 32; uwA++)
 129:genrtn.c      ****   {
 637              		.loc 1 129 30 discriminator 2
 638 0232 FB89     		ldrh	r3, [r7, #14]	@ uwA.2_9, uwA
 639 0234 0133     		adds	r3, r3, #1	@ tmp133, uwA.2_9,
 640 0236 FB81     		strh	r3, [r7, #14]	@ movhi	@ tmp134, uwA
 641              	.L19:
 642              	@ genrtn.c:129:   for (uwA = 0; uwA < 32; uwA++)
 129:genrtn.c      ****   {
 643              		.loc 1 129 3 discriminator 1
 644 0238 FB89     		ldrh	r3, [r7, #14]	@ tmp137, uwA
 645 023a 1F2B     		cmp	r3, #31	@ tmp137,
 646 023c D2D9     		bls	.L22		@,
 647              	@ genrtn.c:155:   nop24;
 153:genrtn.c      ****   }
 154:genrtn.c      **** 
 155:genrtn.c      ****   nop24;
 648              		.loc 1 155 3
 649              		.syntax unified
 650              	@ 155 "genrtn.c" 1
 651 023e 00BF     		nop
 652 0240 00BF     		nop
 653 0242 00BF     		nop
 654 0244 00BF     		nop
 655 0246 00BF     		nop
 656 0248 00BF     		nop
 657 024a 00BF     		nop
 658 024c 00BF     		nop
 659 024e 00BF     		nop
 660 0250 00BF     		nop
 661 0252 00BF     		nop
 662 0254 00BF     		nop
 663 0256 00BF     		nop
 664 0258 00BF     		nop
 665 025a 00BF     		nop
 666 025c 00BF     		nop
 667 025e 00BF     		nop
 668 0260 00BF     		nop
 669 0262 00BF     		nop
 670 0264 00BF     		nop
 671 0266 00BF     		nop
 672 0268 00BF     		nop
 673 026a 00BF     		nop
 674 026c 00BF     		nop
 675              		
 676              	@ 0 "" 2
 677              	@ genrtn.c:156: }
 156:genrtn.c      **** }
 678              		.loc 1 156 1
 679              		.thumb
 680              		.syntax unified
 681 026e 00BF     		nop	
 682 0270 1437     		adds	r7, r7, #20	@,,
 683              	.LCFI19:
 684              		.cfi_def_cfa_offset 4
 685 0272 BD46     		mov	sp, r7	@,
 686              	.LCFI20:
 687              		.cfi_def_cfa_register 13
 688              		@ sp needed	@
 689 0274 5DF8047B 		ldr	r7, [sp], #4	@,
 690              	.LCFI21:
 691              		.cfi_restore 7
 692              		.cfi_def_cfa_offset 0
 693 0278 7047     		bx	lr	@
 694              	.L24:
 695 027a 00BF     		.align	2
 696              	.L23:
 697 027c 18000048 		.word	1207959576
 698              		.cfi_endproc
 699              	.LFE14:
 701              	.Letext0:
 702              		.file 2 "c:\\gcc\\arm-eabi\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 703              		.file 3 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 704              		.file 4 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 705              		.file 5 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 706              		.file 6 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\errno.h"
 707              		.file 7 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\time.h"
 708              		.file 8 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\stdlib.h"
 709              		.file 9 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\math.h"
 710              		.file 10 "commonheader.h"
 711              		.file 11 "UserCode.h"
 712              		.file 12 "startup.h"
 713              		.file 13 "interrupts.h"
DEFINED SYMBOLS
                            *ABS*:00000000 genrtn.c
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:55     .text:00000000 $t
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:63     .text:00000000 fnDoPulse
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:123    .text:00000038 $d
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:127    .text:0000003c $t
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:134    .text:0000003c fnPulseByteOut
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:315    .text:000000f8 $d
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:319    .text:000000fc $t
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:326    .text:000000fc fnPulseWordOut
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:507    .text:000001bc $d
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:511    .text:000001c0 $t
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:518    .text:000001c0 fnPulseLongOut
C:\Users\Jim\AppData\Local\Temp\cc5StIR2.s:697    .text:0000027c $d

NO UNDEFINED SYMBOLS
