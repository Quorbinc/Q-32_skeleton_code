   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1	@ Tag_ABI_HardFP_use
   3              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"interrupts.c"
  14              	@ GNU C99 (GNU Arm Embedded Toolchain 9-2020-q3-update) version 9.3.1 20200408 (release) (arm-none-
  15              	@	compiled by GNU C version 5.3.1 20160211, GMP version 6.1.0, MPFR version 3.1.4, MPC version 1.0.
  16              	
  17              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  18              	@ options passed:  -I . -imultilib thumb/v7e-m+fp/hard
  19              	@ -iprefix c:\gcc\arm-eabi\bin\../lib/gcc/arm-none-eabi/9.3.1/
  20              	@ -isysroot c:\gcc\arm-eabi\bin\../arm-none-eabi -MD interrupts.d
  21              	@ -MF .dep/interrupts.o.d -MP -MQ interrupts.o -D__USES_INITFINI__
  22              	@ interrupts.c -mcpu=cortex-m4 -mthumb -mthumb-interwork -mfpu=fpv4-sp-d16
  23              	@ -mfloat-abi=hard -march=armv7e-m+fp -auxbase-strip interrupts.o -gdwarf-2
  24              	@ -O0 -Wno-pointer-sign -Wall -Wimplicit -Wunused-but-set-variable
  25              	@ -Wpointer-arith -Wswitch -Wno-int-to-pointer-cast
  26              	@ -Wno-pointer-to-int-cast -Wredundant-decls -Wreturn-type -Wshadow
  27              	@ -Wunused -Wstrict-prototypes -Wmissing-declarations -Wmissing-prototypes
  28              	@ -Wnested-externs -std=gnu99 -fverbose-asm -funsigned-char
  29              	@ -funsigned-bitfields -fpack-struct -fshort-enums
  30              	@ options enabled:  -faggressive-loop-optimizations -fassume-phsa
  31              	@ -fauto-inc-dec -fcommon -fdelete-null-pointer-checks -fdwarf2-cfi-asm
  32              	@ -fearly-inlining -feliminate-unused-debug-types -ffp-int-builtin-inexact
  33              	@ -ffunction-cse -fgcse-lm -fgnu-runtime -fgnu-unique -fident
  34              	@ -finline-atomics -fipa-stack-alignment -fira-hoist-pressure
  35              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  36              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  37              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings -fpack-struct
  38              	@ -fpeephole -fplt -fprefetch-loop-arrays -freg-struct-return
  39              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  40              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  41              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  42              	@ -fsched-stalled-insns-dep -fsemantic-interposition -fshow-column
  43              	@ -fshrink-wrap-separate -fsigned-zeros -fsplit-ivs-in-unroller
  44              	@ -fssa-backprop -fstdarg-opt -fstrict-volatile-bitfields -fsync-libcalls
  45              	@ -ftrapping-math -ftree-cselim -ftree-forwprop -ftree-loop-if-convert
  46              	@ -ftree-loop-im -ftree-loop-ivcanon -ftree-loop-optimize
  47              	@ -ftree-parallelize-loops= -ftree-phiprop -ftree-reassoc -ftree-scev-cprop
  48              	@ -funit-at-a-time -fverbose-asm -fzero-initialized-in-bss
  49              	@ -masm-syntax-unified -mbe32 -mlittle-endian -mpic-data-is-text-relative
  50              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  51              	
  52              		.text
  53              	.Ltext0:
  54              		.cfi_sections	.debug_frame
  55              		.align	1
  56              		.arch armv7e-m
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	NVIC_EnableIRQ:
  63              	.LFB3:
  64              		.file 1 "interrupts.h"
   1:interrupts.h  **** //===========================================================================================//
   2:interrupts.h  **** //                                Fredsti Industries,  Ltd.                                  //
   3:interrupts.h  **** //                                -------------------------                                  //
   4:interrupts.h  **** //                                                                                           //
   5:interrupts.h  **** //                               Interrupt Service  Routines                                 //
   6:interrupts.h  **** //                               ---------------------------                                 //
   7:interrupts.h  **** //                                                                                           //
   8:interrupts.h  **** //                           Written By:  Sancar James Fredsti                               //
   9:interrupts.h  **** //                                                                                           //
  10:interrupts.h  **** //===========================================================================================//
  11:interrupts.h  **** 
  12:interrupts.h  **** 
  13:interrupts.h  **** #ifndef INTERRUPTS_H
  14:interrupts.h  ****   #define INTERRUPTS_H
  15:interrupts.h  **** 
  16:interrupts.h  ****   //-------------------------------------------------------------------------------------------
  17:interrupts.h  ****   //    Interrupt Definition Numeric Table
  18:interrupts.h  ****   //-------------------------------------------------------------------------------------------
  19:interrupts.h  **** 
  20:interrupts.h  ****   //--- STM32L432 Nested Interrupt Controller Interrupt number defines
  21:interrupts.h  ****   #define Reset_IRQn                 -15  //--- 1 Cortex-M4 Reset Interrupt
  22:interrupts.h  ****   #define NMI_IRQn                   -14  //--- 2 Cortex-M4 Non Maskable Interrupt
  23:interrupts.h  ****   #define HardFault_IRQn             -13  //--- 3 Cortex-M4 Hard Fault Interrupt
  24:interrupts.h  ****   #define MemoryManagement_IRQn      -12  //--- 4 Cortex-M4 Memory Management Interrupt
  25:interrupts.h  ****   #define BusFault_IRQn              -11  //--- 5 Cortex-M4 Bus Fault Interrupt
  26:interrupts.h  ****   #define Illegalt_IRQn              -10  //--- 6 Cortex-M4 Usage Fault Interrupt
  27:interrupts.h  **** 
  28:interrupts.h  ****   #define uuIRQm9_IRQn               -9
  29:interrupts.h  ****   #define uuIRQm8_IRQn               -8
  30:interrupts.h  ****   #define uuIRQm7_IRQn               -7
  31:interrupts.h  ****   #define uuIRQm6_IRQn               -6
  32:interrupts.h  ****   #define SVCall_IRQn_IRQn           -5   //--- 11 Cortex-M4 SV Call Interrupt
  33:interrupts.h  ****   #define Debug_IRQn                 -4   //--- 12 Cortex-M4 Debug Monitor Interrupt
  34:interrupts.h  ****   #define PendSV_IRQn                -2   //--- 14 Cortex-M4 Pend SV Interrupt
  35:interrupts.h  ****   #define SysTick_IRQn               -1   //--- 15 Cortex-M4 System Tick Interrupt
  36:interrupts.h  **** 
  37:interrupts.h  ****   //--- Peripherial Function Interrupts
  38:interrupts.h  ****   #define WWDG_IRQn                  0    //--- Window WatchDog Interrupt
  39:interrupts.h  ****   #define PVD_PVM_IRQn               1    //--- PVD/PVM3/PVM4 through EXTI Line detection Interrupt
  40:interrupts.h  ****   #define TAMP_STAMP_IRQn            2    //--- Tamper and TimeStamp interrupts through the EXTI li
  41:interrupts.h  ****   #define RTC_WKUP_IRQn              3    //--- RTC Wakeup interrupt through the EXTI line
  42:interrupts.h  ****   #define FLASH_IRQn                 4    //--- FLASH global Interrupt
  43:interrupts.h  ****   #define RCC_IRQn                   5    //--- RCC global Interrupt
  44:interrupts.h  ****   #define EXTI_0_IRQn                6    //--- EXTI Line0 Interrupt
  45:interrupts.h  ****   #define EXTI_1_IRQn                7    //--- EXTI Line1 Interrupt
  46:interrupts.h  ****   #define EXTI_2_IRQn                8    //--- EXTI Line2 Interrupt
  47:interrupts.h  ****   #define EXTI_3_IRQn                9    //--- EXTI Line3 Interrupt
  48:interrupts.h  **** 
  49:interrupts.h  ****   #define EXTI_4_IRQn                10   //--- EXTI Line4 Interrupt
  50:interrupts.h  ****   #define DMA1_Channel1_IRQn         11   //--- DMA1 Channel 1 global Interrupt
  51:interrupts.h  ****   #define DMA1_Channel2_IRQn         12   //--- DMA1 Channel 2 global Interrupt
  52:interrupts.h  ****   #define DMA1_Channel3_IRQn         13   //--- DMA1 Channel 3 global Interrupt
  53:interrupts.h  ****   #define DMA1_Channel4_IRQn         14   //--- DMA1 Channel 4 global Interrupt
  54:interrupts.h  ****   #define DMA1_Channel5_IRQn         15   //--- DMA1 Channel 5 global Interrupt
  55:interrupts.h  ****   #define DMA1_Channel6_IRQn         16   //--- DMA1 Channel 6 global Interrupt
  56:interrupts.h  ****   #define DMA1_Channel7_IRQn         17   //--- DMA1 Channel 7 global Interrupt
  57:interrupts.h  ****   #define ADC1_IRQn                  18   //--- ADC1 global Interrupt
  58:interrupts.h  ****   #define CAN1_TX_IRQn               19   //--- CAN1 TX Interrupt
  59:interrupts.h  **** 
  60:interrupts.h  ****   #define CAN1_RX0_IRQn              20   //--- CAN1 RX0 Interrupt
  61:interrupts.h  ****   #define CAN1_RX1_IRQn              21   //--- CAN1 RX1 Interrupt
  62:interrupts.h  ****   #define CAN1_SCE_IRQn              22   //--- CAN1 SCE Interrupt
  63:interrupts.h  ****   #define EXTI_9_5_IRQn              23   //--- External Line[9:5] Interrupts
  64:interrupts.h  ****   #define TIM1_BRK_TIM15_IRQn        24   //--- TIM1 Break interrupt and TIM15 global interrupt
  65:interrupts.h  ****   #define TIM1_UP_TIM16_IRQn         25   //--- TIM1 Update Interrupt and TIM16 global interrupt
  66:interrupts.h  ****   #define TIM1_TRG_COM_IRQn          26   //--- TIM1 Trigger and Commutation Interrupt
  67:interrupts.h  ****   #define TIM1_CC_IRQn               27   //--- TIM1 Capture Compare Interrupt
  68:interrupts.h  ****   #define TIM2_IRQn                  28   //--- TIM2 global Interrupt
  69:interrupts.h  ****   #define uuIRQi29_IRQn              29
  70:interrupts.h  **** 
  71:interrupts.h  ****   #define uuIRQi30_IRQn              30
  72:interrupts.h  ****   #define I2C1_EV_IRQn               31   //--- I2C1 Event Interrupt
  73:interrupts.h  ****   #define I2C1_ER_IRQn               32   //--- I2C1 Error Interrupt
  74:interrupts.h  ****   #define I2C2_EV_IRQn               33   //--- I2C2 Event Interrupt
  75:interrupts.h  ****   #define I2C2_ER_IRQn               34   //--- I2C2 Error Interrupt
  76:interrupts.h  ****   #define SPI1_IRQn                  35   //--- SPI1 global Interrupt
  77:interrupts.h  ****   #define SPI2_IRQn                  36   //--- SPI2 global Interrupt
  78:interrupts.h  ****   #define USART1_IRQn                37   //--- USART1 global Interrupt
  79:interrupts.h  ****   #define USART2_IRQn                38   //--- USART2 global Interrupt
  80:interrupts.h  ****   #define USART3_IRQn                39   //--- USART3 global Interrupt
  81:interrupts.h  **** 
  82:interrupts.h  ****   #define EXTI_15_10_IRQn            40   //--- External Line[15:10] Interrupts
  83:interrupts.h  ****   #define RTC_ALARM_IRQn             41   //--- RTC Alarm (A and B) through EXTI Line Interrupt
  84:interrupts.h  ****   #define uuIRQi42_IRQn              42
  85:interrupts.h  ****   #define uuIRQi43_IRQn              43
  86:interrupts.h  ****   #define uuIRQi44_IRQn              44
  87:interrupts.h  ****   #define uuIRQi45_IRQn              45
  88:interrupts.h  ****   #define uuIRQi46_IRQn              46
  89:interrupts.h  ****   #define uuIRQi47_IRQn              47
  90:interrupts.h  ****   #define uuIRQi48_IRQn              48
  91:interrupts.h  ****   #define SDMMC1_IRQn                49   //--- SDMMC1 global Interrupt
  92:interrupts.h  **** 
  93:interrupts.h  ****   #define uuIRQi50_IRQn              50
  94:interrupts.h  ****   #define SPI3_IRQn                  51   //--- SPI3 global Interrupt
  95:interrupts.h  ****   #define uuIRQi52_IRQn              52
  96:interrupts.h  ****   #define uuIRQi53_IRQn              53
  97:interrupts.h  ****   #define TIM6_DAC_IRQn              54   //--- TIM6 global and DAC1&2 underrun error  interrupts
  98:interrupts.h  ****   #define TIM7_IRQn                  55   //--- TIM7 global interrupt
  99:interrupts.h  ****   #define DMA2_Channel1_IRQn         56   //--- DMA2 Channel 1 global Interrupt
 100:interrupts.h  ****   #define DMA2_Channel2_IRQn         57   //--- DMA2 Channel 2 global Interrupt
 101:interrupts.h  ****   #define DMA2_Channel3_IRQn         58   //--- DMA2 Channel 3 global Interrupt
 102:interrupts.h  ****   #define DMA2_Channel4_IRQn         59   //--- DMA2 Channel 4 global Interrupt
 103:interrupts.h  **** 
 104:interrupts.h  ****   #define DMA2_Channel5_IRQn         60   //--- DMA2 Channel 5 global Interrupt
 105:interrupts.h  ****   #define uuIRQi61_IRQn              61
 106:interrupts.h  ****   #define uuIRQi62_IRQn              62
 107:interrupts.h  ****   #define uuIRQi63_IRQn              63
 108:interrupts.h  ****   #define COMP_IRQn                  64   //--- COMP1 and COMP2 Interrupts
 109:interrupts.h  ****   #define LPTIM1_IRQn                65   //--- LP TIM1 interrupt
 110:interrupts.h  ****   #define LPTIM2_IRQn                66   //--- LP TIM2 interrupt
 111:interrupts.h  ****   #define USB_IRQn                   67   //--- USB event Interrupt
 112:interrupts.h  ****   #define DMA2_Channel6_IRQn         68   //--- DMA2 Channel 6 global interrupt
 113:interrupts.h  ****   #define DMA2_Channel7_IRQn         69   //--- DMA2 Channel 7 global interrupt
 114:interrupts.h  **** 
 115:interrupts.h  ****   #define LPUART1_IRQn               70   //--- LP UART1 interrupt
 116:interrupts.h  ****   #define QUADSPI_IRQn               71   //--- Quad SPI global interrupt
 117:interrupts.h  ****   #define I2C3_EV_IRQn               72   //--- I2C3 event interrupt
 118:interrupts.h  ****   #define I2C3_ER_IRQn               73   //--- I2C3 error interrupt
 119:interrupts.h  ****   #define SAI1_IRQn                  74   //--- Serial Audio Interface 1 global interrupt
 120:interrupts.h  ****   #define uuIRQi75_IRQn              75
 121:interrupts.h  ****   #define SWPMI1_IRQn                76   //--- Serial Wire Interface 1 global interrupt
 122:interrupts.h  ****   #define TSC_IRQn                   77   //--- Touch Sense Controller global interrupt
 123:interrupts.h  ****   #define uuIRQi78_IRQn              78
 124:interrupts.h  ****   #define uuIRQi79_IRQn              79
 125:interrupts.h  **** 
 126:interrupts.h  ****   #define RNG_IRQn                   80   //--- RNG global interrupt
 127:interrupts.h  ****   #define FPU_IRQn                   81   //--- FPU global interrupt
 128:interrupts.h  ****   #define CRS_IRQn                   82   //--- CRS global interrupt
 129:interrupts.h  **** 
 130:interrupts.h  ****   //-------------------------------------------------------------------------------------------
 131:interrupts.h  ****   //    Interrupt Service Table and Stack
 132:interrupts.h  ****   //-------------------------------------------------------------------------------------------
 133:interrupts.h  ****   // init value for the stack pointer. defined in linker script
 134:interrupts.h  ****   extern u08 const ubNVICtable [100];
 135:interrupts.h  **** 
 136:interrupts.h  ****   //-------------------------------------------------------------------------------------------
 137:interrupts.h  ****   //    Interrupt Service Function Prototypes
 138:interrupts.h  ****   //-------------------------------------------------------------------------------------------
 139:interrupts.h  ****   void  fnNull_IRQ(void);            // -15   Null_ IRQReset IRQ                   0x00000004
 140:interrupts.h  ****   void  fnNMI_IRQ(void);             // -14   NMI IRQ                              0x00000008
 141:interrupts.h  ****   void  fnHardFault_IRQ(void);       // -13   Hard Fault IRQ                       0x0000000C
 142:interrupts.h  ****   void  fnMemManage_IRQ(void);       // -12   Memory Management Fault              0x00000010
 143:interrupts.h  ****   void  fnBusFault_IRQ(void);        // -11   Bus Fault                            0x00000014
 144:interrupts.h  ****   void  fnIllegal_IRQ(void);         // -10   Bad Instruction                      0x00000018
 145:interrupts.h  **** 
 146:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // - 9   Blank                                0x0000001C
 147:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // - 8   Blank                                0x00000020
 148:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // - 7   Blank                                0x00000024
 149:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // - 6   Blank                                0x00000028
 150:interrupts.h  **** 
 151:interrupts.h  ****   void  fnSVC_IRQ(void);             // - 5   SVCall IRQ                           0x0000002C
 152:interrupts.h  ****   void  fnDebug_IRQ(void);           // - 4   Debug IRQ                            0x00000030
 153:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // - 3   Blank                                0x00000034
 154:interrupts.h  ****   void  fnPendSVC_IRQ(void);         // - 2   PendSV IRQ                           0x00000038
 155:interrupts.h  ****   void  fnSysTick_IRQ(void);         // - 1   SysTick IRQ Non Maskable Tick        0x0000003C
 156:interrupts.h  **** 
 157:interrupts.h  ****   //--- Peripherial Interrupts
 158:interrupts.h  ****   void  fnWWDG_IRQ(void);            // 00 - Window Watchdog                       0x00000040
 159:interrupts.h  ****   void  fnPVD_IRQ(void);             // 01 - PVD through EXTI Line detect          0x00000044
 160:interrupts.h  ****   void  fnRTC_IRQ(void);             // 02 - RTC Time Stamp                        0x00000048
 161:interrupts.h  ****   void  fnRTC_WKUP_IRQ(void);        // 03 - RTC Wake Up                           0x0000004C
 162:interrupts.h  ****   void  fnFLASH_IRQ(void);           // 04 - Flash                                 0x00000050
 163:interrupts.h  **** 
 164:interrupts.h  ****   void  fnRCC_IRQ(void);             // 05 - RCC                                   0x00000050
 165:interrupts.h  ****   void  fnEXTI_0_IRQ(void);          // 06 - EXTI Line 0                           0x00000054
 166:interrupts.h  ****   void  fnEXTI_1_IRQ(void);          // 07 - EXTI Line 1                           0x00000058
 167:interrupts.h  ****   void  fnEXTI_2_IRQ(void);          // 08 - EXTI Line 2                           0x0000005C
 168:interrupts.h  ****   void  fnEXTI_3_IRQ(void);          // 09 - EXTI Line 3                           0x00000060
 169:interrupts.h  ****   void  fnEXTI_4_IRQ(void);          // 10 - EXTI Line 4                           0x00000068
 170:interrupts.h  **** 
 171:interrupts.h  ****   void  fnDMA_11_IRQ(void);          // 11 - DMA1 Channel 1                        0x0000006C
 172:interrupts.h  ****   void  fnDMA_12_IRQ(void);          // 12 - DMA1 Channel 2                        0x00000070
 173:interrupts.h  ****   void  fnDMA_13_IRQ(void);          // 13 - DMA1 Channel 3                        0x00000074
 174:interrupts.h  ****   void  fnDMA_14_IRQ(void);          // 14 - DMA1 Channel 4                        0x00000078
 175:interrupts.h  ****   void  fnDMA_15_IRQ(void);          // 15 - DMA1 Channel 5                        0x0000007C
 176:interrupts.h  ****   void  fnDMA_16_IRQ(void);          // 16 - DMA1 Channel 6                        0x00000080
 177:interrupts.h  ****   void  fnDMA_17_IRQ(void);          // 17 - DMA1 Channel 7                        0x00000084
 178:interrupts.h  **** 
 179:interrupts.h  ****   void  fnADC_IRQ(void);             // 18 - ADC1 & ADC2                           0x00000088
 180:interrupts.h  **** 
 181:interrupts.h  ****   void  fnCAN1_TX_IRQ(void);         // 19 - CAN1 TX                               0x0000008C
 182:interrupts.h  ****   void  fnCAN1_RX0_IRQ(void);        // 20 - CAN1 RX0                              0x00000090
 183:interrupts.h  ****   void  fnCAN1_RX1_IRQ(void);        // 21 - CAN1 RX1                              0x00000094
 184:interrupts.h  ****   void  fnCAN1_SCE_IRQ(void);        // 22 - CAN1 SCE                              0x00000098
 185:interrupts.h  **** 
 186:interrupts.h  ****   void  fnEXTI_5_9_IRQ(void);        // 23 - EXTI Line 5_9                         0x0000009C
 187:interrupts.h  **** 
 188:interrupts.h  ****   void  fnTIM1_BK_TIM15_IRQ(void);   // 24 - TIM1 Break                            0x000000A0
 189:interrupts.h  ****   void  fnTIM1_UP_TIM16_IRQ(void);   // 25 - TIM1 Update                           0x000000A4
 190:interrupts.h  ****   void  fnTIM1_TRG_COM_IRQ(void);    // 26 - TIM1 Trigger                          0x000000A8
 191:interrupts.h  ****   void  fnTIM1_CC_IRQ(void);         // 27 - TIM1 Capture Compare                  0x000000AC
 192:interrupts.h  **** 
 193:interrupts.h  ****   void  fnTIM2_IRQ(void);            // 28 - TIM2 Global                           0x000000B0
 194:interrupts.h  ****   void  fnTIM3_IRQ(void);            // 29 - TIM3 Global                           0x000000B4
 195:interrupts.h  ****   void  fnTIM4_IRQ(void);            // 30 - TIM4 Global                           0x000000B8
 196:interrupts.h  **** 
 197:interrupts.h  ****   void  fnI2C1_EV_IRQ(void);         // 31 - I2C1 Event                            0x000000BC
 198:interrupts.h  ****   void  fnI2C1_ER_IRQ(void);         // 32 - I2C1 Error                            0x000000C0
 199:interrupts.h  ****   void  fnI2C2_EV_IRQ(void);         // 33 - I2C2 Event                            0x000000C4
 200:interrupts.h  ****   void  fnI2C2_ER_IRQ(void);         // 34 - I2C2 Error                            0x000000C8
 201:interrupts.h  **** 
 202:interrupts.h  ****   void  fnSPI1_IRQ(void);            // 35 - SPI1 General Interrupt                0x000000CC
 203:interrupts.h  ****   void  fnSPI2_IRQ(void);            // 36 - SPI2 General Interrupt                0x000000D0
 204:interrupts.h  **** 
 205:interrupts.h  **** //  void  fnUSART1_IRQ(void);          // 37 - USART1 General Interrupt              0x000000D4
 206:interrupts.h  **** //  void  fnUSART2_IRQ(void);          // 38 - USART2 General Interrupt              0x000000D8
 207:interrupts.h  ****   void  fnUSART3_IRQ(void);          // 39 - USART3 General Interrupt              0x000000DC
 208:interrupts.h  **** 
 209:interrupts.h  ****   void  fnEXTI_10_15_IRQ(void);      // 40 - EXTI Lines 10-15                      0x000000E0
 210:interrupts.h  ****   void  fnRTC_ALARM_IRQ(void);       // 41 - RTC Alarm+                            0x000000E4
 211:interrupts.h  **** 
 212:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 42 - Blank                                 0x000000E8
 213:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 43 - Blank                                 0x000000EC
 214:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 44 - Blank                                 0x000000F0
 215:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 45 - Blank                                 0x000000F4
 216:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 46 - Blank                                 0x000000F8
 217:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 47 - Blank                                 0x000000FC
 218:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 48 - Blank                                 0x00000100
 219:interrupts.h  **** 
 220:interrupts.h  ****   void  fnSDMMC1_IRQ(void);          // 49 - SDMMC1 IRQ                            0x00000104
 221:interrupts.h  **** 
 222:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 50 - Blank                                 0x00000108
 223:interrupts.h  **** 
 224:interrupts.h  ****   void  fnSPI3_IRQ(void);            // 51 - SPI3 General Interrupt                0x0000010C
 225:interrupts.h  ****   void  fnUSART4_IRQ(void);          // 52 - USART4 General Interrupt              0x00000110
 226:interrupts.h  **** 
 227:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 53 - Blank                                 0x00000114
 228:interrupts.h  **** 
 229:interrupts.h  ****   void  fnTIM6_IRQ(void);            // 54 - TIM6 Global DAC Under                 0x00000118
 230:interrupts.h  ****   void  fnTIM7_IRQ(void);            // 55 - TIM7 Global                           0x0000011C
 231:interrupts.h  **** 
 232:interrupts.h  ****   void  fnDMA_21_IRQ(void);          // 56 - DMA1 Channel 0                        0x00000120
 233:interrupts.h  ****   void  fnDMA_22_IRQ(void);          // 57 - DMA1 Channel 1                        0x00000124
 234:interrupts.h  ****   void  fnDMA_23_IRQ(void);          // 58 - DMA1 Channel 2                        0x00000128
 235:interrupts.h  ****   void  fnDMA_24_IRQ(void);          // 59 - DMA1 Channel 3                        0x0000012C
 236:interrupts.h  ****   void  fnDMA_25_IRQ(void);          // 60 - DMA1 Channel 4                        0x00000130
 237:interrupts.h  **** 
 238:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 61 - Blank                                 0x00000134
 239:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 62 - Blank                                 0x00000138
 240:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 63 - Blank                                 0x0000013C
 241:interrupts.h  **** 
 242:interrupts.h  ****   void  fnCOMP_IRQ(void);            // 64 - Analog Compare                        0x00000140
 243:interrupts.h  ****   void  fnLPTIM1_IRQ(void);          // 65 - CAN1 RX1                              0x00000144
 244:interrupts.h  ****   void  fnLPTIM2_IRQ(void);          // 66 - CAN1 SCE                              0x00000148
 245:interrupts.h  **** 
 246:interrupts.h  ****   void  fnUSB_FS_IRQ(void);          // 67 - Full Speed USB OTG                    0x0000014C
 247:interrupts.h  **** 
 248:interrupts.h  ****   void  fnDMA_26_IRQ(void);          // 68 - DMA2 Channel 6                        0x00000150
 249:interrupts.h  ****   void  fnDMA_27_IRQ(void);          // 69 - DMA1 Channel 7                        0x00000154
 250:interrupts.h  ****   void  fnLPUART1_IRQ(void);         // 70 - Low Power UART 1                      0x00000158
 251:interrupts.h  ****   void  fnQUADSPI_IRQ(void);         // 71 - QUAD SPI                              0x0000015C
 252:interrupts.h  ****   void  fnI2C3_EV_IRQ(void);         // 72 - I2C3 Event                            0x00000160
 253:interrupts.h  ****   void  fnI2C3_ER_IRQ(void);         // 73 - I2C3 Error                            0x00000164
 254:interrupts.h  ****   void  fnSAI_IRQ(void);             // 74 - SAI IRQ                               0x00000168
 255:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 75 - Blank                                 0x0000016C
 256:interrupts.h  ****   void  fnSWPMI1_IRQ(void);          // 76 - USB OTG HS Wakeup through             0x00000170
 257:interrupts.h  ****   void  fnTSC_IRQ(void);             // 77 - USB OTG HS                            0x00000174
 258:interrupts.h  **** 
 259:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 78 - Blank                                 0x00000178
 260:interrupts.h  ****   //-   void  fnNull_IRQ(void);            // 79 - Blank                                 0x0000017C
 261:interrupts.h  **** 
 262:interrupts.h  ****   void  fnRNG_IRQ(void);             // 80 - DCMI                                  0x00000180
 263:interrupts.h  ****   void  fnFPU_IRQ(void);             // 81 - Floating Point Interrupt              0x00000184
 264:interrupts.h  ****   void  fnCRS_IRQ(void);             // 82 - CRS Interrupt                         0x00000188
 265:interrupts.h  **** 
 266:interrupts.h  ****   //-  void  fnI2C4_EV_IRQ(void);         // 83 - I2C4 Event                            0x0000018C
 267:interrupts.h  ****   //-  void  fnI2C4_ER_IRQ(void);         // 84 - I2C4 Error                            0x00000190
 268:interrupts.h  **** 
 269:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 85 - Blank                                 0x00000194
 270:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 86 - Blank                                 0x00000198
 271:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 87 - Blank                                 0x0000019C
 272:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 88 - Blank                                 0x000001A0
 273:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 89 - Blank                                 0x000001A4
 274:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 90 - Blank                                 0x000001A8
 275:interrupts.h  ****   //- void  fnNull_IRQ(void);            // 91 - Blank                                 0x000001AC
 276:interrupts.h  **** 
 277:interrupts.h  ****   //-------------------------------------------------------------------------------------------
 278:interrupts.h  ****   //    Initialize NVIC Priority and Interrupt Table
 279:interrupts.h  ****   //-------------------------------------------------------------------------------------------
 280:interrupts.h  ****   void fnInitNVIC (void);
 281:interrupts.h  **** 
 282:interrupts.h  ****   void  fnEnaInt (u16 uwIntNum);
 283:interrupts.h  ****   void  fnDisInt (u16 uwIntNum);
 284:interrupts.h  ****   void  fnSetInt (u16 uwIntNum);
 285:interrupts.h  ****   void  fnClrInt (u16 uwIntNum);
 286:interrupts.h  ****   void  fnSetIntPriority (u16 uwIntNum, u08 ubPri);
 287:interrupts.h  ****   void  fnSetIntPend (u16 uwIntNum);
 288:interrupts.h  ****   void  fnClrIntPend (u16 uwIntNum);
 289:interrupts.h  **** 
 290:interrupts.h  **** 
 291:interrupts.h  ****   //  Enable External Interrupt
 292:interrupts.h  ****   //  The function enables a device-specific interrupt in the NVIC interrupt controller.
 293:interrupts.h  ****   //  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 294:interrupts.h  ****   //
 295:interrupts.h  ****   __STATIC_INLINE void NVIC_EnableIRQ(u32 IRQn)
 296:interrupts.h  ****   {
  65              		.loc 1 296 3
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 8
  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69              		@ link register save eliminated.
  70 0000 80B4     		push	{r7}	@
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 4
  73              		.cfi_offset 7, -4
  74 0002 83B0     		sub	sp, sp, #12	@,,
  75              	.LCFI1:
  76              		.cfi_def_cfa_offset 16
  77 0004 00AF     		add	r7, sp, #0	@,,
  78              	.LCFI2:
  79              		.cfi_def_cfa_register 7
  80 0006 7860     		str	r0, [r7, #4]	@ IRQn, IRQn
  81              	@ interrupts.h:297:     NVIC->ISER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 297:interrupts.h  ****     NVIC->ISER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
  82              		.loc 1 297 66
  83 0008 7B68     		ldr	r3, [r7, #4]	@ tmp114, IRQn
  84 000a 03F01F02 		and	r2, r3, #31	@ _1, tmp114,
  85              	@ interrupts.h:297:     NVIC->ISER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
  86              		.loc 1 297 9
  87 000e 0749     		ldr	r1, .L2	@ _2,
  88              	@ interrupts.h:297:     NVIC->ISER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
  89              		.loc 1 297 29
  90 0010 7B68     		ldr	r3, [r7, #4]	@ tmp115, IRQn
  91 0012 5B09     		lsrs	r3, r3, #5	@ _3, tmp115,
  92              	@ interrupts.h:297:     NVIC->ISER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
  93              		.loc 1 297 40
  94 0014 0120     		movs	r0, #1	@ tmp116,
  95 0016 00FA02F2 		lsl	r2, r0, r2	@ _4, tmp116, _1
  96              	@ interrupts.h:297:     NVIC->ISER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
  97              		.loc 1 297 38
  98 001a 41F82320 		str	r2, [r1, r3, lsl #2]	@ unaligned	@ _4,* _2
  99              	@ interrupts.h:298:   }
 298:interrupts.h  ****   }
 100              		.loc 1 298 3
 101 001e 00BF     		nop	
 102 0020 0C37     		adds	r7, r7, #12	@,,
 103              	.LCFI3:
 104              		.cfi_def_cfa_offset 4
 105 0022 BD46     		mov	sp, r7	@,
 106              	.LCFI4:
 107              		.cfi_def_cfa_register 13
 108              		@ sp needed	@
 109 0024 5DF8047B 		ldr	r7, [sp], #4	@,
 110              	.LCFI5:
 111              		.cfi_restore 7
 112              		.cfi_def_cfa_offset 0
 113 0028 7047     		bx	lr	@
 114              	.L3:
 115 002a 00BF     		.align	2
 116              	.L2:
 117 002c 00E100E0 		.word	-536813312
 118              		.cfi_endproc
 119              	.LFE3:
 121              		.align	1
 122              		.syntax unified
 123              		.thumb
 124              		.thumb_func
 125              		.fpu fpv4-sp-d16
 127              	NVIC_DisableIRQ:
 128              	.LFB4:
 299:interrupts.h  **** 
 300:interrupts.h  **** 
 301:interrupts.h  ****   //  Disable External Interrupt
 302:interrupts.h  ****   //  The function disables a device-specific interrupt in the NVIC interrupt controller.
 303:interrupts.h  ****   //  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 304:interrupts.h  ****   //
 305:interrupts.h  ****   __STATIC_INLINE void NVIC_DisableIRQ(u32 IRQn)
 306:interrupts.h  ****   {
 129              		.loc 1 306 3
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 8
 132              		@ frame_needed = 1, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 134 0030 80B4     		push	{r7}	@
 135              	.LCFI6:
 136              		.cfi_def_cfa_offset 4
 137              		.cfi_offset 7, -4
 138 0032 83B0     		sub	sp, sp, #12	@,,
 139              	.LCFI7:
 140              		.cfi_def_cfa_offset 16
 141 0034 00AF     		add	r7, sp, #0	@,,
 142              	.LCFI8:
 143              		.cfi_def_cfa_register 7
 144 0036 7860     		str	r0, [r7, #4]	@ IRQn, IRQn
 145              	@ interrupts.h:307:     NVIC->ICER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 307:interrupts.h  ****     NVIC->ICER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 146              		.loc 1 307 66
 147 0038 7B68     		ldr	r3, [r7, #4]	@ tmp114, IRQn
 148 003a 03F01F02 		and	r2, r3, #31	@ _1, tmp114,
 149              	@ interrupts.h:307:     NVIC->ICER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 150              		.loc 1 307 9
 151 003e 0749     		ldr	r1, .L5	@ _2,
 152              	@ interrupts.h:307:     NVIC->ICER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 153              		.loc 1 307 29
 154 0040 7B68     		ldr	r3, [r7, #4]	@ tmp115, IRQn
 155 0042 5B09     		lsrs	r3, r3, #5	@ _3, tmp115,
 156              	@ interrupts.h:307:     NVIC->ICER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 157              		.loc 1 307 40
 158 0044 0120     		movs	r0, #1	@ tmp116,
 159 0046 00FA02F2 		lsl	r2, r0, r2	@ _4, tmp116, _1
 160              	@ interrupts.h:307:     NVIC->ICER[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 161              		.loc 1 307 38
 162 004a 2033     		adds	r3, r3, #32	@ tmp117, _3,
 163 004c 41F82320 		str	r2, [r1, r3, lsl #2]	@ unaligned	@ _4,* _2
 164              	@ interrupts.h:308:   }
 308:interrupts.h  ****   }
 165              		.loc 1 308 3
 166 0050 00BF     		nop	
 167 0052 0C37     		adds	r7, r7, #12	@,,
 168              	.LCFI9:
 169              		.cfi_def_cfa_offset 4
 170 0054 BD46     		mov	sp, r7	@,
 171              	.LCFI10:
 172              		.cfi_def_cfa_register 13
 173              		@ sp needed	@
 174 0056 5DF8047B 		ldr	r7, [sp], #4	@,
 175              	.LCFI11:
 176              		.cfi_restore 7
 177              		.cfi_def_cfa_offset 0
 178 005a 7047     		bx	lr	@
 179              	.L6:
 180              		.align	2
 181              	.L5:
 182 005c 00E100E0 		.word	-536813312
 183              		.cfi_endproc
 184              	.LFE4:
 186              		.align	1
 187              		.syntax unified
 188              		.thumb
 189              		.thumb_func
 190              		.fpu fpv4-sp-d16
 192              	NVIC_ClearPendingIRQ:
 193              	.LFB7:
 309:interrupts.h  **** 
 310:interrupts.h  ****   //  Get Pending Interrupt
 311:interrupts.h  ****   //  The function reads the pending register in the NVIC and returns the pending bit
 312:interrupts.h  ****   //  for the specified interrupt.
 313:interrupts.h  ****   //  \param [in]      IRQn  Interrupt number.
 314:interrupts.h  ****   //
 315:interrupts.h  ****   //  \return             0  Interrupt status is not pending.
 316:interrupts.h  ****   //  \return             1  Interrupt status is pending.
 317:interrupts.h  ****   //
 318:interrupts.h  ****   __STATIC_INLINE u32 NVIC_GetPendingIRQ(u32 IRQn)
 319:interrupts.h  ****   {
 320:interrupts.h  ****     return((u32)(((NVIC->ISPR[(((u32)IRQn) >> 5UL)] & (1UL << (((u32)IRQn) & 0x1FUL))) != 0UL) ? 1U
 321:interrupts.h  ****   }
 322:interrupts.h  **** 
 323:interrupts.h  ****   //  Set Pending Interrupt
 324:interrupts.h  ****   //  The function sets the pending bit of an external interrupt.
 325:interrupts.h  ****   //  \param [in]      IRQn  Interrupt number. Value cannot be negative.
 326:interrupts.h  ****   //
 327:interrupts.h  ****   __STATIC_INLINE void NVIC_SetPendingIRQ(u32 IRQn)
 328:interrupts.h  ****   {
 329:interrupts.h  ****     NVIC->ISPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 330:interrupts.h  ****   }
 331:interrupts.h  **** 
 332:interrupts.h  ****   //  Clear Pending Interrupt
 333:interrupts.h  ****   //  The function clears the pending bit of an external interrupt.
 334:interrupts.h  ****   //  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 335:interrupts.h  ****   //
 336:interrupts.h  ****   __STATIC_INLINE void NVIC_ClearPendingIRQ(u32 IRQn)
 337:interrupts.h  ****   {
 194              		.loc 1 337 3
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198              		@ link register save eliminated.
 199 0060 80B4     		push	{r7}	@
 200              	.LCFI12:
 201              		.cfi_def_cfa_offset 4
 202              		.cfi_offset 7, -4
 203 0062 83B0     		sub	sp, sp, #12	@,,
 204              	.LCFI13:
 205              		.cfi_def_cfa_offset 16
 206 0064 00AF     		add	r7, sp, #0	@,,
 207              	.LCFI14:
 208              		.cfi_def_cfa_register 7
 209 0066 7860     		str	r0, [r7, #4]	@ IRQn, IRQn
 210              	@ interrupts.h:338:     NVIC->ICPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 338:interrupts.h  ****     NVIC->ICPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 211              		.loc 1 338 66
 212 0068 7B68     		ldr	r3, [r7, #4]	@ tmp114, IRQn
 213 006a 03F01F02 		and	r2, r3, #31	@ _1, tmp114,
 214              	@ interrupts.h:338:     NVIC->ICPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 215              		.loc 1 338 9
 216 006e 0749     		ldr	r1, .L8	@ _2,
 217              	@ interrupts.h:338:     NVIC->ICPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 218              		.loc 1 338 29
 219 0070 7B68     		ldr	r3, [r7, #4]	@ tmp115, IRQn
 220 0072 5B09     		lsrs	r3, r3, #5	@ _3, tmp115,
 221              	@ interrupts.h:338:     NVIC->ICPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 222              		.loc 1 338 40
 223 0074 0120     		movs	r0, #1	@ tmp116,
 224 0076 00FA02F2 		lsl	r2, r0, r2	@ _4, tmp116, _1
 225              	@ interrupts.h:338:     NVIC->ICPR[(((u32)IRQn) >> 5UL)] = (u32)(1UL << (((u32)IRQn) & 0x1FUL));
 226              		.loc 1 338 38
 227 007a 6033     		adds	r3, r3, #96	@ tmp117, _3,
 228 007c 41F82320 		str	r2, [r1, r3, lsl #2]	@ unaligned	@ _4,* _2
 229              	@ interrupts.h:339:   }
 339:interrupts.h  ****   }
 230              		.loc 1 339 3
 231 0080 00BF     		nop	
 232 0082 0C37     		adds	r7, r7, #12	@,,
 233              	.LCFI15:
 234              		.cfi_def_cfa_offset 4
 235 0084 BD46     		mov	sp, r7	@,
 236              	.LCFI16:
 237              		.cfi_def_cfa_register 13
 238              		@ sp needed	@
 239 0086 5DF8047B 		ldr	r7, [sp], #4	@,
 240              	.LCFI17:
 241              		.cfi_restore 7
 242              		.cfi_def_cfa_offset 0
 243 008a 7047     		bx	lr	@
 244              	.L9:
 245              		.align	2
 246              	.L8:
 247 008c 00E100E0 		.word	-536813312
 248              		.cfi_endproc
 249              	.LFE7:
 251              		.align	1
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu fpv4-sp-d16
 257              	NVIC_SetPriority:
 258              	.LFB9:
 340:interrupts.h  **** 
 341:interrupts.h  ****   //  Get Active Interrupt
 342:interrupts.h  ****   //  The function reads the active register in NVIC and returns the active bit.
 343:interrupts.h  ****   //  \param [in]      IRQn  Interrupt number.
 344:interrupts.h  ****   //
 345:interrupts.h  ****   //  \return             0  Interrupt status is not active.
 346:interrupts.h  ****   //  \return             1  Interrupt status is active.
 347:interrupts.h  ****   //
 348:interrupts.h  ****   __STATIC_INLINE u32 NVIC_GetActive(u32 IRQn)
 349:interrupts.h  ****   {
 350:interrupts.h  ****     return((u32)(((NVIC->IABR[(((u32)IRQn) >> 5UL)] & (1UL << (((u32)IRQn) & 0x1FUL))) != 0UL) ? 1U
 351:interrupts.h  ****   }
 352:interrupts.h  **** 
 353:interrupts.h  ****   //  Set Interrupt Priority
 354:interrupts.h  ****   //  The function sets the priority of an interrupt.
 355:interrupts.h  ****   //  \note The priority cannot be set for every core interrupt.
 356:interrupts.h  ****   //  \param [in]      IRQn  Interrupt number.
 357:interrupts.h  ****   //  \param [in]  priority  Priority to set. in range of 0 to 0x0F
 358:interrupts.h  ****   //
 359:interrupts.h  ****   __STATIC_INLINE void NVIC_SetPriority(u32 IRQn, u32 priority)
 360:interrupts.h  ****   {
 259              		.loc 1 360 3
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 8
 262              		@ frame_needed = 1, uses_anonymous_args = 0
 263              		@ link register save eliminated.
 264 0090 80B4     		push	{r7}	@
 265              	.LCFI18:
 266              		.cfi_def_cfa_offset 4
 267              		.cfi_offset 7, -4
 268 0092 83B0     		sub	sp, sp, #12	@,,
 269              	.LCFI19:
 270              		.cfi_def_cfa_offset 16
 271 0094 00AF     		add	r7, sp, #0	@,,
 272              	.LCFI20:
 273              		.cfi_def_cfa_register 7
 274 0096 7860     		str	r0, [r7, #4]	@ IRQn, IRQn
 275 0098 3960     		str	r1, [r7]	@ priority, priority
 276              	@ interrupts.h:361:     NVIC->IP[((u32)IRQn)] = (u08)((priority << (8 - __NVIC_PRIO_BITS)) & (u32)0
 361:interrupts.h  ****     NVIC->IP[((u32)IRQn)] = (u08)((priority << (8 - __NVIC_PRIO_BITS)) & (u32)0xFFUL);
 277              		.loc 1 361 29
 278 009a 3B68     		ldr	r3, [r7]	@ tmp113, priority
 279 009c DBB2     		uxtb	r3, r3	@ _1, tmp113
 280              	@ interrupts.h:361:     NVIC->IP[((u32)IRQn)] = (u08)((priority << (8 - __NVIC_PRIO_BITS)) & (u32)0
 281              		.loc 1 361 9
 282 009e 074A     		ldr	r2, .L11	@ _2,
 283              	@ interrupts.h:361:     NVIC->IP[((u32)IRQn)] = (u08)((priority << (8 - __NVIC_PRIO_BITS)) & (u32)0
 284              		.loc 1 361 29
 285 00a0 1B01     		lsls	r3, r3, #4	@ tmp114, _1,
 286 00a2 D9B2     		uxtb	r1, r3	@ _3, tmp114
 287              	@ interrupts.h:361:     NVIC->IP[((u32)IRQn)] = (u08)((priority << (8 - __NVIC_PRIO_BITS)) & (u32)0
 288              		.loc 1 361 27
 289 00a4 7B68     		ldr	r3, [r7, #4]	@ tmp116, IRQn
 290 00a6 1344     		add	r3, r3, r2	@ tmp115, _2
 291 00a8 03F54073 		add	r3, r3, #768	@ tmp117, tmp115,
 292 00ac 0A46     		mov	r2, r1	@ tmp118, _3
 293 00ae 1A70     		strb	r2, [r3]	@ tmp118, _2->IP
 294              	@ interrupts.h:362:   }
 362:interrupts.h  ****   }
 295              		.loc 1 362 3
 296 00b0 00BF     		nop	
 297 00b2 0C37     		adds	r7, r7, #12	@,,
 298              	.LCFI21:
 299              		.cfi_def_cfa_offset 4
 300 00b4 BD46     		mov	sp, r7	@,
 301              	.LCFI22:
 302              		.cfi_def_cfa_register 13
 303              		@ sp needed	@
 304 00b6 5DF8047B 		ldr	r7, [sp], #4	@,
 305              	.LCFI23:
 306              		.cfi_restore 7
 307              		.cfi_def_cfa_offset 0
 308 00ba 7047     		bx	lr	@
 309              	.L12:
 310              		.align	2
 311              	.L11:
 312 00bc 00E100E0 		.word	-536813312
 313              		.cfi_endproc
 314              	.LFE9:
 316              		.comm	ubNVICpriorityTable,100,4
 317              		.global	g_pfnVectors
 318              		.section	.isr_vector,"a"
 319              		.align	2
 322              	g_pfnVectors:
 323 0000 00000000 		.word	_estack
 324 0004 00000000 		.word	fnReset_IRQ
 325 0008 00000000 		.word	fnNMI_IRQ
 326 000c 00000000 		.word	fnHardFault_IRQ
 327 0010 00000000 		.word	fnMemManage_IRQ
 328 0014 00000000 		.word	fnBusFault_IRQ
 329 0018 00000000 		.word	fnIllegal_IRQ
 330 001c 00000000 		.word	fnNull_IRQ
 331 0020 00000000 		.word	fnNull_IRQ
 332 0024 00000000 		.word	fnNull_IRQ
 333 0028 00000000 		.word	fnNull_IRQ
 334 002c 00000000 		.word	fnSVC_IRQ
 335 0030 00000000 		.word	fnDebug_IRQ
 336 0034 00000000 		.word	fnNull_IRQ
 337 0038 00000000 		.word	fnPendSVC_IRQ
 338 003c 00000000 		.word	fnSysTick_IRQ
 339 0040 00000000 		.word	fnWWDG_IRQ
 340 0044 00000000 		.word	fnPVD_IRQ
 341 0048 00000000 		.word	fnRTC_IRQ
 342 004c 00000000 		.word	fnRTC_WKUP_IRQ
 343 0050 00000000 		.word	fnFLASH_IRQ
 344 0054 00000000 		.word	fnRCC_IRQ
 345 0058 00000000 		.word	fnEXTI_0_IRQ
 346 005c 00000000 		.word	fnEXTI_1_IRQ
 347 0060 00000000 		.word	fnEXTI_2_IRQ
 348 0064 00000000 		.word	fnEXTI_3_IRQ
 349 0068 00000000 		.word	fnEXTI_4_IRQ
 350 006c 00000000 		.word	fnDMA_11_IRQ
 351 0070 00000000 		.word	fnDMA_12_IRQ
 352 0074 00000000 		.word	fnDMA_13_IRQ
 353 0078 00000000 		.word	fnDMA_14_IRQ
 354 007c 00000000 		.word	fnDMA_15_IRQ
 355 0080 00000000 		.word	fnDMA_16_IRQ
 356 0084 00000000 		.word	fnDMA_17_IRQ
 357 0088 00000000 		.word	fnADC_IRQ
 358 008c 00000000 		.word	fnCAN1_TX_IRQ
 359 0090 00000000 		.word	fnCAN1_RX0_IRQ
 360 0094 00000000 		.word	fnCAN1_RX1_IRQ
 361 0098 00000000 		.word	fnCAN1_SCE_IRQ
 362 009c 00000000 		.word	fnEXTI_5_9_IRQ
 363 00a0 00000000 		.word	fnTIM1_BK_TIM15_IRQ
 364 00a4 00000000 		.word	fnTIM1_UP_TIM16_IRQ
 365 00a8 00000000 		.word	fnTIM1_TRG_COM_IRQ
 366 00ac 00000000 		.word	fnTIM1_CC_IRQ
 367 00b0 00000000 		.word	fnTIM2_IRQ
 368 00b4 00000000 		.word	fnTIM3_IRQ
 369 00b8 00000000 		.word	fnTIM4_IRQ
 370 00bc 00000000 		.word	fnI2C1_EV_IRQ
 371 00c0 00000000 		.word	fnI2C1_ER_IRQ
 372 00c4 00000000 		.word	fnI2C2_EV_IRQ
 373 00c8 00000000 		.word	fnI2C2_ER_IRQ
 374 00cc 00000000 		.word	fnSPI1_IRQ
 375 00d0 00000000 		.word	fnSPI2_IRQ
 376 00d4 00000000 		.word	fnUSART1_IRQ
 377 00d8 00000000 		.word	fnUSART2_IRQ
 378 00dc 00000000 		.word	fnUSART3_IRQ
 379 00e0 00000000 		.word	fnEXTI_10_15_IRQ
 380 00e4 00000000 		.word	fnRTC_ALARM_IRQ
 381 00e8 00000000 		.word	fnNull_IRQ
 382 00ec 00000000 		.word	fnNull_IRQ
 383 00f0 00000000 		.word	fnNull_IRQ
 384 00f4 00000000 		.word	fnNull_IRQ
 385 00f8 00000000 		.word	fnNull_IRQ
 386 00fc 00000000 		.word	fnNull_IRQ
 387 0100 00000000 		.word	fnNull_IRQ
 388 0104 00000000 		.word	fnSDMMC1_IRQ
 389 0108 00000000 		.word	fnNull_IRQ
 390 010c 00000000 		.word	fnSPI3_IRQ
 391 0110 00000000 		.word	fnUSART4_IRQ
 392 0114 00000000 		.word	fnNull_IRQ
 393 0118 00000000 		.word	fnTIM6_IRQ
 394 011c 00000000 		.word	fnTIM7_IRQ
 395 0120 00000000 		.word	fnDMA_21_IRQ
 396 0124 00000000 		.word	fnDMA_22_IRQ
 397 0128 00000000 		.word	fnDMA_23_IRQ
 398 012c 00000000 		.word	fnDMA_24_IRQ
 399 0130 00000000 		.word	fnDMA_25_IRQ
 400 0134 00000000 		.word	fnNull_IRQ
 401 0138 00000000 		.word	fnNull_IRQ
 402 013c 00000000 		.word	fnNull_IRQ
 403 0140 00000000 		.word	fnCOMP_IRQ
 404 0144 00000000 		.word	fnLPTIM1_IRQ
 405 0148 00000000 		.word	fnLPTIM2_IRQ
 406 014c 00000000 		.word	fnUSB_FS_IRQ
 407 0150 00000000 		.word	fnDMA_26_IRQ
 408 0154 00000000 		.word	fnDMA_27_IRQ
 409 0158 00000000 		.word	fnLPUART1_IRQ
 410 015c 00000000 		.word	fnQUADSPI_IRQ
 411 0160 00000000 		.word	fnI2C3_EV_IRQ
 412 0164 00000000 		.word	fnI2C3_ER_IRQ
 413 0168 00000000 		.word	fnSAI_IRQ
 414 016c 00000000 		.word	fnNull_IRQ
 415 0170 00000000 		.word	fnSWPMI1_IRQ
 416 0174 00000000 		.word	fnTSC_IRQ
 417 0178 00000000 		.word	fnNull_IRQ
 418 017c 00000000 		.word	fnNull_IRQ
 419 0180 00000000 		.word	fnRNG_IRQ
 420 0184 00000000 		.word	fnFPU_IRQ
 421 0188 00000000 		.word	fnCRS_IRQ
 422 018c 00000000 		.word	fnNull_IRQ
 423 0190 00000000 		.word	fnNull_IRQ
 424 0194 00000000 		.word	fnNull_IRQ
 425 0198 00000000 		.word	fnNull_IRQ
 426 019c 00000000 		.word	fnNull_IRQ
 427 01a0 00000000 		.word	fnNull_IRQ
 428 01a4 00000000 		.word	fnNull_IRQ
 429 01a8 00000000 		.word	fnNull_IRQ
 430 01ac 00000000 		.word	fnNull_IRQ
 431              		.text
 432              		.align	1
 433              		.global	fnInitNVIC
 434              		.syntax unified
 435              		.thumb
 436              		.thumb_func
 437              		.fpu fpv4-sp-d16
 439              	fnInitNVIC:
 440              	.LFB11:
 441              		.file 2 "interrupts.c"
   1:interrupts.c  **** //---------------------------------------------------------------------------------------------
   2:interrupts.c  **** //                                       Quorb Inc.
   3:interrupts.c  **** //                               -------------------------
   4:interrupts.c  **** //
   5:interrupts.c  **** //                              Interrupt Service Routines
   6:interrupts.c  **** //                              ---------------------------
   7:interrupts.c  **** //
   8:interrupts.c  **** //                           Written By:  Sancar James Fredsti
   9:interrupts.c  **** //---------------------------------------------------------------------------------------------
  10:interrupts.c  **** 
  11:interrupts.c  **** #include  "projectdefs.h"
  12:interrupts.c  **** 
  13:interrupts.c  **** //---------------------------------------------------------------------------------------------
  14:interrupts.c  **** //    Interrupt Definition Table
  15:interrupts.c  **** //---------------------------------------------------------------------------------------------
  16:interrupts.c  **** //--- STM32L432 Nested Interrupt Controller Interrupt number defines
  17:interrupts.c  **** //
  18:interrupts.c  **** //  Top of NVIC Area
  19:interrupts.c  **** //  #define NonMaskableInt_IRQn        -14  //--- 2 Cortex-M4 Non Maskable Interrupt
  20:interrupts.c  **** //  #define HardFault_IRQn             -13  //--- 3 Cortex-M4 Hard Fault Interrupt
  21:interrupts.c  **** //  #define MemoryManagement_IRQn      -12  //--- 4 Cortex-M4 Memory Management Interrupt
  22:interrupts.c  **** //  #define BusFault_IRQn              -11  //--- 5 Cortex-M4 Bus Fault Interrupt
  23:interrupts.c  **** //  #define UsageFault_IRQn            -10  //--- 6 Cortex-M4 Usage Fault Interrupt
  24:interrupts.c  **** //
  25:interrupts.c  **** //  #define uuIRQm9                    -9
  26:interrupts.c  **** //  #define uuIRQm8                    -8
  27:interrupts.c  **** //  #define uuIRQm7                    -7
  28:interrupts.c  **** //  #define uuIRQm9                    -6
  29:interrupts.c  **** //  #define SVCall_IRQn                -5   //--- 11 Cortex-M4 SV Call Interrupt
  30:interrupts.c  **** //  #define DebugMonitor_IRQn          -4   //--- 12 Cortex-M4 Debug Monitor Interrupt
  31:interrupts.c  **** //  #define PendSV_IRQn                -2   //--- 14 Cortex-M4 Pend SV Interrupt
  32:interrupts.c  **** //  #define SysTick_IRQn               -1   //--- 15 Cortex-M4 System Tick Interrupt
  33:interrupts.c  **** //
  34:interrupts.c  **** //--- Peripherial Function Interrupts
  35:interrupts.c  **** //  #define WWDG_IRQn                  0    //--- Window WatchDog Interrupt
  36:interrupts.c  **** //  #define PVD_PVM_IRQn               1    //--- PVD/PVM3/PVM4 through EXTI Line detection Interru
  37:interrupts.c  **** //  #define TAMP_STAMP_IRQn            2    //--- Tamper and TimeStamp interrupts through the EXTI 
  38:interrupts.c  **** //  #define RTC_WKUP_IRQn              3    //--- RTC Wakeup interrupt through the EXTI line
  39:interrupts.c  **** //  #define FLASH_IRQn                 4    //--- FLASH global Interrupt
  40:interrupts.c  **** //  #define RCC_IRQn                   5    //--- RCC global Interrupt
  41:interrupts.c  **** //  #define EXTI0_IRQn                 6    //--- EXTI Line0 Interrupt
  42:interrupts.c  **** //  #define EXTI1_IRQn                 7    //--- EXTI Line1 Interrupt
  43:interrupts.c  **** //  #define EXTI2_IRQn                 8    //--- EXTI Line2 Interrupt
  44:interrupts.c  **** //  #define EXTI3_IRQn                 9    //--- EXTI Line3 Interrupt
  45:interrupts.c  **** //
  46:interrupts.c  **** //  #define EXTI4_IRQn                 10   //--- EXTI Line4 Interrupt
  47:interrupts.c  **** //  #define DMA1_Channel1_IRQn         11   //--- DMA1 Channel 1 global Interrupt
  48:interrupts.c  **** //  #define DMA1_Channel2_IRQn         12   //--- DMA1 Channel 2 global Interrupt
  49:interrupts.c  **** //  #define DMA1_Channel3_IRQn         13   //--- DMA1 Channel 3 global Interrupt
  50:interrupts.c  **** //  #define DMA1_Channel4_IRQn         14   //--- DMA1 Channel 4 global Interrupt
  51:interrupts.c  **** //  #define DMA1_Channel5_IRQn         15   //--- DMA1 Channel 5 global Interrupt
  52:interrupts.c  **** //  #define DMA1_Channel6_IRQn         16   //--- DMA1 Channel 6 global Interrupt
  53:interrupts.c  **** //  #define DMA1_Channel7_IRQn         17   //--- DMA1 Channel 7 global Interrupt
  54:interrupts.c  **** //  #define ADC1_IRQn                  18   //--- ADC1 global Interrupt
  55:interrupts.c  **** //  #define CAN1_TX_IRQn               19   //--- CAN1 TX Interrupt
  56:interrupts.c  **** //
  57:interrupts.c  **** //  #define CAN1_RX0_IRQn              20   //--- CAN1 RX0 Interrupt
  58:interrupts.c  **** //  #define CAN1_RX1_IRQn              21   //--- CAN1 RX1 Interrupt
  59:interrupts.c  **** //  #define CAN1_SCE_IRQn              22   //--- CAN1 SCE Interrupt
  60:interrupts.c  **** //  #define EXTI9_5_IRQn               23   //--- External Line[9:5] Interrupts
  61:interrupts.c  **** //  #define TIM1_BRK_TIM15_IRQn        24   //--- TIM1 Break interrupt and TIM15 global interrupt
  62:interrupts.c  **** //  #define TIM1_UP_TIM16_IRQn         25   //--- TIM1 Update Interrupt and TIM16 global interrupt
  63:interrupts.c  **** //  #define TIM1_TRG_COM_IRQn          26   //--- TIM1 Trigger and Commutation Interrupt
  64:interrupts.c  **** //  #define TIM1_CC_IRQn               27   //--- TIM1 Capture Compare Interrupt
  65:interrupts.c  **** //  #define TIM2_IRQn                  28   //--- TIM2 global Interrupt
  66:interrupts.c  **** //  #define uuIRQi29                   29
  67:interrupts.c  **** //
  68:interrupts.c  **** //  #define uuIRQi30                   30
  69:interrupts.c  **** //  #define I2C1_EV_IRQn               31   //--- I2C1 Event Interrupt
  70:interrupts.c  **** //  #define I2C1_ER_IRQn               32   //--- I2C1 Error Interrupt
  71:interrupts.c  **** //  #define I2C2_EV_IRQn               33   //--- I2C2 Event Interrupt
  72:interrupts.c  **** //  #define I2C2_ER_IRQn               34   //--- I2C2 Error Interrupt
  73:interrupts.c  **** //  #define SPI1_IRQn                  35   //--- SPI1 global Interrupt
  74:interrupts.c  **** //  #define SPI2_IRQn                  36   //--- SPI2 global Interrupt
  75:interrupts.c  **** //  #define USART1_IRQn                37   //--- USART1 global Interrupt
  76:interrupts.c  **** //  #define USART2_IRQn                38   //--- USART2 global Interrupt
  77:interrupts.c  **** //  #define USART3_IRQn                39   //--- USART3 global Interrupt
  78:interrupts.c  **** //
  79:interrupts.c  **** //  #define EXTI15_10_IRQn             40   //--- External Line[15:10] Interrupts
  80:interrupts.c  **** //  #define RTC_Alarm_IRQn             41   //--- RTC Alarm (A and B) through EXTI Line Interrupt
  81:interrupts.c  **** //  #define uuIRQi42                   42
  82:interrupts.c  **** //  #define uuIRQi43                   43
  83:interrupts.c  **** //  #define uuIRQi44                   44
  84:interrupts.c  **** //  #define uuIRQi45                   45
  85:interrupts.c  **** //  #define uuIRQi46                   46
  86:interrupts.c  **** //  #define uuIRQi47                   47
  87:interrupts.c  **** //  #define uuIRQi48                   48
  88:interrupts.c  **** //  #define SDMMC1_IRQn                49   //--- SDMMC1 global Interrupt
  89:interrupts.c  **** //
  90:interrupts.c  **** //  #define uuIRQi50                   50
  91:interrupts.c  **** //  #define SPI3_IRQn                  51   //--- SPI3 global Interrupt
  92:interrupts.c  **** //  #define uuIRQi52                   52
  93:interrupts.c  **** //  #define uuIRQi53                   53
  94:interrupts.c  **** //  #define TIM6_DAC_IRQn              54   //--- TIM6 global and DAC1&2 underrun error  interrupts
  95:interrupts.c  **** //  #define TIM7_IRQn                  55   //--- TIM7 global interrupt
  96:interrupts.c  **** //  #define DMA2_Channel1_IRQn         56   //--- DMA2 Channel 1 global Interrupt
  97:interrupts.c  **** //  #define DMA2_Channel2_IRQn         57   //--- DMA2 Channel 2 global Interrupt
  98:interrupts.c  **** //  #define DMA2_Channel3_IRQn         58   //--- DMA2 Channel 3 global Interrupt
  99:interrupts.c  **** //  #define DMA2_Channel4_IRQn         59   //--- DMA2 Channel 4 global Interrupt
 100:interrupts.c  **** //
 101:interrupts.c  **** //  #define DMA2_Channel5_IRQn         60   //--- DMA2 Channel 5 global Interrupt
 102:interrupts.c  **** //  #define uuIRQi61                   61
 103:interrupts.c  **** //  #define uuIRQi62                   62
 104:interrupts.c  **** //  #define uuIRQi63                   63
 105:interrupts.c  **** //  #define COMP_IRQn                  64   //--- COMP1 and COMP2 Interrupts
 106:interrupts.c  **** //  #define LPTIM1_IRQn                65   //--- LP TIM1 interrupt
 107:interrupts.c  **** //  #define LPTIM2_IRQn                66   //--- LP TIM2 interrupt
 108:interrupts.c  **** //  #define USB_IRQn                   67   //--- USB event Interrupt
 109:interrupts.c  **** //  #define DMA2_Channel6_IRQn         68   //--- DMA2 Channel 6 global interrupt
 110:interrupts.c  **** //  #define DMA2_Channel7_IRQn         69   //--- DMA2 Channel 7 global interrupt
 111:interrupts.c  **** //
 112:interrupts.c  **** //  #define LPUART1_IRQn               70   //--- LP UART1 interrupt
 113:interrupts.c  **** //  #define QUADSPI_IRQn               71   //--- Quad SPI global interrupt
 114:interrupts.c  **** //  #define I2C3_EV_IRQn               72   //--- I2C3 event interrupt
 115:interrupts.c  **** //  #define I2C3_ER_IRQn               73   //--- I2C3 error interrupt
 116:interrupts.c  **** //  #define SAI1_IRQn                  74   //--- Serial Audio Interface 1 global interrupt
 117:interrupts.c  **** //  #define uuIRQi75                   75
 118:interrupts.c  **** //  #define SWPMI1_IRQn                76   //--- Serial Wire Interface 1 global interrupt
 119:interrupts.c  **** //  #define TSC_IRQn                   77   //--- Touch Sense Controller global interrupt
 120:interrupts.c  **** //  #define uuIRQi78                   78
 121:interrupts.c  **** //  #define uuIRQi79                   79
 122:interrupts.c  **** //
 123:interrupts.c  **** //  #define RNG_IRQn                   80   //--- RNG global interrupt
 124:interrupts.c  **** //  #define FPU_IRQn                   81   //--- FPU global interrupt
 125:interrupts.c  **** //  #define CRS_IRQn                   82   //--- CRS global interrupt
 126:interrupts.c  **** //  #define uuIRQi83                   83
 127:interrupts.c  **** //  #define uuIRQi84                   84
 128:interrupts.c  **** //  #define uuIRQi85                   85
 129:interrupts.c  **** //  #define uuIRQi86                   86
 130:interrupts.c  **** //  #define uuIRQi87                   87
 131:interrupts.c  **** //  #define uuIRQi88                   88
 132:interrupts.c  **** //  #define uuIRQi89                   89
 133:interrupts.c  **** //
 134:interrupts.c  **** //  #define uuIRQi90                   90
 135:interrupts.c  **** //  #define uuIRQi91                   91
 136:interrupts.c  **** //  #define uuIRQi92                   92
 137:interrupts.c  **** //  #define uuIRQi93                   93
 138:interrupts.c  **** //  #define uuIRQi94                   94
 139:interrupts.c  **** //  #define uuIRQi95                   95
 140:interrupts.c  **** //  #define uuIRQi96                   96
 141:interrupts.c  **** //  #define uuIRQi97                   97
 142:interrupts.c  **** //  #define uuIRQi98                   98
 143:interrupts.c  **** //  #define uuIRQi99                   99
 144:interrupts.c  **** //
 145:interrupts.c  **** //---------------------------------------------------------------------------------------------
 146:interrupts.c  **** 
 147:interrupts.c  ****   u08 const ubNVICpriorityTable [100];
 148:interrupts.c  **** 
 149:interrupts.c  **** //---------------------------------------------------------------------------------------------
 150:interrupts.c  **** // Interrupt Vector Table, Flash at Base Address 0x00000000 Table Len = (96 + 16) * 4 = 1C8
 151:interrupts.c  **** //---------------------------------------------------------------------------------------------
 152:interrupts.c  **** __attribute__ ((section(".isr_vector"))) void (* const g_pfnVectors[]) (void) =
 153:interrupts.c  **** {
 154:interrupts.c  ****   _estack,               //--- Points to Top of Stack location in RAM  0x20010000
 155:interrupts.c  **** 
 156:interrupts.c  ****   //--- System Interrupts
 157:interrupts.c  ****   //    System Function Interrupt Vectors
 158:interrupts.c  **** 
 159:interrupts.c  ****   //--- Function_Name     IRQ ##                                       NVIC Table Offset
 160:interrupts.c  ****   //-------------------- ------   -------------------------           ------------
 161:interrupts.c  ****   fnReset_IRQ,           // -15   Reset IRQ                            0x00000004
 162:interrupts.c  ****   fnNMI_IRQ,             // -14   NMI IRQ                              0x00000008
 163:interrupts.c  ****   fnHardFault_IRQ,       // -13   Hard Fault IRQ                       0x0000000C
 164:interrupts.c  ****   fnMemManage_IRQ,       // -12   Memory Management Fault              0x00000010
 165:interrupts.c  ****   fnBusFault_IRQ,        // -11   Bus Fault                            0x00000014
 166:interrupts.c  ****   fnIllegal_IRQ,         // -10   Bad Instruction                      0x00000018
 167:interrupts.c  **** 
 168:interrupts.c  ****   fnNull_IRQ,            // - 9   Blank                                0x0000001C
 169:interrupts.c  ****   fnNull_IRQ,            // - 8   Blank                                0x00000020
 170:interrupts.c  ****   fnNull_IRQ,            // - 7   Blank                                0x00000024
 171:interrupts.c  ****   fnNull_IRQ,            // - 6   Blank                                0x00000028
 172:interrupts.c  **** 
 173:interrupts.c  ****   fnSVC_IRQ,             // - 5   SVCall IRQ                           0x0000002C
 174:interrupts.c  ****   fnDebug_IRQ,           // - 4   Debug IRQ                            0x00000030
 175:interrupts.c  ****   fnNull_IRQ,            // - 3   Blank                                0x00000034
 176:interrupts.c  ****   fnPendSVC_IRQ,         // - 2   PendSV IRQ                           0x00000038
 177:interrupts.c  ****   fnSysTick_IRQ,         // - 1   SysTick IRQ Non Maskable Tick        0x0000003C
 178:interrupts.c  **** 
 179:interrupts.c  ****   //--- Peripherial Interrupts
 180:interrupts.c  ****   fnWWDG_IRQ,            // 00 - Window Watchdog                       0x00000040
 181:interrupts.c  ****   fnPVD_IRQ,             // 01 - PVD through EXTI Line detect          0x00000044
 182:interrupts.c  ****   fnRTC_IRQ,             // 02 - RTC Time Stamp                        0x00000048
 183:interrupts.c  ****   fnRTC_WKUP_IRQ,        // 03 - RTC Wake Up                           0x0000004C
 184:interrupts.c  ****   fnFLASH_IRQ,           // 04 - Flash                                 0x00000050
 185:interrupts.c  **** 
 186:interrupts.c  ****   fnRCC_IRQ,             // 05 - RCC                                   0x00000050
 187:interrupts.c  ****   fnEXTI_0_IRQ,          // 06 - EXTI Line 0                           0x00000054
 188:interrupts.c  ****   fnEXTI_1_IRQ,          // 07 - EXTI Line 1                           0x00000058
 189:interrupts.c  ****   fnEXTI_2_IRQ,          // 08 - EXTI Line 2                           0x0000005C
 190:interrupts.c  ****   fnEXTI_3_IRQ,          // 09 - EXTI Line 3                           0x00000060
 191:interrupts.c  ****   fnEXTI_4_IRQ,          // 10 - EXTI Line 4                           0x00000068
 192:interrupts.c  **** 
 193:interrupts.c  ****   fnDMA_11_IRQ,          // 11 - DMA1 Channel 1                        0x0000006C
 194:interrupts.c  ****   fnDMA_12_IRQ,          // 12 - DMA1 Channel 2                        0x00000070
 195:interrupts.c  ****   fnDMA_13_IRQ,          // 13 - DMA1 Channel 3                        0x00000074
 196:interrupts.c  ****   fnDMA_14_IRQ,          // 14 - DMA1 Channel 4                        0x00000078
 197:interrupts.c  ****   fnDMA_15_IRQ,          // 15 - DMA1 Channel 5                        0x0000007C
 198:interrupts.c  ****   fnDMA_16_IRQ,          // 16 - DMA1 Channel 6                        0x00000080
 199:interrupts.c  ****   fnDMA_17_IRQ,          // 17 - DMA1 Channel 7                        0x00000084
 200:interrupts.c  **** 
 201:interrupts.c  ****   fnADC_IRQ,             // 18 - ADC1 & ADC2                           0x00000088
 202:interrupts.c  **** 
 203:interrupts.c  ****   fnCAN1_TX_IRQ,         // 19 - CAN1 TX                               0x0000008C
 204:interrupts.c  ****   fnCAN1_RX0_IRQ,        // 20 - CAN1 RX0                              0x00000090
 205:interrupts.c  ****   fnCAN1_RX1_IRQ,        // 21 - CAN1 RX1                              0x00000094
 206:interrupts.c  ****   fnCAN1_SCE_IRQ,        // 22 - CAN1 SCE                              0x00000098
 207:interrupts.c  **** 
 208:interrupts.c  ****   fnEXTI_5_9_IRQ,        // 23 - EXTI Line 5_9                         0x0000009C
 209:interrupts.c  **** 
 210:interrupts.c  ****   fnTIM1_BK_TIM15_IRQ,   // 24 - TIM1 Break                            0x000000A0
 211:interrupts.c  ****   fnTIM1_UP_TIM16_IRQ,   // 25 - TIM1 Update                           0x000000A4
 212:interrupts.c  ****   fnTIM1_TRG_COM_IRQ,    // 26 - TIM1 Trigger                          0x000000A8
 213:interrupts.c  ****   fnTIM1_CC_IRQ,         // 27 - TIM1 Capture Compare                  0x000000AC
 214:interrupts.c  **** 
 215:interrupts.c  ****   fnTIM2_IRQ,            // 28 - TIM2 Global                           0x000000B0
 216:interrupts.c  ****   fnTIM3_IRQ,            // 29 - TIM3 Global                           0x000000B4
 217:interrupts.c  ****   fnTIM4_IRQ,            // 30 - TIM4 Global                           0x000000B8
 218:interrupts.c  **** 
 219:interrupts.c  ****   fnI2C1_EV_IRQ,         // 31 - I2C1 Event                            0x000000BC
 220:interrupts.c  ****   fnI2C1_ER_IRQ,         // 32 - I2C1 Error                            0x000000C0
 221:interrupts.c  ****   fnI2C2_EV_IRQ,         // 33 - I2C2 Event                            0x000000C4
 222:interrupts.c  ****   fnI2C2_ER_IRQ,         // 34 - I2C2 Error                            0x000000C8
 223:interrupts.c  **** 
 224:interrupts.c  ****   fnSPI1_IRQ,            // 35 - SPI1 General Interrupt                0x000000CC
 225:interrupts.c  ****   fnSPI2_IRQ,            // 36 - SPI2 General Interrupt                0x000000D0
 226:interrupts.c  **** 
 227:interrupts.c  ****   fnUSART1_IRQ,          // 37 - USART1 General Interrupt              0x000000D4
 228:interrupts.c  ****   fnUSART2_IRQ,          // 38 - USART2 General Interrupt              0x000000D8
 229:interrupts.c  ****   fnUSART3_IRQ,          // 39 - USART3 General Interrupt              0x000000DC
 230:interrupts.c  **** 
 231:interrupts.c  ****   fnEXTI_10_15_IRQ,      // 40 - EXTI Lines 10-15                      0x000000E0
 232:interrupts.c  ****   fnRTC_ALARM_IRQ,       // 41 - RTC Alarm+                            0x000000E4
 233:interrupts.c  **** 
 234:interrupts.c  ****   fnNull_IRQ,            // 42 - Blank                                 0x000000E8
 235:interrupts.c  ****   fnNull_IRQ,            // 43 - Blank                                 0x000000EC
 236:interrupts.c  ****   fnNull_IRQ,            // 44 - Blank                                 0x000000F0
 237:interrupts.c  ****   fnNull_IRQ,            // 45 - Blank                                 0x000000F4
 238:interrupts.c  ****   fnNull_IRQ,            // 46 - Blank                                 0x000000F8
 239:interrupts.c  ****   fnNull_IRQ,            // 47 - Blank                                 0x000000FC
 240:interrupts.c  ****   fnNull_IRQ,            // 48 - Blank                                 0x00000100
 241:interrupts.c  **** 
 242:interrupts.c  ****   fnSDMMC1_IRQ,          // 49 - SDMMC1 IRQ                            0x00000104
 243:interrupts.c  **** 
 244:interrupts.c  ****   fnNull_IRQ,            // 50 - Blank                                 0x00000108
 245:interrupts.c  **** 
 246:interrupts.c  ****   fnSPI3_IRQ,            // 51 - SPI3 General Interrupt                0x0000010C
 247:interrupts.c  ****   fnUSART4_IRQ,          // 52 - USART4 General Interrupt              0x00000110
 248:interrupts.c  **** 
 249:interrupts.c  ****   fnNull_IRQ,            // 53 - Blank                                 0x00000114
 250:interrupts.c  **** 
 251:interrupts.c  ****   fnTIM6_IRQ,            // 54 - TIM6 Global DAC Under                 0x00000118
 252:interrupts.c  ****   fnTIM7_IRQ,            // 55 - TIM7 Global                           0x0000011C
 253:interrupts.c  **** 
 254:interrupts.c  ****   fnDMA_21_IRQ,          // 56 - DMA1 Channel 0                        0x00000120
 255:interrupts.c  ****   fnDMA_22_IRQ,          // 57 - DMA1 Channel 1                        0x00000124
 256:interrupts.c  ****   fnDMA_23_IRQ,          // 58 - DMA1 Channel 2                        0x00000128
 257:interrupts.c  ****   fnDMA_24_IRQ,          // 59 - DMA1 Channel 3                        0x0000012C
 258:interrupts.c  ****   fnDMA_25_IRQ,          // 60 - DMA1 Channel 4                        0x00000130
 259:interrupts.c  **** 
 260:interrupts.c  ****   fnNull_IRQ,            // 61 - Blank                                 0x00000134
 261:interrupts.c  ****   fnNull_IRQ,            // 62 - Blank                                 0x00000138
 262:interrupts.c  ****   fnNull_IRQ,            // 63 - Blank                                 0x0000013C
 263:interrupts.c  **** 
 264:interrupts.c  ****   fnCOMP_IRQ,            // 64 - Analog Compare                        0x00000140
 265:interrupts.c  ****   fnLPTIM1_IRQ,          // 65 - CAN1 RX1                              0x00000144
 266:interrupts.c  ****   fnLPTIM2_IRQ,          // 66 - CAN1 SCE                              0x00000148
 267:interrupts.c  **** 
 268:interrupts.c  ****   fnUSB_FS_IRQ,          // 67 - Full Speed USB OTG                    0x0000014C
 269:interrupts.c  **** 
 270:interrupts.c  ****   fnDMA_26_IRQ,          // 68 - DMA2 Channel 6                        0x00000150
 271:interrupts.c  ****   fnDMA_27_IRQ,          // 69 - DMA1 Channel 7                        0x00000154
 272:interrupts.c  ****   fnLPUART1_IRQ,         // 70 - Low Power UART 1                      0x00000158
 273:interrupts.c  ****   fnQUADSPI_IRQ,         // 71 - QUAD SPI                              0x0000015C
 274:interrupts.c  ****   fnI2C3_EV_IRQ,         // 72 - I2C3 Event                            0x00000160
 275:interrupts.c  ****   fnI2C3_ER_IRQ,         // 73 - I2C3 Error                            0x00000164
 276:interrupts.c  ****   fnSAI_IRQ,             // 74 - SAI Event                             0x00000168
 277:interrupts.c  ****   fnNull_IRQ,            // 75 - Blank                                 0x0000016C
 278:interrupts.c  ****   fnSWPMI1_IRQ,          // 76 - SWPMI1 Event                          0x00000170
 279:interrupts.c  ****   fnTSC_IRQ,             // 77 - TSC Event                             0x00000174
 280:interrupts.c  **** 
 281:interrupts.c  ****   fnNull_IRQ,            // 78 - Blank                                 0x00000178
 282:interrupts.c  ****   fnNull_IRQ,            // 79 - Blank                                 0x0000017C
 283:interrupts.c  **** 
 284:interrupts.c  ****   fnRNG_IRQ,             // 80 - Random Number Generator               0x00000180
 285:interrupts.c  ****   fnFPU_IRQ,             // 81 - Floating Point Interrupt              0x00000184
 286:interrupts.c  ****   fnCRS_IRQ,             // 82 - CRS Interrupt                         0x00000188
 287:interrupts.c  **** 
 288:interrupts.c  ****   fnNull_IRQ,            // 83 - Blank                                 0x0000018C
 289:interrupts.c  ****   fnNull_IRQ,            // 84 - Blank                                 0x00000190
 290:interrupts.c  ****   fnNull_IRQ,            // 85 - Blank                                 0x00000194
 291:interrupts.c  ****   fnNull_IRQ,            // 86 - Blank                                 0x00000198
 292:interrupts.c  ****   fnNull_IRQ,            // 87 - Blank                                 0x0000019C
 293:interrupts.c  ****   fnNull_IRQ,            // 88 - Blank                                 0x000001A0
 294:interrupts.c  ****   fnNull_IRQ,            // 89 - Blank                                 0x000001A4
 295:interrupts.c  ****   fnNull_IRQ,            // 90 - Blank                                 0x000001A8
 296:interrupts.c  ****   fnNull_IRQ,            // 91 - Blank                                 0x000001AC
 297:interrupts.c  **** };
 298:interrupts.c  **** 
 299:interrupts.c  **** //---------------------------------------------------------------------------------------------
 300:interrupts.c  **** //                    Initialize Interrupt Structure and NVIC Registers
 301:interrupts.c  **** //---------------------------------------------------------------------------------------------
 302:interrupts.c  **** 
 303:interrupts.c  **** void  fnInitNVIC (void)
 304:interrupts.c  **** {
 442              		.loc 2 304 1
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 8
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446 00c0 80B5     		push	{r7, lr}	@
 447              	.LCFI24:
 448              		.cfi_def_cfa_offset 8
 449              		.cfi_offset 7, -8
 450              		.cfi_offset 14, -4
 451 00c2 82B0     		sub	sp, sp, #8	@,,
 452              	.LCFI25:
 453              		.cfi_def_cfa_offset 16
 454 00c4 00AF     		add	r7, sp, #0	@,,
 455              	.LCFI26:
 456              		.cfi_def_cfa_register 7
 457              	@ interrupts.c:311:   GID;                                            //--- Kill All Interrupts
 305:interrupts.c  ****   u16   uwA;                                      //--- Work Word
 306:interrupts.c  ****   u08   ubA;                                      //--- Work Byte
 307:interrupts.c  ****   u08   ubP;
 308:interrupts.c  **** 
 309:interrupts.c  ****   //:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
 310:interrupts.c  **** 
 311:interrupts.c  ****   GID;                                            //--- Kill All Interrupts
 458              		.loc 2 311 3
 459              		.syntax unified
 460              	@ 311 "interrupts.c" 1
 461 00c6 72B6     		cpsid   i
 462              	@ 0 "" 2
 463              	@ interrupts.c:313:   SCB_AIRCR = 0x05FA0000;                         //--- Reset NVIC to no priori
 312:interrupts.c  **** 
 313:interrupts.c  ****   SCB_AIRCR = 0x05FA0000;                         //--- Reset NVIC to no priority grouping
 464              		.loc 2 313 3
 465              		.thumb
 466              		.syntax unified
 467 00c8 0F4B     		ldr	r3, .L16	@ _1,
 468              	@ interrupts.c:313:   SCB_AIRCR = 0x05FA0000;                         //--- Reset NVIC to no priori
 469              		.loc 2 313 13
 470 00ca 104A     		ldr	r2, .L16+4	@ tmp113,
 471 00cc 1A60     		str	r2, [r3]	@ tmp113, *_1
 472              	@ interrupts.c:318:   for (uwA = 0; uwA < 97; uwA++)
 314:interrupts.c  ****                                                   //    Reads Back as 0xFA05
 315:interrupts.c  **** 
 316:interrupts.c  ****   //--- First Initialize All Priority Registers & Enable Interrupts Byte by Byte
 317:interrupts.c  ****   //    Note: Priority Level of 0 = Interrupt OFF
 318:interrupts.c  ****   for (uwA = 0; uwA < 97; uwA++)
 473              		.loc 2 318 12
 474 00ce 0023     		movs	r3, #0	@ tmp115,
 475 00d0 FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp114, uwA
 476              	@ interrupts.c:318:   for (uwA = 0; uwA < 97; uwA++)
 477              		.loc 2 318 3
 478 00d2 10E0     		b	.L14		@
 479              	.L15:
 480              	@ interrupts.c:320:     ubA = ubInterruptConfigs[uwA];                //--- Get Interrupt Priority 
 319:interrupts.c  ****   {
 320:interrupts.c  ****     ubA = ubInterruptConfigs[uwA];                //--- Get Interrupt Priority and Enable
 481              		.loc 2 320 29 discriminator 3
 482 00d4 FB88     		ldrh	r3, [r7, #6]	@ _2, uwA
 483              	@ interrupts.c:320:     ubA = ubInterruptConfigs[uwA];                //--- Get Interrupt Priority 
 484              		.loc 2 320 9 discriminator 3
 485 00d6 0E4A     		ldr	r2, .L16+8	@ tmp116,
 486 00d8 D35C     		ldrb	r3, [r2, r3]	@ tmp117, ubInterruptConfigs
 487 00da 7B71     		strb	r3, [r7, #5]	@ tmp117, ubA
 488              	@ interrupts.c:321:     ubP = ubA & 0x0F;                             //--- Filter Table Entry for 
 321:interrupts.c  ****     ubP = ubA & 0x0F;                             //--- Filter Table Entry for Priority
 489              		.loc 2 321 9 discriminator 3
 490 00dc 7B79     		ldrb	r3, [r7, #5]	@ tmp118, ubA
 491 00de 03F00F03 		and	r3, r3, #15	@ tmp119, tmp118,
 492 00e2 3B71     		strb	r3, [r7, #4]	@ tmp120, ubP
 493              	@ interrupts.c:322:     fnSetIntPriority (uwA, ubP);                  //--- Set Priority in NVIC
 322:interrupts.c  ****     fnSetIntPriority (uwA, ubP);                  //--- Set Priority in NVIC
 494              		.loc 2 322 5 discriminator 3
 495 00e4 3A79     		ldrb	r2, [r7, #4]	@ zero_extendqisi2	@ tmp121, ubP
 496 00e6 FB88     		ldrh	r3, [r7, #6]	@ tmp122, uwA
 497 00e8 1146     		mov	r1, r2	@, tmp121
 498 00ea 1846     		mov	r0, r3	@, tmp122
 499 00ec FFF7FEFF 		bl	fnSetIntPriority		@
 500              	@ interrupts.c:318:   for (uwA = 0; uwA < 97; uwA++)
 318:interrupts.c  ****   {
 501              		.loc 2 318 30 discriminator 3
 502 00f0 FB88     		ldrh	r3, [r7, #6]	@ uwA.0_3, uwA
 503 00f2 0133     		adds	r3, r3, #1	@ tmp123, uwA.0_3,
 504 00f4 FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp124, uwA
 505              	.L14:
 506              	@ interrupts.c:318:   for (uwA = 0; uwA < 97; uwA++)
 318:interrupts.c  ****   {
 507              		.loc 2 318 3 discriminator 1
 508 00f6 FB88     		ldrh	r3, [r7, #6]	@ tmp127, uwA
 509 00f8 602B     		cmp	r3, #96	@ tmp127,
 510 00fa EBD9     		bls	.L15		@,
 511              	@ interrupts.c:325:   GIE;                                            //--- Restore Interrrupt Enab
 323:interrupts.c  ****   }
 324:interrupts.c  **** 
 325:interrupts.c  ****   GIE;                                            //--- Restore Interrrupt Enable
 512              		.loc 2 325 3
 513              		.syntax unified
 514              	@ 325 "interrupts.c" 1
 515 00fc 62B6     		cpsie   i
 516              	@ 0 "" 2
 517              	@ interrupts.c:326: }
 326:interrupts.c  **** }
 518              		.loc 2 326 1
 519              		.thumb
 520              		.syntax unified
 521 00fe 00BF     		nop	
 522 0100 0837     		adds	r7, r7, #8	@,,
 523              	.LCFI27:
 524              		.cfi_def_cfa_offset 8
 525 0102 BD46     		mov	sp, r7	@,
 526              	.LCFI28:
 527              		.cfi_def_cfa_register 13
 528              		@ sp needed	@
 529 0104 80BD     		pop	{r7, pc}	@
 530              	.L17:
 531 0106 00BF     		.align	2
 532              	.L16:
 533 0108 0CED00E0 		.word	-536810228
 534 010c 0000FA05 		.word	100270080
 535 0110 00000000 		.word	ubInterruptConfigs
 536              		.cfi_endproc
 537              	.LFE11:
 539              		.global	ubInterruptConfigs
 540              		.section	.rodata
 541              		.align	2
 544              	ubInterruptConfigs:
 545 0000 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 545      0F0F0F0F 
 545      0F0F0F0F 
 545      0F
 546 000d 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 546      0F0F0F0F 
 546      0F0F0F0F 
 546      0F
 547 001a 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 547      0F0F0F0F 
 547      0F0F0F0F 
 547      0F
 548 0027 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 548      0F0F0F0F 
 548      0F0F0F0F 
 548      0F
 549 0034 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 549      0F0F0F0F 
 549      0F0F0F0F 
 549      0F
 550 0041 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 550      0F0F0F0F 
 550      0F0F0F0F 
 550      0F
 551 004e 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017\017\017\017\017"
 551      0F0F0F0F 
 551      0F0F0F0F 
 551      0F
 552 005b 0F0F0F0F 		.ascii	"\017\017\017\017\017\017\017\017\017"
 552      0F0F0F0F 
 552      0F
 553              		.text
 554              		.align	1
 555              		.global	fnNull_IRQ
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu fpv4-sp-d16
 561              	fnNull_IRQ:
 562              	.LFB12:
 327:interrupts.c  **** 
 328:interrupts.c  **** //--- Note: Priority Level of 0 = Interrupt OFF
 329:interrupts.c  **** const u08 ubInterruptConfigs[100] =
 330:interrupts.c  ****     {
 331:interrupts.c  ****     //Int0-  0   1   2   3   4   5   6   7   8   9
 332:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 333:interrupts.c  **** 
 334:interrupts.c  ****     //Int1-  0   1   2   3   4   5   6   7   8   9
 335:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 336:interrupts.c  **** 
 337:interrupts.c  ****     //Int2-  0   1   2   3   4   5   6   7   8   9
 338:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 339:interrupts.c  **** 
 340:interrupts.c  ****     //Int3-  0   1   2   3   4   5   6   7   8   9
 341:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 342:interrupts.c  **** 
 343:interrupts.c  ****     //Int4-  0   1   2   3   4   5   6   7   8   9
 344:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 345:interrupts.c  **** 
 346:interrupts.c  ****     //Int5-  0   1   2   3   4   5   6   7   8   9
 347:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 348:interrupts.c  **** 
 349:interrupts.c  ****     //Int6-  0   1   2   3   4   5   6   7   8   9
 350:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 351:interrupts.c  **** 
 352:interrupts.c  ****     //Int7-  0   1   2   3   4   5   6   7   8   9
 353:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 354:interrupts.c  **** 
 355:interrupts.c  ****     //Int8-  0   1   2   3   4   5   6   7   8   9
 356:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15,  //--- Priority 00 to 15  15=Lowest
 357:interrupts.c  **** 
 358:interrupts.c  ****     //Int9-  0   1   2   3   4   5   6   7   8   9
 359:interrupts.c  ****             15, 15, 15, 15, 15, 15, 15, 15, 15, 15   //--- Priority 00 to 15  15=Lowest
 360:interrupts.c  ****     };
 361:interrupts.c  **** 
 362:interrupts.c  **** 
 363:interrupts.c  **** //=============================================================================================
 364:interrupts.c  **** //    Interrupt Handeling Functions
 365:interrupts.c  **** //=============================================================================================
 366:interrupts.c  **** 
 367:interrupts.c  **** 
 368:interrupts.c  **** //=============================================================================================
 369:interrupts.c  **** //  Function Name  : Do Nothing IRQ
 370:interrupts.c  **** //=============================================================================================
 371:interrupts.c  **** void fnNull_IRQ(void)                           //--- IRQ_XX
 372:interrupts.c  **** {
 563              		.loc 2 372 1
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568 0114 80B4     		push	{r7}	@
 569              	.LCFI29:
 570              		.cfi_def_cfa_offset 4
 571              		.cfi_offset 7, -4
 572 0116 00AF     		add	r7, sp, #0	@,,
 573              	.LCFI30:
 574              		.cfi_def_cfa_register 7
 575              	@ interrupts.c:373: }
 373:interrupts.c  **** }
 576              		.loc 2 373 1
 577 0118 00BF     		nop	
 578 011a BD46     		mov	sp, r7	@,
 579              	.LCFI31:
 580              		.cfi_def_cfa_register 13
 581              		@ sp needed	@
 582 011c 5DF8047B 		ldr	r7, [sp], #4	@,
 583              	.LCFI32:
 584              		.cfi_restore 7
 585              		.cfi_def_cfa_offset 0
 586 0120 7047     		bx	lr	@
 587              		.cfi_endproc
 588              	.LFE12:
 590              		.align	1
 591              		.global	fnNMI_IRQ
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu fpv4-sp-d16
 597              	fnNMI_IRQ:
 598              	.LFB13:
 374:interrupts.c  **** 
 375:interrupts.c  **** //---------------------------------------------------------------------------------------------
 376:interrupts.c  **** //  Function Name  : Do Nothing IRQ Service
 377:interrupts.c  **** //---------------------------------------------------------------------------------------------
 378:interrupts.c  **** void fnNMI_IRQ(void)                            //--- IRQ_-14
 379:interrupts.c  **** {
 599              		.loc 2 379 1
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 0
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603              		@ link register save eliminated.
 604 0122 80B4     		push	{r7}	@
 605              	.LCFI33:
 606              		.cfi_def_cfa_offset 4
 607              		.cfi_offset 7, -4
 608 0124 00AF     		add	r7, sp, #0	@,,
 609              	.LCFI34:
 610              		.cfi_def_cfa_register 7
 611              	@ interrupts.c:380: }
 380:interrupts.c  **** }
 612              		.loc 2 380 1
 613 0126 00BF     		nop	
 614 0128 BD46     		mov	sp, r7	@,
 615              	.LCFI35:
 616              		.cfi_def_cfa_register 13
 617              		@ sp needed	@
 618 012a 5DF8047B 		ldr	r7, [sp], #4	@,
 619              	.LCFI36:
 620              		.cfi_restore 7
 621              		.cfi_def_cfa_offset 0
 622 012e 7047     		bx	lr	@
 623              		.cfi_endproc
 624              	.LFE13:
 626              		.align	1
 627              		.global	fnHardFault_IRQ
 628              		.syntax unified
 629              		.thumb
 630              		.thumb_func
 631              		.fpu fpv4-sp-d16
 633              	fnHardFault_IRQ:
 634              	.LFB14:
 381:interrupts.c  **** 
 382:interrupts.c  **** //---------------------------------------------------------------------------------------------
 383:interrupts.c  **** //  Function Name  : HardFaultException Error
 384:interrupts.c  **** //---------------------------------------------------------------------------------------------
 385:interrupts.c  **** void fnHardFault_IRQ(void)                      //--- IRQ_-13
 386:interrupts.c  **** {
 635              		.loc 2 386 1
 636              		.cfi_startproc
 637              		@ args = 0, pretend = 0, frame = 0
 638              		@ frame_needed = 1, uses_anonymous_args = 0
 639              		@ link register save eliminated.
 640 0130 80B4     		push	{r7}	@
 641              	.LCFI37:
 642              		.cfi_def_cfa_offset 4
 643              		.cfi_offset 7, -4
 644 0132 00AF     		add	r7, sp, #0	@,,
 645              	.LCFI38:
 646              		.cfi_def_cfa_register 7
 647              	@ interrupts.c:387: }
 387:interrupts.c  **** }
 648              		.loc 2 387 1
 649 0134 00BF     		nop	
 650 0136 BD46     		mov	sp, r7	@,
 651              	.LCFI39:
 652              		.cfi_def_cfa_register 13
 653              		@ sp needed	@
 654 0138 5DF8047B 		ldr	r7, [sp], #4	@,
 655              	.LCFI40:
 656              		.cfi_restore 7
 657              		.cfi_def_cfa_offset 0
 658 013c 7047     		bx	lr	@
 659              		.cfi_endproc
 660              	.LFE14:
 662              		.align	1
 663              		.global	fnMemManage_IRQ
 664              		.syntax unified
 665              		.thumb
 666              		.thumb_func
 667              		.fpu fpv4-sp-d16
 669              	fnMemManage_IRQ:
 670              	.LFB15:
 388:interrupts.c  **** 
 389:interrupts.c  **** //---------------------------------------------------------------------------------------------
 390:interrupts.c  **** //  Function Name  : Memory Manager
 391:interrupts.c  **** //---------------------------------------------------------------------------------------------
 392:interrupts.c  **** void fnMemManage_IRQ(void)                      //--- IRQ_-12
 393:interrupts.c  **** {
 671              		.loc 2 393 1
 672              		.cfi_startproc
 673              		@ args = 0, pretend = 0, frame = 0
 674              		@ frame_needed = 1, uses_anonymous_args = 0
 675              		@ link register save eliminated.
 676 013e 80B4     		push	{r7}	@
 677              	.LCFI41:
 678              		.cfi_def_cfa_offset 4
 679              		.cfi_offset 7, -4
 680 0140 00AF     		add	r7, sp, #0	@,,
 681              	.LCFI42:
 682              		.cfi_def_cfa_register 7
 683              	@ interrupts.c:394: }
 394:interrupts.c  **** }
 684              		.loc 2 394 1
 685 0142 00BF     		nop	
 686 0144 BD46     		mov	sp, r7	@,
 687              	.LCFI43:
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed	@
 690 0146 5DF8047B 		ldr	r7, [sp], #4	@,
 691              	.LCFI44:
 692              		.cfi_restore 7
 693              		.cfi_def_cfa_offset 0
 694 014a 7047     		bx	lr	@
 695              		.cfi_endproc
 696              	.LFE15:
 698              		.align	1
 699              		.global	fnBusFault_IRQ
 700              		.syntax unified
 701              		.thumb
 702              		.thumb_func
 703              		.fpu fpv4-sp-d16
 705              	fnBusFault_IRQ:
 706              	.LFB16:
 395:interrupts.c  **** 
 396:interrupts.c  **** //---------------------------------------------------------------------------------------------
 397:interrupts.c  **** //  Function Name  : BusFault
 398:interrupts.c  **** //---------------------------------------------------------------------------------------------
 399:interrupts.c  **** void fnBusFault_IRQ(void)                       //--- IRQ_-11
 400:interrupts.c  **** {
 707              		.loc 2 400 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712 014c 80B4     		push	{r7}	@
 713              	.LCFI45:
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 7, -4
 716 014e 00AF     		add	r7, sp, #0	@,,
 717              	.LCFI46:
 718              		.cfi_def_cfa_register 7
 719              	@ interrupts.c:401: }
 401:interrupts.c  **** }
 720              		.loc 2 401 1
 721 0150 00BF     		nop	
 722 0152 BD46     		mov	sp, r7	@,
 723              	.LCFI47:
 724              		.cfi_def_cfa_register 13
 725              		@ sp needed	@
 726 0154 5DF8047B 		ldr	r7, [sp], #4	@,
 727              	.LCFI48:
 728              		.cfi_restore 7
 729              		.cfi_def_cfa_offset 0
 730 0158 7047     		bx	lr	@
 731              		.cfi_endproc
 732              	.LFE16:
 734              		.align	1
 735              		.global	fnIllegal_IRQ
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu fpv4-sp-d16
 741              	fnIllegal_IRQ:
 742              	.LFB17:
 402:interrupts.c  **** 
 403:interrupts.c  **** //---------------------------------------------------------------------------------------------
 404:interrupts.c  **** //  Function Name  : Illegal Instruction
 405:interrupts.c  **** //---------------------------------------------------------------------------------------------
 406:interrupts.c  **** void fnIllegal_IRQ(void)                        //--- IRQ_-10
 407:interrupts.c  **** {
 743              		.loc 2 407 1
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 1, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 748 015a 80B4     		push	{r7}	@
 749              	.LCFI49:
 750              		.cfi_def_cfa_offset 4
 751              		.cfi_offset 7, -4
 752 015c 00AF     		add	r7, sp, #0	@,,
 753              	.LCFI50:
 754              		.cfi_def_cfa_register 7
 755              	@ interrupts.c:408: }
 408:interrupts.c  **** }
 756              		.loc 2 408 1
 757 015e 00BF     		nop	
 758 0160 BD46     		mov	sp, r7	@,
 759              	.LCFI51:
 760              		.cfi_def_cfa_register 13
 761              		@ sp needed	@
 762 0162 5DF8047B 		ldr	r7, [sp], #4	@,
 763              	.LCFI52:
 764              		.cfi_restore 7
 765              		.cfi_def_cfa_offset 0
 766 0166 7047     		bx	lr	@
 767              		.cfi_endproc
 768              	.LFE17:
 770              		.align	1
 771              		.global	fnSVC_IRQ
 772              		.syntax unified
 773              		.thumb
 774              		.thumb_func
 775              		.fpu fpv4-sp-d16
 777              	fnSVC_IRQ:
 778              	.LFB18:
 409:interrupts.c  **** 
 410:interrupts.c  **** //---------------------------------------------------------------------------------------------
 411:interrupts.c  **** //   UnUsed NVIC Table Entries                  //--- IRQ_ -9, -8, -7, -6
 412:interrupts.c  **** //---------------------------------------------------------------------------------------------
 413:interrupts.c  **** 
 414:interrupts.c  **** //---------------------------------------------------------------------------------------------
 415:interrupts.c  **** //  Function Name  : SVCIRQ
 416:interrupts.c  **** //---------------------------------------------------------------------------------------------
 417:interrupts.c  **** void fnSVC_IRQ(void)                            //--- IRQ_ -5
 418:interrupts.c  **** {
 779              		.loc 2 418 1
 780              		.cfi_startproc
 781              		@ args = 0, pretend = 0, frame = 0
 782              		@ frame_needed = 1, uses_anonymous_args = 0
 783              		@ link register save eliminated.
 784 0168 80B4     		push	{r7}	@
 785              	.LCFI53:
 786              		.cfi_def_cfa_offset 4
 787              		.cfi_offset 7, -4
 788 016a 00AF     		add	r7, sp, #0	@,,
 789              	.LCFI54:
 790              		.cfi_def_cfa_register 7
 791              	@ interrupts.c:420:   switch (ubSVCn)
 419:interrupts.c  ****   //--- ubSVCn is set prior to call od svc function
 420:interrupts.c  ****   switch (ubSVCn)
 792              		.loc 2 420 3
 793 016c 194B     		ldr	r3, .L45	@ tmp112,
 794 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2	@ ubSVCn.1_1, ubSVCn
 795 0170 0F2B     		cmp	r3, #15	@ _2,
 796 0172 28D8     		bhi	.L44		@
 797 0174 01A2     		adr	r2, .L27	@ tmp113,
 798 0176 52F823F0 		ldr	pc, [r2, r3, lsl #2]	@ tmp113, _2
 799 017a 00BF     		.p2align 2
 800              	.L27:
 801 017c C7010000 		.word	.L44+1
 802 0180 C7010000 		.word	.L44+1
 803 0184 C7010000 		.word	.L44+1
 804 0188 C7010000 		.word	.L44+1
 805 018c C7010000 		.word	.L44+1
 806 0190 BD010000 		.word	.L37+1
 807 0194 C7010000 		.word	.L44+1
 808 0198 C7010000 		.word	.L44+1
 809 019c C7010000 		.word	.L44+1
 810 01a0 C7010000 		.word	.L44+1
 811 01a4 C7010000 		.word	.L44+1
 812 01a8 C7010000 		.word	.L44+1
 813 01ac C7010000 		.word	.L44+1
 814 01b0 C7010000 		.word	.L44+1
 815 01b4 C7010000 		.word	.L44+1
 816 01b8 C7010000 		.word	.L44+1
 817              		.p2align 1
 818              	.L37:
 819              	@ interrupts.c:439:       asm ( "MOV  R0, #00\n\t"  "MSR  CONTROL, R0\n\t" );
 421:interrupts.c  ****   {
 422:interrupts.c  ****     case 0x00:
 423:interrupts.c  ****       break;
 424:interrupts.c  **** 
 425:interrupts.c  ****     case 0x01:
 426:interrupts.c  ****       break;
 427:interrupts.c  **** 
 428:interrupts.c  ****     case 0x02:
 429:interrupts.c  ****       break;
 430:interrupts.c  **** 
 431:interrupts.c  ****     case 0x03:
 432:interrupts.c  ****       break;
 433:interrupts.c  **** 
 434:interrupts.c  ****     case 0x04:
 435:interrupts.c  ****       break;
 436:interrupts.c  **** 
 437:interrupts.c  ****     //--- Case #5 switches SYSTEM to privileged mode
 438:interrupts.c  ****     case 0x05:
 439:interrupts.c  ****       asm ( "MOV  R0, #00\n\t"  "MSR  CONTROL, R0\n\t" );
 820              		.loc 2 439 7
 821              		.syntax unified
 822              	@ 439 "interrupts.c" 1
 823 01bc 4FF00000 		MOV  R0, #00
 824 01c0 80F31488 		MSR  CONTROL, R0
 825              		
 826              	@ 0 "" 2
 827              	@ interrupts.c:440:       break;
 440:interrupts.c  ****       break;
 828              		.loc 2 440 7
 829              		.thumb
 830              		.syntax unified
 831 01c4 00E0     		b	.L43		@
 832              	.L44:
 833              	@ interrupts.c:473:       break;
 441:interrupts.c  **** 
 442:interrupts.c  ****     case 0x06:
 443:interrupts.c  ****       break;
 444:interrupts.c  **** 
 445:interrupts.c  ****     case 0x07:
 446:interrupts.c  ****       break;
 447:interrupts.c  **** 
 448:interrupts.c  ****     case 0x08:
 449:interrupts.c  ****       break;
 450:interrupts.c  **** 
 451:interrupts.c  ****     case 0x09:
 452:interrupts.c  ****       break;
 453:interrupts.c  **** 
 454:interrupts.c  ****     case 0x0A:
 455:interrupts.c  ****       break;
 456:interrupts.c  **** 
 457:interrupts.c  ****     case 0x0B:
 458:interrupts.c  ****       break;
 459:interrupts.c  **** 
 460:interrupts.c  ****     case 0x0C:
 461:interrupts.c  ****       break;
 462:interrupts.c  **** 
 463:interrupts.c  ****     case 0x0D:
 464:interrupts.c  ****       break;
 465:interrupts.c  **** 
 466:interrupts.c  ****     case 0x0E:
 467:interrupts.c  ****       break;
 468:interrupts.c  **** 
 469:interrupts.c  ****     case 0x0F:
 470:interrupts.c  ****       break;
 471:interrupts.c  **** 
 472:interrupts.c  ****     default:
 473:interrupts.c  ****       break;
 834              		.loc 2 473 7
 835 01c6 00BF     		nop	
 836              	.L43:
 837              	@ interrupts.c:475: }
 474:interrupts.c  ****   }
 475:interrupts.c  **** }
 838              		.loc 2 475 1
 839 01c8 00BF     		nop	
 840 01ca BD46     		mov	sp, r7	@,
 841              	.LCFI55:
 842              		.cfi_def_cfa_register 13
 843              		@ sp needed	@
 844 01cc 5DF8047B 		ldr	r7, [sp], #4	@,
 845              	.LCFI56:
 846              		.cfi_restore 7
 847              		.cfi_def_cfa_offset 0
 848 01d0 7047     		bx	lr	@
 849              	.L46:
 850 01d2 00BF     		.align	2
 851              	.L45:
 852 01d4 00000000 		.word	ubSVCn
 853              		.cfi_endproc
 854              	.LFE18:
 856              		.align	1
 857              		.global	fnDebug_IRQ
 858              		.syntax unified
 859              		.thumb
 860              		.thumb_func
 861              		.fpu fpv4-sp-d16
 863              	fnDebug_IRQ:
 864              	.LFB19:
 476:interrupts.c  **** 
 477:interrupts.c  **** //---------------------------------------------------------------------------------------------
 478:interrupts.c  **** //  Function Name  : Debugger
 479:interrupts.c  **** //---------------------------------------------------------------------------------------------
 480:interrupts.c  **** void fnDebug_IRQ(void)                          //--- IRQ_ -4
 481:interrupts.c  **** {
 865              		.loc 2 481 1
 866              		.cfi_startproc
 867              		@ args = 0, pretend = 0, frame = 0
 868              		@ frame_needed = 1, uses_anonymous_args = 0
 869              		@ link register save eliminated.
 870 01d8 80B4     		push	{r7}	@
 871              	.LCFI57:
 872              		.cfi_def_cfa_offset 4
 873              		.cfi_offset 7, -4
 874 01da 00AF     		add	r7, sp, #0	@,,
 875              	.LCFI58:
 876              		.cfi_def_cfa_register 7
 877              	@ interrupts.c:482: }
 482:interrupts.c  **** }
 878              		.loc 2 482 1
 879 01dc 00BF     		nop	
 880 01de BD46     		mov	sp, r7	@,
 881              	.LCFI59:
 882              		.cfi_def_cfa_register 13
 883              		@ sp needed	@
 884 01e0 5DF8047B 		ldr	r7, [sp], #4	@,
 885              	.LCFI60:
 886              		.cfi_restore 7
 887              		.cfi_def_cfa_offset 0
 888 01e4 7047     		bx	lr	@
 889              		.cfi_endproc
 890              	.LFE19:
 892              		.align	1
 893              		.global	fnPendSVC_IRQ
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	fnPendSVC_IRQ:
 900              	.LFB20:
 483:interrupts.c  **** 
 484:interrupts.c  **** //---------------------------------------------------------------------------------------------
 485:interrupts.c  **** //   UnUsed NVIC Table Entriy                   //--- IRQ_ -3
 486:interrupts.c  **** //---------------------------------------------------------------------------------------------
 487:interrupts.c  **** 
 488:interrupts.c  **** //---------------------------------------------------------------------------------------------
 489:interrupts.c  **** //  Function Name  : PendSVC
 490:interrupts.c  **** //---------------------------------------------------------------------------------------------
 491:interrupts.c  **** void fnPendSVC_IRQ(void)                        //--- IRQ_ -2
 492:interrupts.c  **** {
 901              		.loc 2 492 1
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 1, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906 01e6 80B4     		push	{r7}	@
 907              	.LCFI61:
 908              		.cfi_def_cfa_offset 4
 909              		.cfi_offset 7, -4
 910 01e8 00AF     		add	r7, sp, #0	@,,
 911              	.LCFI62:
 912              		.cfi_def_cfa_register 7
 913              	@ interrupts.c:493: }
 493:interrupts.c  **** }
 914              		.loc 2 493 1
 915 01ea 00BF     		nop	
 916 01ec BD46     		mov	sp, r7	@,
 917              	.LCFI63:
 918              		.cfi_def_cfa_register 13
 919              		@ sp needed	@
 920 01ee 5DF8047B 		ldr	r7, [sp], #4	@,
 921              	.LCFI64:
 922              		.cfi_restore 7
 923              		.cfi_def_cfa_offset 0
 924 01f2 7047     		bx	lr	@
 925              		.cfi_endproc
 926              	.LFE20:
 928              		.align	1
 929              		.global	fnSysTick_IRQ
 930              		.syntax unified
 931              		.thumb
 932              		.thumb_func
 933              		.fpu fpv4-sp-d16
 935              	fnSysTick_IRQ:
 936              	.LFB21:
 494:interrupts.c  **** 
 495:interrupts.c  **** //---------------------------------------------------------------------------------------------
 496:interrupts.c  **** //  Function Name  : SysTickIRQ This function MUST be defined for RTOS
 497:interrupts.c  **** //  Typically this function runs at 1mSec to 0.1 mSec This is a VERY High priority
 498:interrupts.c  **** //---------------------------------------------------------------------------------------------
 499:interrupts.c  **** void fnSysTick_IRQ(void)                        //--- IRQ_- 1
 500:interrupts.c  **** {
 937              		.loc 2 500 1
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 1, uses_anonymous_args = 0
 941 01f4 80B5     		push	{r7, lr}	@
 942              	.LCFI65:
 943              		.cfi_def_cfa_offset 8
 944              		.cfi_offset 7, -8
 945              		.cfi_offset 14, -4
 946 01f6 00AF     		add	r7, sp, #0	@,,
 947              	.LCFI66:
 948              		.cfi_def_cfa_register 7
 949              	@ interrupts.c:501:   fnPacer();                                    //--- Call the Pacer Interrupt 
 501:interrupts.c  ****   fnPacer();                                    //--- Call the Pacer Interrupt Handler Function
 950              		.loc 2 501 3
 951 01f8 FFF7FEFF 		bl	fnPacer		@
 952              	@ interrupts.c:502: }
 502:interrupts.c  **** }
 953              		.loc 2 502 1
 954 01fc 00BF     		nop	
 955 01fe 80BD     		pop	{r7, pc}	@
 956              		.cfi_endproc
 957              	.LFE21:
 959              		.align	1
 960              		.global	fnWWDG_IRQ
 961              		.syntax unified
 962              		.thumb
 963              		.thumb_func
 964              		.fpu fpv4-sp-d16
 966              	fnWWDG_IRQ:
 967              	.LFB22:
 503:interrupts.c  **** 
 504:interrupts.c  **** //---------------------------------------------------------------------------------------------
 505:interrupts.c  **** //  Function Name  : WWDG_IRQ
 506:interrupts.c  **** //---------------------------------------------------------------------------------------------
 507:interrupts.c  **** void fnWWDG_IRQ(void)                           //--- IRQ_00
 508:interrupts.c  **** {
 968              		.loc 2 508 1
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 1, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 973 0200 80B4     		push	{r7}	@
 974              	.LCFI67:
 975              		.cfi_def_cfa_offset 4
 976              		.cfi_offset 7, -4
 977 0202 00AF     		add	r7, sp, #0	@,,
 978              	.LCFI68:
 979              		.cfi_def_cfa_register 7
 980              	@ interrupts.c:509: }
 509:interrupts.c  **** }
 981              		.loc 2 509 1
 982 0204 00BF     		nop	
 983 0206 BD46     		mov	sp, r7	@,
 984              	.LCFI69:
 985              		.cfi_def_cfa_register 13
 986              		@ sp needed	@
 987 0208 5DF8047B 		ldr	r7, [sp], #4	@,
 988              	.LCFI70:
 989              		.cfi_restore 7
 990              		.cfi_def_cfa_offset 0
 991 020c 7047     		bx	lr	@
 992              		.cfi_endproc
 993              	.LFE22:
 995              		.align	1
 996              		.global	fnPVD_IRQ
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1000              		.fpu fpv4-sp-d16
 1002              	fnPVD_IRQ:
 1003              	.LFB23:
 510:interrupts.c  **** 
 511:interrupts.c  **** //---------------------------------------------------------------------------------------------
 512:interrupts.c  **** //  Function Name  : PVD_IRQ
 513:interrupts.c  **** //---------------------------------------------------------------------------------------------
 514:interrupts.c  **** void fnPVD_IRQ(void)                            //--- IRQ_01
 515:interrupts.c  **** {
 1004              		.loc 2 515 1
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 1, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 1009 020e 80B4     		push	{r7}	@
 1010              	.LCFI71:
 1011              		.cfi_def_cfa_offset 4
 1012              		.cfi_offset 7, -4
 1013 0210 00AF     		add	r7, sp, #0	@,,
 1014              	.LCFI72:
 1015              		.cfi_def_cfa_register 7
 1016              	@ interrupts.c:516: }
 516:interrupts.c  **** }
 1017              		.loc 2 516 1
 1018 0212 00BF     		nop	
 1019 0214 BD46     		mov	sp, r7	@,
 1020              	.LCFI73:
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed	@
 1023 0216 5DF8047B 		ldr	r7, [sp], #4	@,
 1024              	.LCFI74:
 1025              		.cfi_restore 7
 1026              		.cfi_def_cfa_offset 0
 1027 021a 7047     		bx	lr	@
 1028              		.cfi_endproc
 1029              	.LFE23:
 1031              		.align	1
 1032              		.global	fnRTC_IRQ
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu fpv4-sp-d16
 1038              	fnRTC_IRQ:
 1039              	.LFB24:
 517:interrupts.c  **** 
 518:interrupts.c  **** //---------------------------------------------------------------------------------------------
 519:interrupts.c  **** //  Function Name  : RTC_IRQ
 520:interrupts.c  **** //---------------------------------------------------------------------------------------------
 521:interrupts.c  **** void fnRTC_IRQ(void)                            //--- IRQ_02
 522:interrupts.c  **** {
 1040              		.loc 2 522 1
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 1045 021c 80B4     		push	{r7}	@
 1046              	.LCFI75:
 1047              		.cfi_def_cfa_offset 4
 1048              		.cfi_offset 7, -4
 1049 021e 00AF     		add	r7, sp, #0	@,,
 1050              	.LCFI76:
 1051              		.cfi_def_cfa_register 7
 1052              	@ interrupts.c:523: }
 523:interrupts.c  **** }
 1053              		.loc 2 523 1
 1054 0220 00BF     		nop	
 1055 0222 BD46     		mov	sp, r7	@,
 1056              	.LCFI77:
 1057              		.cfi_def_cfa_register 13
 1058              		@ sp needed	@
 1059 0224 5DF8047B 		ldr	r7, [sp], #4	@,
 1060              	.LCFI78:
 1061              		.cfi_restore 7
 1062              		.cfi_def_cfa_offset 0
 1063 0228 7047     		bx	lr	@
 1064              		.cfi_endproc
 1065              	.LFE24:
 1067              		.align	1
 1068              		.global	fnRTC_WKUP_IRQ
 1069              		.syntax unified
 1070              		.thumb
 1071              		.thumb_func
 1072              		.fpu fpv4-sp-d16
 1074              	fnRTC_WKUP_IRQ:
 1075              	.LFB25:
 524:interrupts.c  **** 
 525:interrupts.c  **** //---------------------------------------------------------------------------------------------
 526:interrupts.c  **** //  Function Name  : RTC Wakeup
 527:interrupts.c  **** //---------------------------------------------------------------------------------------------
 528:interrupts.c  **** void fnRTC_WKUP_IRQ(void)                       //--- IRQ_03
 529:interrupts.c  **** {
 1076              		.loc 2 529 1
 1077              		.cfi_startproc
 1078              		@ args = 0, pretend = 0, frame = 0
 1079              		@ frame_needed = 1, uses_anonymous_args = 0
 1080              		@ link register save eliminated.
 1081 022a 80B4     		push	{r7}	@
 1082              	.LCFI79:
 1083              		.cfi_def_cfa_offset 4
 1084              		.cfi_offset 7, -4
 1085 022c 00AF     		add	r7, sp, #0	@,,
 1086              	.LCFI80:
 1087              		.cfi_def_cfa_register 7
 1088              	@ interrupts.c:530: }
 530:interrupts.c  **** }
 1089              		.loc 2 530 1
 1090 022e 00BF     		nop	
 1091 0230 BD46     		mov	sp, r7	@,
 1092              	.LCFI81:
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed	@
 1095 0232 5DF8047B 		ldr	r7, [sp], #4	@,
 1096              	.LCFI82:
 1097              		.cfi_restore 7
 1098              		.cfi_def_cfa_offset 0
 1099 0236 7047     		bx	lr	@
 1100              		.cfi_endproc
 1101              	.LFE25:
 1103              		.align	1
 1104              		.global	fnFLASH_IRQ
 1105              		.syntax unified
 1106              		.thumb
 1107              		.thumb_func
 1108              		.fpu fpv4-sp-d16
 1110              	fnFLASH_IRQ:
 1111              	.LFB26:
 531:interrupts.c  **** 
 532:interrupts.c  **** //---------------------------------------------------------------------------------------------
 533:interrupts.c  **** //  Function Name  : FLASH_IRQ
 534:interrupts.c  **** //---------------------------------------------------------------------------------------------
 535:interrupts.c  **** void fnFLASH_IRQ(void)                          //--- IRQ_04
 536:interrupts.c  **** {
 1112              		.loc 2 536 1
 1113              		.cfi_startproc
 1114              		@ args = 0, pretend = 0, frame = 0
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116              		@ link register save eliminated.
 1117 0238 80B4     		push	{r7}	@
 1118              	.LCFI83:
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 7, -4
 1121 023a 00AF     		add	r7, sp, #0	@,,
 1122              	.LCFI84:
 1123              		.cfi_def_cfa_register 7
 1124              	@ interrupts.c:537: }
 537:interrupts.c  **** }
 1125              		.loc 2 537 1
 1126 023c 00BF     		nop	
 1127 023e BD46     		mov	sp, r7	@,
 1128              	.LCFI85:
 1129              		.cfi_def_cfa_register 13
 1130              		@ sp needed	@
 1131 0240 5DF8047B 		ldr	r7, [sp], #4	@,
 1132              	.LCFI86:
 1133              		.cfi_restore 7
 1134              		.cfi_def_cfa_offset 0
 1135 0244 7047     		bx	lr	@
 1136              		.cfi_endproc
 1137              	.LFE26:
 1139              		.align	1
 1140              		.global	fnRCC_IRQ
 1141              		.syntax unified
 1142              		.thumb
 1143              		.thumb_func
 1144              		.fpu fpv4-sp-d16
 1146              	fnRCC_IRQ:
 1147              	.LFB27:
 538:interrupts.c  **** 
 539:interrupts.c  **** //---------------------------------------------------------------------------------------------
 540:interrupts.c  **** //  Function Name  : RCC_IRQ
 541:interrupts.c  **** //---------------------------------------------------------------------------------------------
 542:interrupts.c  **** void fnRCC_IRQ(void)                            //--- IRQ_05
 543:interrupts.c  **** {
 1148              		.loc 2 543 1
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
 1152              		@ link register save eliminated.
 1153 0246 80B4     		push	{r7}	@
 1154              	.LCFI87:
 1155              		.cfi_def_cfa_offset 4
 1156              		.cfi_offset 7, -4
 1157 0248 00AF     		add	r7, sp, #0	@,,
 1158              	.LCFI88:
 1159              		.cfi_def_cfa_register 7
 1160              	@ interrupts.c:544: }
 544:interrupts.c  **** }
 1161              		.loc 2 544 1
 1162 024a 00BF     		nop	
 1163 024c BD46     		mov	sp, r7	@,
 1164              	.LCFI89:
 1165              		.cfi_def_cfa_register 13
 1166              		@ sp needed	@
 1167 024e 5DF8047B 		ldr	r7, [sp], #4	@,
 1168              	.LCFI90:
 1169              		.cfi_restore 7
 1170              		.cfi_def_cfa_offset 0
 1171 0252 7047     		bx	lr	@
 1172              		.cfi_endproc
 1173              	.LFE27:
 1175              		.align	1
 1176              		.global	fnEXTI_0_IRQ
 1177              		.syntax unified
 1178              		.thumb
 1179              		.thumb_func
 1180              		.fpu fpv4-sp-d16
 1182              	fnEXTI_0_IRQ:
 1183              	.LFB28:
 545:interrupts.c  **** 
 546:interrupts.c  **** //---------------------------------------------------------------------------------------------
 547:interrupts.c  **** //  Function Name  : EXTI0_IRQ
 548:interrupts.c  **** //---------------------------------------------------------------------------------------------
 549:interrupts.c  **** void fnEXTI_0_IRQ(void)                         //--- IRQ_06
 550:interrupts.c  **** {
 1184              		.loc 2 550 1
 1185              		.cfi_startproc
 1186              		@ args = 0, pretend = 0, frame = 0
 1187              		@ frame_needed = 1, uses_anonymous_args = 0
 1188              		@ link register save eliminated.
 1189 0254 80B4     		push	{r7}	@
 1190              	.LCFI91:
 1191              		.cfi_def_cfa_offset 4
 1192              		.cfi_offset 7, -4
 1193 0256 00AF     		add	r7, sp, #0	@,,
 1194              	.LCFI92:
 1195              		.cfi_def_cfa_register 7
 1196              	@ interrupts.c:551: }
 551:interrupts.c  **** }
 1197              		.loc 2 551 1
 1198 0258 00BF     		nop	
 1199 025a BD46     		mov	sp, r7	@,
 1200              	.LCFI93:
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed	@
 1203 025c 5DF8047B 		ldr	r7, [sp], #4	@,
 1204              	.LCFI94:
 1205              		.cfi_restore 7
 1206              		.cfi_def_cfa_offset 0
 1207 0260 7047     		bx	lr	@
 1208              		.cfi_endproc
 1209              	.LFE28:
 1211              		.align	1
 1212              		.global	fnEXTI_1_IRQ
 1213              		.syntax unified
 1214              		.thumb
 1215              		.thumb_func
 1216              		.fpu fpv4-sp-d16
 1218              	fnEXTI_1_IRQ:
 1219              	.LFB29:
 552:interrupts.c  **** 
 553:interrupts.c  **** //---------------------------------------------------------------------------------------------
 554:interrupts.c  **** //  Function Name  : EXTI1_IRQ
 555:interrupts.c  **** //---------------------------------------------------------------------------------------------
 556:interrupts.c  **** void fnEXTI_1_IRQ(void)                         //--- IRQ_07
 557:interrupts.c  **** {
 1220              		.loc 2 557 1
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 0
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225 0262 80B4     		push	{r7}	@
 1226              	.LCFI95:
 1227              		.cfi_def_cfa_offset 4
 1228              		.cfi_offset 7, -4
 1229 0264 00AF     		add	r7, sp, #0	@,,
 1230              	.LCFI96:
 1231              		.cfi_def_cfa_register 7
 1232              	@ interrupts.c:558: }
 558:interrupts.c  **** }
 1233              		.loc 2 558 1
 1234 0266 00BF     		nop	
 1235 0268 BD46     		mov	sp, r7	@,
 1236              	.LCFI97:
 1237              		.cfi_def_cfa_register 13
 1238              		@ sp needed	@
 1239 026a 5DF8047B 		ldr	r7, [sp], #4	@,
 1240              	.LCFI98:
 1241              		.cfi_restore 7
 1242              		.cfi_def_cfa_offset 0
 1243 026e 7047     		bx	lr	@
 1244              		.cfi_endproc
 1245              	.LFE29:
 1247              		.align	1
 1248              		.global	fnEXTI_2_IRQ
 1249              		.syntax unified
 1250              		.thumb
 1251              		.thumb_func
 1252              		.fpu fpv4-sp-d16
 1254              	fnEXTI_2_IRQ:
 1255              	.LFB30:
 559:interrupts.c  **** 
 560:interrupts.c  **** //---------------------------------------------------------------------------------------------
 561:interrupts.c  **** //  Function Name  : EXTI0_IRQ
 562:interrupts.c  **** //---------------------------------------------------------------------------------------------
 563:interrupts.c  **** void fnEXTI_2_IRQ(void)                         //--- IRQ_08
 564:interrupts.c  **** {
 1256              		.loc 2 564 1
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 1, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261 0270 80B4     		push	{r7}	@
 1262              	.LCFI99:
 1263              		.cfi_def_cfa_offset 4
 1264              		.cfi_offset 7, -4
 1265 0272 00AF     		add	r7, sp, #0	@,,
 1266              	.LCFI100:
 1267              		.cfi_def_cfa_register 7
 1268              	@ interrupts.c:565: }
 565:interrupts.c  **** }
 1269              		.loc 2 565 1
 1270 0274 00BF     		nop	
 1271 0276 BD46     		mov	sp, r7	@,
 1272              	.LCFI101:
 1273              		.cfi_def_cfa_register 13
 1274              		@ sp needed	@
 1275 0278 5DF8047B 		ldr	r7, [sp], #4	@,
 1276              	.LCFI102:
 1277              		.cfi_restore 7
 1278              		.cfi_def_cfa_offset 0
 1279 027c 7047     		bx	lr	@
 1280              		.cfi_endproc
 1281              	.LFE30:
 1283              		.align	1
 1284              		.global	fnEXTI_3_IRQ
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	fnEXTI_3_IRQ:
 1291              	.LFB31:
 566:interrupts.c  **** 
 567:interrupts.c  **** //---------------------------------------------------------------------------------------------
 568:interrupts.c  **** //  Function Name  : EXTI0_IRQ
 569:interrupts.c  **** //---------------------------------------------------------------------------------------------
 570:interrupts.c  **** void fnEXTI_3_IRQ(void)                         //--- IRQ_09
 571:interrupts.c  **** {
 1292              		.loc 2 571 1
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 0
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297 027e 80B4     		push	{r7}	@
 1298              	.LCFI103:
 1299              		.cfi_def_cfa_offset 4
 1300              		.cfi_offset 7, -4
 1301 0280 00AF     		add	r7, sp, #0	@,,
 1302              	.LCFI104:
 1303              		.cfi_def_cfa_register 7
 1304              	@ interrupts.c:572: }
 572:interrupts.c  **** }
 1305              		.loc 2 572 1
 1306 0282 00BF     		nop	
 1307 0284 BD46     		mov	sp, r7	@,
 1308              	.LCFI105:
 1309              		.cfi_def_cfa_register 13
 1310              		@ sp needed	@
 1311 0286 5DF8047B 		ldr	r7, [sp], #4	@,
 1312              	.LCFI106:
 1313              		.cfi_restore 7
 1314              		.cfi_def_cfa_offset 0
 1315 028a 7047     		bx	lr	@
 1316              		.cfi_endproc
 1317              	.LFE31:
 1319              		.align	1
 1320              		.global	fnEXTI_4_IRQ
 1321              		.syntax unified
 1322              		.thumb
 1323              		.thumb_func
 1324              		.fpu fpv4-sp-d16
 1326              	fnEXTI_4_IRQ:
 1327              	.LFB32:
 573:interrupts.c  **** 
 574:interrupts.c  **** //---------------------------------------------------------------------------------------------
 575:interrupts.c  **** //  Function Name  : EXTI2_IRQ
 576:interrupts.c  **** //---------------------------------------------------------------------------------------------
 577:interrupts.c  **** void fnEXTI_4_IRQ(void)                         //--- IRQ_10
 578:interrupts.c  **** {
 1328              		.loc 2 578 1
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 1, uses_anonymous_args = 0
 1332              		@ link register save eliminated.
 1333 028c 80B4     		push	{r7}	@
 1334              	.LCFI107:
 1335              		.cfi_def_cfa_offset 4
 1336              		.cfi_offset 7, -4
 1337 028e 00AF     		add	r7, sp, #0	@,,
 1338              	.LCFI108:
 1339              		.cfi_def_cfa_register 7
 1340              	@ interrupts.c:579: }
 579:interrupts.c  **** }
 1341              		.loc 2 579 1
 1342 0290 00BF     		nop	
 1343 0292 BD46     		mov	sp, r7	@,
 1344              	.LCFI109:
 1345              		.cfi_def_cfa_register 13
 1346              		@ sp needed	@
 1347 0294 5DF8047B 		ldr	r7, [sp], #4	@,
 1348              	.LCFI110:
 1349              		.cfi_restore 7
 1350              		.cfi_def_cfa_offset 0
 1351 0298 7047     		bx	lr	@
 1352              		.cfi_endproc
 1353              	.LFE32:
 1355              		.align	1
 1356              		.global	fnDMA_11_IRQ
 1357              		.syntax unified
 1358              		.thumb
 1359              		.thumb_func
 1360              		.fpu fpv4-sp-d16
 1362              	fnDMA_11_IRQ:
 1363              	.LFB33:
 580:interrupts.c  **** 
 581:interrupts.c  **** //---------------------------------------------------------------------------------------------
 582:interrupts.c  **** //  DMA #1 Channel 1
 583:interrupts.c  **** //---------------------------------------------------------------------------------------------
 584:interrupts.c  **** void fnDMA_11_IRQ(void)                         //--- IRQ_11
 585:interrupts.c  **** {
 1364              		.loc 2 585 1
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 0
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 029a 80B4     		push	{r7}	@
 1370              	.LCFI111:
 1371              		.cfi_def_cfa_offset 4
 1372              		.cfi_offset 7, -4
 1373 029c 00AF     		add	r7, sp, #0	@,,
 1374              	.LCFI112:
 1375              		.cfi_def_cfa_register 7
 1376              	@ interrupts.c:586: }
 586:interrupts.c  **** }
 1377              		.loc 2 586 1
 1378 029e 00BF     		nop	
 1379 02a0 BD46     		mov	sp, r7	@,
 1380              	.LCFI113:
 1381              		.cfi_def_cfa_register 13
 1382              		@ sp needed	@
 1383 02a2 5DF8047B 		ldr	r7, [sp], #4	@,
 1384              	.LCFI114:
 1385              		.cfi_restore 7
 1386              		.cfi_def_cfa_offset 0
 1387 02a6 7047     		bx	lr	@
 1388              		.cfi_endproc
 1389              	.LFE33:
 1391              		.align	1
 1392              		.global	fnDMA_12_IRQ
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1396              		.fpu fpv4-sp-d16
 1398              	fnDMA_12_IRQ:
 1399              	.LFB34:
 587:interrupts.c  **** 
 588:interrupts.c  **** //---------------------------------------------------------------------------------------------
 589:interrupts.c  **** //  DMA #1 Channel 2
 590:interrupts.c  **** //---------------------------------------------------------------------------------------------
 591:interrupts.c  **** void fnDMA_12_IRQ(void)                         //--- IRQ_12
 592:interrupts.c  **** {
 1400              		.loc 2 592 1
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405 02a8 80B4     		push	{r7}	@
 1406              	.LCFI115:
 1407              		.cfi_def_cfa_offset 4
 1408              		.cfi_offset 7, -4
 1409 02aa 00AF     		add	r7, sp, #0	@,,
 1410              	.LCFI116:
 1411              		.cfi_def_cfa_register 7
 1412              	@ interrupts.c:593: }
 593:interrupts.c  **** }
 1413              		.loc 2 593 1
 1414 02ac 00BF     		nop	
 1415 02ae BD46     		mov	sp, r7	@,
 1416              	.LCFI117:
 1417              		.cfi_def_cfa_register 13
 1418              		@ sp needed	@
 1419 02b0 5DF8047B 		ldr	r7, [sp], #4	@,
 1420              	.LCFI118:
 1421              		.cfi_restore 7
 1422              		.cfi_def_cfa_offset 0
 1423 02b4 7047     		bx	lr	@
 1424              		.cfi_endproc
 1425              	.LFE34:
 1427              		.align	1
 1428              		.global	fnDMA_13_IRQ
 1429              		.syntax unified
 1430              		.thumb
 1431              		.thumb_func
 1432              		.fpu fpv4-sp-d16
 1434              	fnDMA_13_IRQ:
 1435              	.LFB35:
 594:interrupts.c  **** 
 595:interrupts.c  **** //---------------------------------------------------------------------------------------------
 596:interrupts.c  **** //  DMA #1 Channel 3
 597:interrupts.c  **** //---------------------------------------------------------------------------------------------
 598:interrupts.c  **** void fnDMA_13_IRQ(void)                         //--- IRQ_13
 599:interrupts.c  **** {
 1436              		.loc 2 599 1
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 1, uses_anonymous_args = 0
 1440              		@ link register save eliminated.
 1441 02b6 80B4     		push	{r7}	@
 1442              	.LCFI119:
 1443              		.cfi_def_cfa_offset 4
 1444              		.cfi_offset 7, -4
 1445 02b8 00AF     		add	r7, sp, #0	@,,
 1446              	.LCFI120:
 1447              		.cfi_def_cfa_register 7
 1448              	@ interrupts.c:600: }
 600:interrupts.c  **** }
 1449              		.loc 2 600 1
 1450 02ba 00BF     		nop	
 1451 02bc BD46     		mov	sp, r7	@,
 1452              	.LCFI121:
 1453              		.cfi_def_cfa_register 13
 1454              		@ sp needed	@
 1455 02be 5DF8047B 		ldr	r7, [sp], #4	@,
 1456              	.LCFI122:
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 02c2 7047     		bx	lr	@
 1460              		.cfi_endproc
 1461              	.LFE35:
 1463              		.align	1
 1464              		.global	fnDMA_14_IRQ
 1465              		.syntax unified
 1466              		.thumb
 1467              		.thumb_func
 1468              		.fpu fpv4-sp-d16
 1470              	fnDMA_14_IRQ:
 1471              	.LFB36:
 601:interrupts.c  **** 
 602:interrupts.c  **** //---------------------------------------------------------------------------------------------
 603:interrupts.c  **** //  DMA #1 Channel 4
 604:interrupts.c  **** //---------------------------------------------------------------------------------------------
 605:interrupts.c  **** void fnDMA_14_IRQ(void)                         //--- IRQ_14
 606:interrupts.c  **** {
 1472              		.loc 2 606 1
 1473              		.cfi_startproc
 1474              		@ args = 0, pretend = 0, frame = 0
 1475              		@ frame_needed = 1, uses_anonymous_args = 0
 1476              		@ link register save eliminated.
 1477 02c4 80B4     		push	{r7}	@
 1478              	.LCFI123:
 1479              		.cfi_def_cfa_offset 4
 1480              		.cfi_offset 7, -4
 1481 02c6 00AF     		add	r7, sp, #0	@,,
 1482              	.LCFI124:
 1483              		.cfi_def_cfa_register 7
 1484              	@ interrupts.c:607: }
 607:interrupts.c  **** }
 1485              		.loc 2 607 1
 1486 02c8 00BF     		nop	
 1487 02ca BD46     		mov	sp, r7	@,
 1488              	.LCFI125:
 1489              		.cfi_def_cfa_register 13
 1490              		@ sp needed	@
 1491 02cc 5DF8047B 		ldr	r7, [sp], #4	@,
 1492              	.LCFI126:
 1493              		.cfi_restore 7
 1494              		.cfi_def_cfa_offset 0
 1495 02d0 7047     		bx	lr	@
 1496              		.cfi_endproc
 1497              	.LFE36:
 1499              		.align	1
 1500              		.global	fnDMA_15_IRQ
 1501              		.syntax unified
 1502              		.thumb
 1503              		.thumb_func
 1504              		.fpu fpv4-sp-d16
 1506              	fnDMA_15_IRQ:
 1507              	.LFB37:
 608:interrupts.c  **** 
 609:interrupts.c  **** //---------------------------------------------------------------------------------------------
 610:interrupts.c  **** //  DMA #1 Channel 5
 611:interrupts.c  **** //---------------------------------------------------------------------------------------------
 612:interrupts.c  **** void fnDMA_15_IRQ(void)                         //--- IRQ_15
 613:interrupts.c  **** {
 1508              		.loc 2 613 1
 1509              		.cfi_startproc
 1510              		@ args = 0, pretend = 0, frame = 0
 1511              		@ frame_needed = 1, uses_anonymous_args = 0
 1512              		@ link register save eliminated.
 1513 02d2 80B4     		push	{r7}	@
 1514              	.LCFI127:
 1515              		.cfi_def_cfa_offset 4
 1516              		.cfi_offset 7, -4
 1517 02d4 00AF     		add	r7, sp, #0	@,,
 1518              	.LCFI128:
 1519              		.cfi_def_cfa_register 7
 1520              	@ interrupts.c:614: }
 614:interrupts.c  **** }
 1521              		.loc 2 614 1
 1522 02d6 00BF     		nop	
 1523 02d8 BD46     		mov	sp, r7	@,
 1524              	.LCFI129:
 1525              		.cfi_def_cfa_register 13
 1526              		@ sp needed	@
 1527 02da 5DF8047B 		ldr	r7, [sp], #4	@,
 1528              	.LCFI130:
 1529              		.cfi_restore 7
 1530              		.cfi_def_cfa_offset 0
 1531 02de 7047     		bx	lr	@
 1532              		.cfi_endproc
 1533              	.LFE37:
 1535              		.align	1
 1536              		.global	fnDMA_16_IRQ
 1537              		.syntax unified
 1538              		.thumb
 1539              		.thumb_func
 1540              		.fpu fpv4-sp-d16
 1542              	fnDMA_16_IRQ:
 1543              	.LFB38:
 615:interrupts.c  **** 
 616:interrupts.c  **** //---------------------------------------------------------------------------------------------
 617:interrupts.c  **** //  DMA #1 Channel 6
 618:interrupts.c  **** //---------------------------------------------------------------------------------------------
 619:interrupts.c  **** void fnDMA_16_IRQ(void)                         //--- IRQ_16
 620:interrupts.c  **** {
 1544              		.loc 2 620 1
 1545              		.cfi_startproc
 1546              		@ args = 0, pretend = 0, frame = 0
 1547              		@ frame_needed = 1, uses_anonymous_args = 0
 1548              		@ link register save eliminated.
 1549 02e0 80B4     		push	{r7}	@
 1550              	.LCFI131:
 1551              		.cfi_def_cfa_offset 4
 1552              		.cfi_offset 7, -4
 1553 02e2 00AF     		add	r7, sp, #0	@,,
 1554              	.LCFI132:
 1555              		.cfi_def_cfa_register 7
 1556              	@ interrupts.c:621: }
 621:interrupts.c  **** }
 1557              		.loc 2 621 1
 1558 02e4 00BF     		nop	
 1559 02e6 BD46     		mov	sp, r7	@,
 1560              	.LCFI133:
 1561              		.cfi_def_cfa_register 13
 1562              		@ sp needed	@
 1563 02e8 5DF8047B 		ldr	r7, [sp], #4	@,
 1564              	.LCFI134:
 1565              		.cfi_restore 7
 1566              		.cfi_def_cfa_offset 0
 1567 02ec 7047     		bx	lr	@
 1568              		.cfi_endproc
 1569              	.LFE38:
 1571              		.align	1
 1572              		.global	fnDMA_17_IRQ
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu fpv4-sp-d16
 1578              	fnDMA_17_IRQ:
 1579              	.LFB39:
 622:interrupts.c  **** 
 623:interrupts.c  **** //---------------------------------------------------------------------------------------------
 624:interrupts.c  **** //  DMA #1 Channel 7
 625:interrupts.c  **** //---------------------------------------------------------------------------------------------
 626:interrupts.c  **** void fnDMA_17_IRQ(void)                         //--- IRQ_17
 627:interrupts.c  **** {
 1580              		.loc 2 627 1
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 0
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584              		@ link register save eliminated.
 1585 02ee 80B4     		push	{r7}	@
 1586              	.LCFI135:
 1587              		.cfi_def_cfa_offset 4
 1588              		.cfi_offset 7, -4
 1589 02f0 00AF     		add	r7, sp, #0	@,,
 1590              	.LCFI136:
 1591              		.cfi_def_cfa_register 7
 1592              	@ interrupts.c:628: }
 628:interrupts.c  **** }
 1593              		.loc 2 628 1
 1594 02f2 00BF     		nop	
 1595 02f4 BD46     		mov	sp, r7	@,
 1596              	.LCFI137:
 1597              		.cfi_def_cfa_register 13
 1598              		@ sp needed	@
 1599 02f6 5DF8047B 		ldr	r7, [sp], #4	@,
 1600              	.LCFI138:
 1601              		.cfi_restore 7
 1602              		.cfi_def_cfa_offset 0
 1603 02fa 7047     		bx	lr	@
 1604              		.cfi_endproc
 1605              	.LFE39:
 1607              		.align	1
 1608              		.global	fnADC_IRQ
 1609              		.syntax unified
 1610              		.thumb
 1611              		.thumb_func
 1612              		.fpu fpv4-sp-d16
 1614              	fnADC_IRQ:
 1615              	.LFB40:
 629:interrupts.c  **** 
 630:interrupts.c  **** //---------------------------------------------------------------------------------------------
 631:interrupts.c  **** //  Function Name  : ADC_IRQ
 632:interrupts.c  **** //---------------------------------------------------------------------------------------------
 633:interrupts.c  **** void fnADC_IRQ(void)                            //--- IRQ_18
 634:interrupts.c  **** {
 1616              		.loc 2 634 1
 1617              		.cfi_startproc
 1618              		@ args = 0, pretend = 0, frame = 0
 1619              		@ frame_needed = 1, uses_anonymous_args = 0
 1620              		@ link register save eliminated.
 1621 02fc 80B4     		push	{r7}	@
 1622              	.LCFI139:
 1623              		.cfi_def_cfa_offset 4
 1624              		.cfi_offset 7, -4
 1625 02fe 00AF     		add	r7, sp, #0	@,,
 1626              	.LCFI140:
 1627              		.cfi_def_cfa_register 7
 1628              	@ interrupts.c:635: }
 635:interrupts.c  **** }
 1629              		.loc 2 635 1
 1630 0300 00BF     		nop	
 1631 0302 BD46     		mov	sp, r7	@,
 1632              	.LCFI141:
 1633              		.cfi_def_cfa_register 13
 1634              		@ sp needed	@
 1635 0304 5DF8047B 		ldr	r7, [sp], #4	@,
 1636              	.LCFI142:
 1637              		.cfi_restore 7
 1638              		.cfi_def_cfa_offset 0
 1639 0308 7047     		bx	lr	@
 1640              		.cfi_endproc
 1641              	.LFE40:
 1643              		.align	1
 1644              		.global	fnCAN1_TX_IRQ
 1645              		.syntax unified
 1646              		.thumb
 1647              		.thumb_func
 1648              		.fpu fpv4-sp-d16
 1650              	fnCAN1_TX_IRQ:
 1651              	.LFB41:
 636:interrupts.c  **** 
 637:interrupts.c  **** //---------------------------------------------------------------------------------------------
 638:interrupts.c  **** //  Function Name  : CAN1_TX
 639:interrupts.c  **** //---------------------------------------------------------------------------------------------
 640:interrupts.c  **** void fnCAN1_TX_IRQ(void)                        //--- IRQ_19
 641:interrupts.c  **** {
 1652              		.loc 2 641 1
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 1, uses_anonymous_args = 0
 1656              		@ link register save eliminated.
 1657 030a 80B4     		push	{r7}	@
 1658              	.LCFI143:
 1659              		.cfi_def_cfa_offset 4
 1660              		.cfi_offset 7, -4
 1661 030c 00AF     		add	r7, sp, #0	@,,
 1662              	.LCFI144:
 1663              		.cfi_def_cfa_register 7
 1664              	@ interrupts.c:642: }
 642:interrupts.c  **** }
 1665              		.loc 2 642 1
 1666 030e 00BF     		nop	
 1667 0310 BD46     		mov	sp, r7	@,
 1668              	.LCFI145:
 1669              		.cfi_def_cfa_register 13
 1670              		@ sp needed	@
 1671 0312 5DF8047B 		ldr	r7, [sp], #4	@,
 1672              	.LCFI146:
 1673              		.cfi_restore 7
 1674              		.cfi_def_cfa_offset 0
 1675 0316 7047     		bx	lr	@
 1676              		.cfi_endproc
 1677              	.LFE41:
 1679              		.align	1
 1680              		.global	fnCAN1_RX0_IRQ
 1681              		.syntax unified
 1682              		.thumb
 1683              		.thumb_func
 1684              		.fpu fpv4-sp-d16
 1686              	fnCAN1_RX0_IRQ:
 1687              	.LFB42:
 643:interrupts.c  **** 
 644:interrupts.c  **** //---------------------------------------------------------------------------------------------
 645:interrupts.c  **** //  Function Name  : CAN1_RX0
 646:interrupts.c  **** //---------------------------------------------------------------------------------------------
 647:interrupts.c  **** void fnCAN1_RX0_IRQ(void)                       //--- IRQ_20
 648:interrupts.c  **** {
 1688              		.loc 2 648 1
 1689              		.cfi_startproc
 1690              		@ args = 0, pretend = 0, frame = 0
 1691              		@ frame_needed = 1, uses_anonymous_args = 0
 1692              		@ link register save eliminated.
 1693 0318 80B4     		push	{r7}	@
 1694              	.LCFI147:
 1695              		.cfi_def_cfa_offset 4
 1696              		.cfi_offset 7, -4
 1697 031a 00AF     		add	r7, sp, #0	@,,
 1698              	.LCFI148:
 1699              		.cfi_def_cfa_register 7
 1700              	@ interrupts.c:649: }
 649:interrupts.c  **** }
 1701              		.loc 2 649 1
 1702 031c 00BF     		nop	
 1703 031e BD46     		mov	sp, r7	@,
 1704              	.LCFI149:
 1705              		.cfi_def_cfa_register 13
 1706              		@ sp needed	@
 1707 0320 5DF8047B 		ldr	r7, [sp], #4	@,
 1708              	.LCFI150:
 1709              		.cfi_restore 7
 1710              		.cfi_def_cfa_offset 0
 1711 0324 7047     		bx	lr	@
 1712              		.cfi_endproc
 1713              	.LFE42:
 1715              		.align	1
 1716              		.global	fnCAN1_RX1_IRQ
 1717              		.syntax unified
 1718              		.thumb
 1719              		.thumb_func
 1720              		.fpu fpv4-sp-d16
 1722              	fnCAN1_RX1_IRQ:
 1723              	.LFB43:
 650:interrupts.c  **** 
 651:interrupts.c  **** //---------------------------------------------------------------------------------------------
 652:interrupts.c  **** //  Function Name  : CAN1_RX1
 653:interrupts.c  **** //---------------------------------------------------------------------------------------------
 654:interrupts.c  **** void fnCAN1_RX1_IRQ(void)                       //--- IRQ_21
 655:interrupts.c  **** {
 1724              		.loc 2 655 1
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 0
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
 1729 0326 80B4     		push	{r7}	@
 1730              	.LCFI151:
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0328 00AF     		add	r7, sp, #0	@,,
 1734              	.LCFI152:
 1735              		.cfi_def_cfa_register 7
 1736              	@ interrupts.c:656: }
 656:interrupts.c  **** }
 1737              		.loc 2 656 1
 1738 032a 00BF     		nop	
 1739 032c BD46     		mov	sp, r7	@,
 1740              	.LCFI153:
 1741              		.cfi_def_cfa_register 13
 1742              		@ sp needed	@
 1743 032e 5DF8047B 		ldr	r7, [sp], #4	@,
 1744              	.LCFI154:
 1745              		.cfi_restore 7
 1746              		.cfi_def_cfa_offset 0
 1747 0332 7047     		bx	lr	@
 1748              		.cfi_endproc
 1749              	.LFE43:
 1751              		.align	1
 1752              		.global	fnCAN1_SCE_IRQ
 1753              		.syntax unified
 1754              		.thumb
 1755              		.thumb_func
 1756              		.fpu fpv4-sp-d16
 1758              	fnCAN1_SCE_IRQ:
 1759              	.LFB44:
 657:interrupts.c  **** 
 658:interrupts.c  **** //---------------------------------------------------------------------------------------------
 659:interrupts.c  **** //  Function Name  : CAN1_SCE
 660:interrupts.c  **** //---------------------------------------------------------------------------------------------
 661:interrupts.c  **** void fnCAN1_SCE_IRQ(void)                       //--- IRQ_22
 662:interrupts.c  **** {
 1760              		.loc 2 662 1
 1761              		.cfi_startproc
 1762              		@ args = 0, pretend = 0, frame = 0
 1763              		@ frame_needed = 1, uses_anonymous_args = 0
 1764              		@ link register save eliminated.
 1765 0334 80B4     		push	{r7}	@
 1766              	.LCFI155:
 1767              		.cfi_def_cfa_offset 4
 1768              		.cfi_offset 7, -4
 1769 0336 00AF     		add	r7, sp, #0	@,,
 1770              	.LCFI156:
 1771              		.cfi_def_cfa_register 7
 1772              	@ interrupts.c:663: }
 663:interrupts.c  **** }
 1773              		.loc 2 663 1
 1774 0338 00BF     		nop	
 1775 033a BD46     		mov	sp, r7	@,
 1776              	.LCFI157:
 1777              		.cfi_def_cfa_register 13
 1778              		@ sp needed	@
 1779 033c 5DF8047B 		ldr	r7, [sp], #4	@,
 1780              	.LCFI158:
 1781              		.cfi_restore 7
 1782              		.cfi_def_cfa_offset 0
 1783 0340 7047     		bx	lr	@
 1784              		.cfi_endproc
 1785              	.LFE44:
 1787              		.align	1
 1788              		.global	fnEXTI_5_9_IRQ
 1789              		.syntax unified
 1790              		.thumb
 1791              		.thumb_func
 1792              		.fpu fpv4-sp-d16
 1794              	fnEXTI_5_9_IRQ:
 1795              	.LFB45:
 664:interrupts.c  **** 
 665:interrupts.c  **** //---------------------------------------------------------------------------------------------
 666:interrupts.c  **** //  Function Name  : EXTI_5_9
 667:interrupts.c  **** //---------------------------------------------------------------------------------------------
 668:interrupts.c  **** void fnEXTI_5_9_IRQ(void)                       //--- IRQ_23
 669:interrupts.c  **** {
 1796              		.loc 2 669 1
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800              		@ link register save eliminated.
 1801 0342 80B4     		push	{r7}	@
 1802              	.LCFI159:
 1803              		.cfi_def_cfa_offset 4
 1804              		.cfi_offset 7, -4
 1805 0344 00AF     		add	r7, sp, #0	@,,
 1806              	.LCFI160:
 1807              		.cfi_def_cfa_register 7
 1808              	@ interrupts.c:670: }
 670:interrupts.c  **** }
 1809              		.loc 2 670 1
 1810 0346 00BF     		nop	
 1811 0348 BD46     		mov	sp, r7	@,
 1812              	.LCFI161:
 1813              		.cfi_def_cfa_register 13
 1814              		@ sp needed	@
 1815 034a 5DF8047B 		ldr	r7, [sp], #4	@,
 1816              	.LCFI162:
 1817              		.cfi_restore 7
 1818              		.cfi_def_cfa_offset 0
 1819 034e 7047     		bx	lr	@
 1820              		.cfi_endproc
 1821              	.LFE45:
 1823              		.align	1
 1824              		.global	fnTIM1_BK_TIM15_IRQ
 1825              		.syntax unified
 1826              		.thumb
 1827              		.thumb_func
 1828              		.fpu fpv4-sp-d16
 1830              	fnTIM1_BK_TIM15_IRQ:
 1831              	.LFB46:
 671:interrupts.c  **** 
 672:interrupts.c  **** //---------------------------------------------------------------------------------------------
 673:interrupts.c  **** //  Function Name  : TIM1_BK_TIM15_IRQ
 674:interrupts.c  **** //---------------------------------------------------------------------------------------------
 675:interrupts.c  **** void fnTIM1_BK_TIM15_IRQ(void)                  //--- IRQ_24
 676:interrupts.c  **** {
 1832              		.loc 2 676 1
 1833              		.cfi_startproc
 1834              		@ args = 0, pretend = 0, frame = 0
 1835              		@ frame_needed = 1, uses_anonymous_args = 0
 1836              		@ link register save eliminated.
 1837 0350 80B4     		push	{r7}	@
 1838              	.LCFI163:
 1839              		.cfi_def_cfa_offset 4
 1840              		.cfi_offset 7, -4
 1841 0352 00AF     		add	r7, sp, #0	@,,
 1842              	.LCFI164:
 1843              		.cfi_def_cfa_register 7
 1844              	@ interrupts.c:677: }
 677:interrupts.c  **** }
 1845              		.loc 2 677 1
 1846 0354 00BF     		nop	
 1847 0356 BD46     		mov	sp, r7	@,
 1848              	.LCFI165:
 1849              		.cfi_def_cfa_register 13
 1850              		@ sp needed	@
 1851 0358 5DF8047B 		ldr	r7, [sp], #4	@,
 1852              	.LCFI166:
 1853              		.cfi_restore 7
 1854              		.cfi_def_cfa_offset 0
 1855 035c 7047     		bx	lr	@
 1856              		.cfi_endproc
 1857              	.LFE46:
 1859              		.align	1
 1860              		.global	fnTIM1_UP_TIM16_IRQ
 1861              		.syntax unified
 1862              		.thumb
 1863              		.thumb_func
 1864              		.fpu fpv4-sp-d16
 1866              	fnTIM1_UP_TIM16_IRQ:
 1867              	.LFB47:
 678:interrupts.c  **** 
 679:interrupts.c  **** //---------------------------------------------------------------------------------------------
 680:interrupts.c  **** //  Function Name  : TIM1_UP_TIM16_IRQ
 681:interrupts.c  **** //---------------------------------------------------------------------------------------------
 682:interrupts.c  **** void fnTIM1_UP_TIM16_IRQ(void)                  //--- IRQ_25
 683:interrupts.c  **** {
 1868              		.loc 2 683 1
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 0
 1871              		@ frame_needed = 1, uses_anonymous_args = 0
 1872              		@ link register save eliminated.
 1873 035e 80B4     		push	{r7}	@
 1874              	.LCFI167:
 1875              		.cfi_def_cfa_offset 4
 1876              		.cfi_offset 7, -4
 1877 0360 00AF     		add	r7, sp, #0	@,,
 1878              	.LCFI168:
 1879              		.cfi_def_cfa_register 7
 1880              	@ interrupts.c:684: }
 684:interrupts.c  **** }
 1881              		.loc 2 684 1
 1882 0362 00BF     		nop	
 1883 0364 BD46     		mov	sp, r7	@,
 1884              	.LCFI169:
 1885              		.cfi_def_cfa_register 13
 1886              		@ sp needed	@
 1887 0366 5DF8047B 		ldr	r7, [sp], #4	@,
 1888              	.LCFI170:
 1889              		.cfi_restore 7
 1890              		.cfi_def_cfa_offset 0
 1891 036a 7047     		bx	lr	@
 1892              		.cfi_endproc
 1893              	.LFE47:
 1895              		.align	1
 1896              		.global	fnTIM1_TRG_COM_IRQ
 1897              		.syntax unified
 1898              		.thumb
 1899              		.thumb_func
 1900              		.fpu fpv4-sp-d16
 1902              	fnTIM1_TRG_COM_IRQ:
 1903              	.LFB48:
 685:interrupts.c  **** 
 686:interrupts.c  **** //---------------------------------------------------------------------------------------------
 687:interrupts.c  **** //  Function Name  : TIM1_TRG_COM_IRQ
 688:interrupts.c  **** //---------------------------------------------------------------------------------------------
 689:interrupts.c  **** void fnTIM1_TRG_COM_IRQ(void)                   //--- IRQ_26
 690:interrupts.c  **** {
 1904              		.loc 2 690 1
 1905              		.cfi_startproc
 1906              		@ args = 0, pretend = 0, frame = 0
 1907              		@ frame_needed = 1, uses_anonymous_args = 0
 1908              		@ link register save eliminated.
 1909 036c 80B4     		push	{r7}	@
 1910              	.LCFI171:
 1911              		.cfi_def_cfa_offset 4
 1912              		.cfi_offset 7, -4
 1913 036e 00AF     		add	r7, sp, #0	@,,
 1914              	.LCFI172:
 1915              		.cfi_def_cfa_register 7
 1916              	@ interrupts.c:691: }
 691:interrupts.c  **** }
 1917              		.loc 2 691 1
 1918 0370 00BF     		nop	
 1919 0372 BD46     		mov	sp, r7	@,
 1920              	.LCFI173:
 1921              		.cfi_def_cfa_register 13
 1922              		@ sp needed	@
 1923 0374 5DF8047B 		ldr	r7, [sp], #4	@,
 1924              	.LCFI174:
 1925              		.cfi_restore 7
 1926              		.cfi_def_cfa_offset 0
 1927 0378 7047     		bx	lr	@
 1928              		.cfi_endproc
 1929              	.LFE48:
 1931              		.align	1
 1932              		.global	fnTIM1_CC_IRQ
 1933              		.syntax unified
 1934              		.thumb
 1935              		.thumb_func
 1936              		.fpu fpv4-sp-d16
 1938              	fnTIM1_CC_IRQ:
 1939              	.LFB49:
 692:interrupts.c  **** 
 693:interrupts.c  **** //---------------------------------------------------------------------------------------------
 694:interrupts.c  **** //  Function Name  : TIM1_CC_IRQ
 695:interrupts.c  **** //---------------------------------------------------------------------------------------------
 696:interrupts.c  **** void fnTIM1_CC_IRQ(void)                        //--- IRQ_27
 697:interrupts.c  **** {
 1940              		.loc 2 697 1
 1941              		.cfi_startproc
 1942              		@ args = 0, pretend = 0, frame = 0
 1943              		@ frame_needed = 1, uses_anonymous_args = 0
 1944              		@ link register save eliminated.
 1945 037a 80B4     		push	{r7}	@
 1946              	.LCFI175:
 1947              		.cfi_def_cfa_offset 4
 1948              		.cfi_offset 7, -4
 1949 037c 00AF     		add	r7, sp, #0	@,,
 1950              	.LCFI176:
 1951              		.cfi_def_cfa_register 7
 1952              	@ interrupts.c:698: }
 698:interrupts.c  **** }
 1953              		.loc 2 698 1
 1954 037e 00BF     		nop	
 1955 0380 BD46     		mov	sp, r7	@,
 1956              	.LCFI177:
 1957              		.cfi_def_cfa_register 13
 1958              		@ sp needed	@
 1959 0382 5DF8047B 		ldr	r7, [sp], #4	@,
 1960              	.LCFI178:
 1961              		.cfi_restore 7
 1962              		.cfi_def_cfa_offset 0
 1963 0386 7047     		bx	lr	@
 1964              		.cfi_endproc
 1965              	.LFE49:
 1967              		.align	1
 1968              		.global	fnTIM2_IRQ
 1969              		.syntax unified
 1970              		.thumb
 1971              		.thumb_func
 1972              		.fpu fpv4-sp-d16
 1974              	fnTIM2_IRQ:
 1975              	.LFB50:
 699:interrupts.c  **** 
 700:interrupts.c  **** //---------------------------------------------------------------------------------------------
 701:interrupts.c  **** //  Function Name  : TIM2_IRQ
 702:interrupts.c  **** //---------------------------------------------------------------------------------------------
 703:interrupts.c  **** void fnTIM2_IRQ(void)                           //--- IRQ_28
 704:interrupts.c  **** {
 1976              		.loc 2 704 1
 1977              		.cfi_startproc
 1978              		@ args = 0, pretend = 0, frame = 0
 1979              		@ frame_needed = 1, uses_anonymous_args = 0
 1980              		@ link register save eliminated.
 1981 0388 80B4     		push	{r7}	@
 1982              	.LCFI179:
 1983              		.cfi_def_cfa_offset 4
 1984              		.cfi_offset 7, -4
 1985 038a 00AF     		add	r7, sp, #0	@,,
 1986              	.LCFI180:
 1987              		.cfi_def_cfa_register 7
 1988              	@ interrupts.c:705: }
 705:interrupts.c  **** }
 1989              		.loc 2 705 1
 1990 038c 00BF     		nop	
 1991 038e BD46     		mov	sp, r7	@,
 1992              	.LCFI181:
 1993              		.cfi_def_cfa_register 13
 1994              		@ sp needed	@
 1995 0390 5DF8047B 		ldr	r7, [sp], #4	@,
 1996              	.LCFI182:
 1997              		.cfi_restore 7
 1998              		.cfi_def_cfa_offset 0
 1999 0394 7047     		bx	lr	@
 2000              		.cfi_endproc
 2001              	.LFE50:
 2003              		.align	1
 2004              		.global	fnTIM3_IRQ
 2005              		.syntax unified
 2006              		.thumb
 2007              		.thumb_func
 2008              		.fpu fpv4-sp-d16
 2010              	fnTIM3_IRQ:
 2011              	.LFB51:
 706:interrupts.c  **** 
 707:interrupts.c  **** //---------------------------------------------------------------------------------------------
 708:interrupts.c  **** //  Function Name  : TIM3_IRQ
 709:interrupts.c  **** //---------------------------------------------------------------------------------------------
 710:interrupts.c  **** void fnTIM3_IRQ(void)                           //--- IRQ_29
 711:interrupts.c  **** {
 2012              		.loc 2 711 1
 2013              		.cfi_startproc
 2014              		@ args = 0, pretend = 0, frame = 0
 2015              		@ frame_needed = 1, uses_anonymous_args = 0
 2016              		@ link register save eliminated.
 2017 0396 80B4     		push	{r7}	@
 2018              	.LCFI183:
 2019              		.cfi_def_cfa_offset 4
 2020              		.cfi_offset 7, -4
 2021 0398 00AF     		add	r7, sp, #0	@,,
 2022              	.LCFI184:
 2023              		.cfi_def_cfa_register 7
 2024              	@ interrupts.c:712: }
 712:interrupts.c  **** }
 2025              		.loc 2 712 1
 2026 039a 00BF     		nop	
 2027 039c BD46     		mov	sp, r7	@,
 2028              	.LCFI185:
 2029              		.cfi_def_cfa_register 13
 2030              		@ sp needed	@
 2031 039e 5DF8047B 		ldr	r7, [sp], #4	@,
 2032              	.LCFI186:
 2033              		.cfi_restore 7
 2034              		.cfi_def_cfa_offset 0
 2035 03a2 7047     		bx	lr	@
 2036              		.cfi_endproc
 2037              	.LFE51:
 2039              		.align	1
 2040              		.global	fnTIM4_IRQ
 2041              		.syntax unified
 2042              		.thumb
 2043              		.thumb_func
 2044              		.fpu fpv4-sp-d16
 2046              	fnTIM4_IRQ:
 2047              	.LFB52:
 713:interrupts.c  **** 
 714:interrupts.c  **** //---------------------------------------------------------------------------------------------
 715:interrupts.c  **** //  Function Name  : TIM4_IRQ
 716:interrupts.c  **** //---------------------------------------------------------------------------------------------
 717:interrupts.c  **** void fnTIM4_IRQ(void)                           //--- IRQ_30
 718:interrupts.c  **** {
 2048              		.loc 2 718 1
 2049              		.cfi_startproc
 2050              		@ args = 0, pretend = 0, frame = 0
 2051              		@ frame_needed = 1, uses_anonymous_args = 0
 2052              		@ link register save eliminated.
 2053 03a4 80B4     		push	{r7}	@
 2054              	.LCFI187:
 2055              		.cfi_def_cfa_offset 4
 2056              		.cfi_offset 7, -4
 2057 03a6 00AF     		add	r7, sp, #0	@,,
 2058              	.LCFI188:
 2059              		.cfi_def_cfa_register 7
 2060              	@ interrupts.c:719: }
 719:interrupts.c  **** }
 2061              		.loc 2 719 1
 2062 03a8 00BF     		nop	
 2063 03aa BD46     		mov	sp, r7	@,
 2064              	.LCFI189:
 2065              		.cfi_def_cfa_register 13
 2066              		@ sp needed	@
 2067 03ac 5DF8047B 		ldr	r7, [sp], #4	@,
 2068              	.LCFI190:
 2069              		.cfi_restore 7
 2070              		.cfi_def_cfa_offset 0
 2071 03b0 7047     		bx	lr	@
 2072              		.cfi_endproc
 2073              	.LFE52:
 2075              		.align	1
 2076              		.global	fnI2C1_EV_IRQ
 2077              		.syntax unified
 2078              		.thumb
 2079              		.thumb_func
 2080              		.fpu fpv4-sp-d16
 2082              	fnI2C1_EV_IRQ:
 2083              	.LFB53:
 720:interrupts.c  **** 
 721:interrupts.c  **** //---------------------------------------------------------------------------------------------
 722:interrupts.c  **** //  Function Name  : I2C1_EV_IRQ
 723:interrupts.c  **** //---------------------------------------------------------------------------------------------
 724:interrupts.c  **** void fnI2C1_EV_IRQ(void)                        //--- IRQ_31
 725:interrupts.c  **** {
 2084              		.loc 2 725 1
 2085              		.cfi_startproc
 2086              		@ args = 0, pretend = 0, frame = 0
 2087              		@ frame_needed = 1, uses_anonymous_args = 0
 2088              		@ link register save eliminated.
 2089 03b2 80B4     		push	{r7}	@
 2090              	.LCFI191:
 2091              		.cfi_def_cfa_offset 4
 2092              		.cfi_offset 7, -4
 2093 03b4 00AF     		add	r7, sp, #0	@,,
 2094              	.LCFI192:
 2095              		.cfi_def_cfa_register 7
 2096              	@ interrupts.c:726: }
 726:interrupts.c  **** }
 2097              		.loc 2 726 1
 2098 03b6 00BF     		nop	
 2099 03b8 BD46     		mov	sp, r7	@,
 2100              	.LCFI193:
 2101              		.cfi_def_cfa_register 13
 2102              		@ sp needed	@
 2103 03ba 5DF8047B 		ldr	r7, [sp], #4	@,
 2104              	.LCFI194:
 2105              		.cfi_restore 7
 2106              		.cfi_def_cfa_offset 0
 2107 03be 7047     		bx	lr	@
 2108              		.cfi_endproc
 2109              	.LFE53:
 2111              		.align	1
 2112              		.global	fnI2C1_ER_IRQ
 2113              		.syntax unified
 2114              		.thumb
 2115              		.thumb_func
 2116              		.fpu fpv4-sp-d16
 2118              	fnI2C1_ER_IRQ:
 2119              	.LFB54:
 727:interrupts.c  **** 
 728:interrupts.c  **** //---------------------------------------------------------------------------------------------
 729:interrupts.c  **** //  Function Name  : I2C1_EV_IRQ
 730:interrupts.c  **** //---------------------------------------------------------------------------------------------
 731:interrupts.c  **** void fnI2C1_ER_IRQ(void)                        //--- IRQ_32
 732:interrupts.c  **** {
 2120              		.loc 2 732 1
 2121              		.cfi_startproc
 2122              		@ args = 0, pretend = 0, frame = 0
 2123              		@ frame_needed = 1, uses_anonymous_args = 0
 2124              		@ link register save eliminated.
 2125 03c0 80B4     		push	{r7}	@
 2126              	.LCFI195:
 2127              		.cfi_def_cfa_offset 4
 2128              		.cfi_offset 7, -4
 2129 03c2 00AF     		add	r7, sp, #0	@,,
 2130              	.LCFI196:
 2131              		.cfi_def_cfa_register 7
 2132              	@ interrupts.c:733: }
 733:interrupts.c  **** }
 2133              		.loc 2 733 1
 2134 03c4 00BF     		nop	
 2135 03c6 BD46     		mov	sp, r7	@,
 2136              	.LCFI197:
 2137              		.cfi_def_cfa_register 13
 2138              		@ sp needed	@
 2139 03c8 5DF8047B 		ldr	r7, [sp], #4	@,
 2140              	.LCFI198:
 2141              		.cfi_restore 7
 2142              		.cfi_def_cfa_offset 0
 2143 03cc 7047     		bx	lr	@
 2144              		.cfi_endproc
 2145              	.LFE54:
 2147              		.align	1
 2148              		.global	fnI2C2_EV_IRQ
 2149              		.syntax unified
 2150              		.thumb
 2151              		.thumb_func
 2152              		.fpu fpv4-sp-d16
 2154              	fnI2C2_EV_IRQ:
 2155              	.LFB55:
 734:interrupts.c  **** 
 735:interrupts.c  **** //---------------------------------------------------------------------------------------------
 736:interrupts.c  **** //  Function Name  : I2C1_EV_IRQ
 737:interrupts.c  **** //---------------------------------------------------------------------------------------------
 738:interrupts.c  **** void fnI2C2_EV_IRQ(void)                        //--- IRQ_33
 739:interrupts.c  **** {
 2156              		.loc 2 739 1
 2157              		.cfi_startproc
 2158              		@ args = 0, pretend = 0, frame = 0
 2159              		@ frame_needed = 1, uses_anonymous_args = 0
 2160              		@ link register save eliminated.
 2161 03ce 80B4     		push	{r7}	@
 2162              	.LCFI199:
 2163              		.cfi_def_cfa_offset 4
 2164              		.cfi_offset 7, -4
 2165 03d0 00AF     		add	r7, sp, #0	@,,
 2166              	.LCFI200:
 2167              		.cfi_def_cfa_register 7
 2168              	@ interrupts.c:740: }
 740:interrupts.c  **** }
 2169              		.loc 2 740 1
 2170 03d2 00BF     		nop	
 2171 03d4 BD46     		mov	sp, r7	@,
 2172              	.LCFI201:
 2173              		.cfi_def_cfa_register 13
 2174              		@ sp needed	@
 2175 03d6 5DF8047B 		ldr	r7, [sp], #4	@,
 2176              	.LCFI202:
 2177              		.cfi_restore 7
 2178              		.cfi_def_cfa_offset 0
 2179 03da 7047     		bx	lr	@
 2180              		.cfi_endproc
 2181              	.LFE55:
 2183              		.align	1
 2184              		.global	fnI2C2_ER_IRQ
 2185              		.syntax unified
 2186              		.thumb
 2187              		.thumb_func
 2188              		.fpu fpv4-sp-d16
 2190              	fnI2C2_ER_IRQ:
 2191              	.LFB56:
 741:interrupts.c  **** 
 742:interrupts.c  **** //---------------------------------------------------------------------------------------------
 743:interrupts.c  **** //  Function Name  : I2C1_EV_IRQ
 744:interrupts.c  **** //---------------------------------------------------------------------------------------------
 745:interrupts.c  **** void fnI2C2_ER_IRQ(void)                        //--- IRQ_34
 746:interrupts.c  **** {
 2192              		.loc 2 746 1
 2193              		.cfi_startproc
 2194              		@ args = 0, pretend = 0, frame = 0
 2195              		@ frame_needed = 1, uses_anonymous_args = 0
 2196              		@ link register save eliminated.
 2197 03dc 80B4     		push	{r7}	@
 2198              	.LCFI203:
 2199              		.cfi_def_cfa_offset 4
 2200              		.cfi_offset 7, -4
 2201 03de 00AF     		add	r7, sp, #0	@,,
 2202              	.LCFI204:
 2203              		.cfi_def_cfa_register 7
 2204              	@ interrupts.c:747: }
 747:interrupts.c  **** }
 2205              		.loc 2 747 1
 2206 03e0 00BF     		nop	
 2207 03e2 BD46     		mov	sp, r7	@,
 2208              	.LCFI205:
 2209              		.cfi_def_cfa_register 13
 2210              		@ sp needed	@
 2211 03e4 5DF8047B 		ldr	r7, [sp], #4	@,
 2212              	.LCFI206:
 2213              		.cfi_restore 7
 2214              		.cfi_def_cfa_offset 0
 2215 03e8 7047     		bx	lr	@
 2216              		.cfi_endproc
 2217              	.LFE56:
 2219              		.align	1
 2220              		.global	fnSPI1_IRQ
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2224              		.fpu fpv4-sp-d16
 2226              	fnSPI1_IRQ:
 2227              	.LFB57:
 748:interrupts.c  **** 
 749:interrupts.c  **** //---------------------------------------------------------------------------------------------
 750:interrupts.c  **** //  Function Name  : SPI1_IRQ
 751:interrupts.c  **** //---------------------------------------------------------------------------------------------
 752:interrupts.c  **** void fnSPI1_IRQ(void)                           //--- IRQ_35
 753:interrupts.c  **** {
 2228              		.loc 2 753 1
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 0
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
 2233 03ea 80B4     		push	{r7}	@
 2234              	.LCFI207:
 2235              		.cfi_def_cfa_offset 4
 2236              		.cfi_offset 7, -4
 2237 03ec 00AF     		add	r7, sp, #0	@,,
 2238              	.LCFI208:
 2239              		.cfi_def_cfa_register 7
 2240              	@ interrupts.c:754: }
 754:interrupts.c  **** }
 2241              		.loc 2 754 1
 2242 03ee 00BF     		nop	
 2243 03f0 BD46     		mov	sp, r7	@,
 2244              	.LCFI209:
 2245              		.cfi_def_cfa_register 13
 2246              		@ sp needed	@
 2247 03f2 5DF8047B 		ldr	r7, [sp], #4	@,
 2248              	.LCFI210:
 2249              		.cfi_restore 7
 2250              		.cfi_def_cfa_offset 0
 2251 03f6 7047     		bx	lr	@
 2252              		.cfi_endproc
 2253              	.LFE57:
 2255              		.align	1
 2256              		.global	fnSPI2_IRQ
 2257              		.syntax unified
 2258              		.thumb
 2259              		.thumb_func
 2260              		.fpu fpv4-sp-d16
 2262              	fnSPI2_IRQ:
 2263              	.LFB58:
 755:interrupts.c  **** 
 756:interrupts.c  **** //---------------------------------------------------------------------------------------------
 757:interrupts.c  **** //  Function Name  : SPI2_IRQ
 758:interrupts.c  **** //---------------------------------------------------------------------------------------------
 759:interrupts.c  **** void  fnSPI2_IRQ(void)                          //--- IRQ_36
 760:interrupts.c  **** {
 2264              		.loc 2 760 1
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
 2268              		@ link register save eliminated.
 2269 03f8 80B4     		push	{r7}	@
 2270              	.LCFI211:
 2271              		.cfi_def_cfa_offset 4
 2272              		.cfi_offset 7, -4
 2273 03fa 00AF     		add	r7, sp, #0	@,,
 2274              	.LCFI212:
 2275              		.cfi_def_cfa_register 7
 2276              	@ interrupts.c:761: }
 761:interrupts.c  **** }
 2277              		.loc 2 761 1
 2278 03fc 00BF     		nop	
 2279 03fe BD46     		mov	sp, r7	@,
 2280              	.LCFI213:
 2281              		.cfi_def_cfa_register 13
 2282              		@ sp needed	@
 2283 0400 5DF8047B 		ldr	r7, [sp], #4	@,
 2284              	.LCFI214:
 2285              		.cfi_restore 7
 2286              		.cfi_def_cfa_offset 0
 2287 0404 7047     		bx	lr	@
 2288              		.cfi_endproc
 2289              	.LFE58:
 2291              		.align	1
 2292              		.global	fnUSART3_IRQ
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2296              		.fpu fpv4-sp-d16
 2298              	fnUSART3_IRQ:
 2299              	.LFB59:
 762:interrupts.c  **** 
 763:interrupts.c  **** //---------------------------------------------------------------------------------------------
 764:interrupts.c  **** //  Function Name  : USART1_IRQ  Defined in UART_COM Source & Header Files
 765:interrupts.c  **** //---------------------------------------------------------------------------------------------
 766:interrupts.c  **** //  void fnUSART1_IRQ(void)                     //--- IRQ_37
 767:interrupts.c  **** //  {
 768:interrupts.c  **** //  }
 769:interrupts.c  **** 
 770:interrupts.c  **** //---------------------------------------------------------------------------------------------
 771:interrupts.c  **** //  Function Name  : USART2_IRQ  Defined in UART_COM Source & Header Files
 772:interrupts.c  **** //---------------------------------------------------------------------------------------------
 773:interrupts.c  **** //  void fnUSART2_IRQ(void)                     //--- IRQ_38
 774:interrupts.c  **** //  {
 775:interrupts.c  **** //  }
 776:interrupts.c  **** 
 777:interrupts.c  **** //---------------------------------------------------------------------------------------------
 778:interrupts.c  **** //  Function Name  : USART3_IRQ  Defined in UART_COM Source & Header Files
 779:interrupts.c  **** //---------------------------------------------------------------------------------------------
 780:interrupts.c  **** void fnUSART3_IRQ(void)                         //--- IRQ_39
 781:interrupts.c  **** {
 2300              		.loc 2 781 1
 2301              		.cfi_startproc
 2302              		@ args = 0, pretend = 0, frame = 0
 2303              		@ frame_needed = 1, uses_anonymous_args = 0
 2304              		@ link register save eliminated.
 2305 0406 80B4     		push	{r7}	@
 2306              	.LCFI215:
 2307              		.cfi_def_cfa_offset 4
 2308              		.cfi_offset 7, -4
 2309 0408 00AF     		add	r7, sp, #0	@,,
 2310              	.LCFI216:
 2311              		.cfi_def_cfa_register 7
 2312              	@ interrupts.c:782: }
 782:interrupts.c  **** }
 2313              		.loc 2 782 1
 2314 040a 00BF     		nop	
 2315 040c BD46     		mov	sp, r7	@,
 2316              	.LCFI217:
 2317              		.cfi_def_cfa_register 13
 2318              		@ sp needed	@
 2319 040e 5DF8047B 		ldr	r7, [sp], #4	@,
 2320              	.LCFI218:
 2321              		.cfi_restore 7
 2322              		.cfi_def_cfa_offset 0
 2323 0412 7047     		bx	lr	@
 2324              		.cfi_endproc
 2325              	.LFE59:
 2327              		.align	1
 2328              		.global	fnEXTI_10_15_IRQ
 2329              		.syntax unified
 2330              		.thumb
 2331              		.thumb_func
 2332              		.fpu fpv4-sp-d16
 2334              	fnEXTI_10_15_IRQ:
 2335              	.LFB60:
 783:interrupts.c  **** 
 784:interrupts.c  **** //---------------------------------------------------------------------------------------------
 785:interrupts.c  **** //  Function Name  : EXTI_10_15_IRQ
 786:interrupts.c  **** //---------------------------------------------------------------------------------------------
 787:interrupts.c  **** void fnEXTI_10_15_IRQ(void)                     //--- IRQ_40
 788:interrupts.c  **** {
 2336              		.loc 2 788 1
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340              		@ link register save eliminated.
 2341 0414 80B4     		push	{r7}	@
 2342              	.LCFI219:
 2343              		.cfi_def_cfa_offset 4
 2344              		.cfi_offset 7, -4
 2345 0416 00AF     		add	r7, sp, #0	@,,
 2346              	.LCFI220:
 2347              		.cfi_def_cfa_register 7
 2348              	@ interrupts.c:789: }
 789:interrupts.c  **** }
 2349              		.loc 2 789 1
 2350 0418 00BF     		nop	
 2351 041a BD46     		mov	sp, r7	@,
 2352              	.LCFI221:
 2353              		.cfi_def_cfa_register 13
 2354              		@ sp needed	@
 2355 041c 5DF8047B 		ldr	r7, [sp], #4	@,
 2356              	.LCFI222:
 2357              		.cfi_restore 7
 2358              		.cfi_def_cfa_offset 0
 2359 0420 7047     		bx	lr	@
 2360              		.cfi_endproc
 2361              	.LFE60:
 2363              		.align	1
 2364              		.global	fnRTC_ALARM_IRQ
 2365              		.syntax unified
 2366              		.thumb
 2367              		.thumb_func
 2368              		.fpu fpv4-sp-d16
 2370              	fnRTC_ALARM_IRQ:
 2371              	.LFB61:
 790:interrupts.c  **** 
 791:interrupts.c  **** //---------------------------------------------------------------------------------------------
 792:interrupts.c  **** //  Function Name  : RTC_ALARM_IRQ
 793:interrupts.c  **** //---------------------------------------------------------------------------------------------
 794:interrupts.c  **** void fnRTC_ALARM_IRQ(void)                      //--- IRQ_41
 795:interrupts.c  **** {
 2372              		.loc 2 795 1
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 1, uses_anonymous_args = 0
 2376              		@ link register save eliminated.
 2377 0422 80B4     		push	{r7}	@
 2378              	.LCFI223:
 2379              		.cfi_def_cfa_offset 4
 2380              		.cfi_offset 7, -4
 2381 0424 00AF     		add	r7, sp, #0	@,,
 2382              	.LCFI224:
 2383              		.cfi_def_cfa_register 7
 2384              	@ interrupts.c:796: }
 796:interrupts.c  **** }
 2385              		.loc 2 796 1
 2386 0426 00BF     		nop	
 2387 0428 BD46     		mov	sp, r7	@,
 2388              	.LCFI225:
 2389              		.cfi_def_cfa_register 13
 2390              		@ sp needed	@
 2391 042a 5DF8047B 		ldr	r7, [sp], #4	@,
 2392              	.LCFI226:
 2393              		.cfi_restore 7
 2394              		.cfi_def_cfa_offset 0
 2395 042e 7047     		bx	lr	@
 2396              		.cfi_endproc
 2397              	.LFE61:
 2399              		.align	1
 2400              		.global	fnSDMMC1_IRQ
 2401              		.syntax unified
 2402              		.thumb
 2403              		.thumb_func
 2404              		.fpu fpv4-sp-d16
 2406              	fnSDMMC1_IRQ:
 2407              	.LFB62:
 797:interrupts.c  **** 
 798:interrupts.c  **** //---------------------------------------------------------------------------------------------
 799:interrupts.c  **** //   UnUsed NVIC Table Entries                  //--- IRQ_- 42 to 48
 800:interrupts.c  **** //---------------------------------------------------------------------------------------------
 801:interrupts.c  **** 
 802:interrupts.c  **** //---------------------------------------------------------------------------------------------
 803:interrupts.c  **** //  Function Name  :
 804:interrupts.c  **** //---------------------------------------------------------------------------------------------
 805:interrupts.c  **** void fnSDMMC1_IRQ(void)                         //--- IRQ_49
 806:interrupts.c  **** {
 2408              		.loc 2 806 1
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412              		@ link register save eliminated.
 2413 0430 80B4     		push	{r7}	@
 2414              	.LCFI227:
 2415              		.cfi_def_cfa_offset 4
 2416              		.cfi_offset 7, -4
 2417 0432 00AF     		add	r7, sp, #0	@,,
 2418              	.LCFI228:
 2419              		.cfi_def_cfa_register 7
 2420              	@ interrupts.c:807: }
 807:interrupts.c  **** }
 2421              		.loc 2 807 1
 2422 0434 00BF     		nop	
 2423 0436 BD46     		mov	sp, r7	@,
 2424              	.LCFI229:
 2425              		.cfi_def_cfa_register 13
 2426              		@ sp needed	@
 2427 0438 5DF8047B 		ldr	r7, [sp], #4	@,
 2428              	.LCFI230:
 2429              		.cfi_restore 7
 2430              		.cfi_def_cfa_offset 0
 2431 043c 7047     		bx	lr	@
 2432              		.cfi_endproc
 2433              	.LFE62:
 2435              		.align	1
 2436              		.global	fnSPI3_IRQ
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2440              		.fpu fpv4-sp-d16
 2442              	fnSPI3_IRQ:
 2443              	.LFB63:
 808:interrupts.c  **** 
 809:interrupts.c  **** //---------------------------------------------------------------------------------------------
 810:interrupts.c  **** //   UnUsed NVIC Table Entries                  //--- IRQ_50
 811:interrupts.c  **** //---------------------------------------------------------------------------------------------
 812:interrupts.c  **** 
 813:interrupts.c  **** //---------------------------------------------------------------------------------------------
 814:interrupts.c  **** //  Function Name  :
 815:interrupts.c  **** //---------------------------------------------------------------------------------------------
 816:interrupts.c  **** void fnSPI3_IRQ(void)                           //--- IRQ_51
 817:interrupts.c  **** {
 2444              		.loc 2 817 1
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 1, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
 2449 043e 80B4     		push	{r7}	@
 2450              	.LCFI231:
 2451              		.cfi_def_cfa_offset 4
 2452              		.cfi_offset 7, -4
 2453 0440 00AF     		add	r7, sp, #0	@,,
 2454              	.LCFI232:
 2455              		.cfi_def_cfa_register 7
 2456              	@ interrupts.c:818: }
 818:interrupts.c  **** }
 2457              		.loc 2 818 1
 2458 0442 00BF     		nop	
 2459 0444 BD46     		mov	sp, r7	@,
 2460              	.LCFI233:
 2461              		.cfi_def_cfa_register 13
 2462              		@ sp needed	@
 2463 0446 5DF8047B 		ldr	r7, [sp], #4	@,
 2464              	.LCFI234:
 2465              		.cfi_restore 7
 2466              		.cfi_def_cfa_offset 0
 2467 044a 7047     		bx	lr	@
 2468              		.cfi_endproc
 2469              	.LFE63:
 2471              		.align	1
 2472              		.global	fnUSART4_IRQ
 2473              		.syntax unified
 2474              		.thumb
 2475              		.thumb_func
 2476              		.fpu fpv4-sp-d16
 2478              	fnUSART4_IRQ:
 2479              	.LFB64:
 819:interrupts.c  **** 
 820:interrupts.c  **** //---------------------------------------------------------------------------------------------
 821:interrupts.c  **** //  Function Name  : USART4_IRQ  Defined in UART_COM Source & Header Files
 822:interrupts.c  **** //---------------------------------------------------------------------------------------------
 823:interrupts.c  **** void fnUSART4_IRQ(void)                         //--- IRQ_52
 824:interrupts.c  **** {
 2480              		.loc 2 824 1
 2481              		.cfi_startproc
 2482              		@ args = 0, pretend = 0, frame = 0
 2483              		@ frame_needed = 1, uses_anonymous_args = 0
 2484              		@ link register save eliminated.
 2485 044c 80B4     		push	{r7}	@
 2486              	.LCFI235:
 2487              		.cfi_def_cfa_offset 4
 2488              		.cfi_offset 7, -4
 2489 044e 00AF     		add	r7, sp, #0	@,,
 2490              	.LCFI236:
 2491              		.cfi_def_cfa_register 7
 2492              	@ interrupts.c:825: }
 825:interrupts.c  **** }
 2493              		.loc 2 825 1
 2494 0450 00BF     		nop	
 2495 0452 BD46     		mov	sp, r7	@,
 2496              	.LCFI237:
 2497              		.cfi_def_cfa_register 13
 2498              		@ sp needed	@
 2499 0454 5DF8047B 		ldr	r7, [sp], #4	@,
 2500              	.LCFI238:
 2501              		.cfi_restore 7
 2502              		.cfi_def_cfa_offset 0
 2503 0458 7047     		bx	lr	@
 2504              		.cfi_endproc
 2505              	.LFE64:
 2507              		.align	1
 2508              		.global	fnTIM6_IRQ
 2509              		.syntax unified
 2510              		.thumb
 2511              		.thumb_func
 2512              		.fpu fpv4-sp-d16
 2514              	fnTIM6_IRQ:
 2515              	.LFB65:
 826:interrupts.c  **** 
 827:interrupts.c  **** //---------------------------------------------------------------------------------------------
 828:interrupts.c  **** //   UnUsed NVIC Table Entries                  //--- IRQ_53
 829:interrupts.c  **** //---------------------------------------------------------------------------------------------
 830:interrupts.c  **** 
 831:interrupts.c  **** 
 832:interrupts.c  **** //---------------------------------------------------------------------------------------------
 833:interrupts.c  **** //  Function Name  :
 834:interrupts.c  **** //---------------------------------------------------------------------------------------------
 835:interrupts.c  **** void fnTIM6_IRQ(void)                           //--- IRQ_54
 836:interrupts.c  **** {
 2516              		.loc 2 836 1
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 0
 2519              		@ frame_needed = 1, uses_anonymous_args = 0
 2520              		@ link register save eliminated.
 2521 045a 80B4     		push	{r7}	@
 2522              	.LCFI239:
 2523              		.cfi_def_cfa_offset 4
 2524              		.cfi_offset 7, -4
 2525 045c 00AF     		add	r7, sp, #0	@,,
 2526              	.LCFI240:
 2527              		.cfi_def_cfa_register 7
 2528              	@ interrupts.c:837: }
 837:interrupts.c  **** }
 2529              		.loc 2 837 1
 2530 045e 00BF     		nop	
 2531 0460 BD46     		mov	sp, r7	@,
 2532              	.LCFI241:
 2533              		.cfi_def_cfa_register 13
 2534              		@ sp needed	@
 2535 0462 5DF8047B 		ldr	r7, [sp], #4	@,
 2536              	.LCFI242:
 2537              		.cfi_restore 7
 2538              		.cfi_def_cfa_offset 0
 2539 0466 7047     		bx	lr	@
 2540              		.cfi_endproc
 2541              	.LFE65:
 2543              		.align	1
 2544              		.global	fnTIM7_IRQ
 2545              		.syntax unified
 2546              		.thumb
 2547              		.thumb_func
 2548              		.fpu fpv4-sp-d16
 2550              	fnTIM7_IRQ:
 2551              	.LFB66:
 838:interrupts.c  **** 
 839:interrupts.c  **** //---------------------------------------------------------------------------------------------
 840:interrupts.c  **** //  Function Name  :
 841:interrupts.c  **** //---------------------------------------------------------------------------------------------
 842:interrupts.c  **** void fnTIM7_IRQ(void)                           //--- IRQ_55
 843:interrupts.c  **** {
 2552              		.loc 2 843 1
 2553              		.cfi_startproc
 2554              		@ args = 0, pretend = 0, frame = 0
 2555              		@ frame_needed = 1, uses_anonymous_args = 0
 2556              		@ link register save eliminated.
 2557 0468 80B4     		push	{r7}	@
 2558              	.LCFI243:
 2559              		.cfi_def_cfa_offset 4
 2560              		.cfi_offset 7, -4
 2561 046a 00AF     		add	r7, sp, #0	@,,
 2562              	.LCFI244:
 2563              		.cfi_def_cfa_register 7
 2564              	@ interrupts.c:844: }
 844:interrupts.c  **** }
 2565              		.loc 2 844 1
 2566 046c 00BF     		nop	
 2567 046e BD46     		mov	sp, r7	@,
 2568              	.LCFI245:
 2569              		.cfi_def_cfa_register 13
 2570              		@ sp needed	@
 2571 0470 5DF8047B 		ldr	r7, [sp], #4	@,
 2572              	.LCFI246:
 2573              		.cfi_restore 7
 2574              		.cfi_def_cfa_offset 0
 2575 0474 7047     		bx	lr	@
 2576              		.cfi_endproc
 2577              	.LFE66:
 2579              		.align	1
 2580              		.global	fnDMA_21_IRQ
 2581              		.syntax unified
 2582              		.thumb
 2583              		.thumb_func
 2584              		.fpu fpv4-sp-d16
 2586              	fnDMA_21_IRQ:
 2587              	.LFB67:
 845:interrupts.c  **** 
 846:interrupts.c  **** //---------------------------------------------------------------------------------------------
 847:interrupts.c  **** //  Function Name  :
 848:interrupts.c  **** //---------------------------------------------------------------------------------------------
 849:interrupts.c  **** void  fnDMA_21_IRQ(void)                        //--- IRQ_56
 850:interrupts.c  **** {
 2588              		.loc 2 850 1
 2589              		.cfi_startproc
 2590              		@ args = 0, pretend = 0, frame = 0
 2591              		@ frame_needed = 1, uses_anonymous_args = 0
 2592              		@ link register save eliminated.
 2593 0476 80B4     		push	{r7}	@
 2594              	.LCFI247:
 2595              		.cfi_def_cfa_offset 4
 2596              		.cfi_offset 7, -4
 2597 0478 00AF     		add	r7, sp, #0	@,,
 2598              	.LCFI248:
 2599              		.cfi_def_cfa_register 7
 2600              	@ interrupts.c:851: }
 851:interrupts.c  **** }
 2601              		.loc 2 851 1
 2602 047a 00BF     		nop	
 2603 047c BD46     		mov	sp, r7	@,
 2604              	.LCFI249:
 2605              		.cfi_def_cfa_register 13
 2606              		@ sp needed	@
 2607 047e 5DF8047B 		ldr	r7, [sp], #4	@,
 2608              	.LCFI250:
 2609              		.cfi_restore 7
 2610              		.cfi_def_cfa_offset 0
 2611 0482 7047     		bx	lr	@
 2612              		.cfi_endproc
 2613              	.LFE67:
 2615              		.align	1
 2616              		.global	fnDMA_22_IRQ
 2617              		.syntax unified
 2618              		.thumb
 2619              		.thumb_func
 2620              		.fpu fpv4-sp-d16
 2622              	fnDMA_22_IRQ:
 2623              	.LFB68:
 852:interrupts.c  **** 
 853:interrupts.c  **** //---------------------------------------------------------------------------------------------
 854:interrupts.c  **** //  Function Name  :
 855:interrupts.c  **** //---------------------------------------------------------------------------------------------
 856:interrupts.c  **** void  fnDMA_22_IRQ(void)                        //--- IRQ_57
 857:interrupts.c  **** {
 2624              		.loc 2 857 1
 2625              		.cfi_startproc
 2626              		@ args = 0, pretend = 0, frame = 0
 2627              		@ frame_needed = 1, uses_anonymous_args = 0
 2628              		@ link register save eliminated.
 2629 0484 80B4     		push	{r7}	@
 2630              	.LCFI251:
 2631              		.cfi_def_cfa_offset 4
 2632              		.cfi_offset 7, -4
 2633 0486 00AF     		add	r7, sp, #0	@,,
 2634              	.LCFI252:
 2635              		.cfi_def_cfa_register 7
 2636              	@ interrupts.c:858: }
 858:interrupts.c  **** }
 2637              		.loc 2 858 1
 2638 0488 00BF     		nop	
 2639 048a BD46     		mov	sp, r7	@,
 2640              	.LCFI253:
 2641              		.cfi_def_cfa_register 13
 2642              		@ sp needed	@
 2643 048c 5DF8047B 		ldr	r7, [sp], #4	@,
 2644              	.LCFI254:
 2645              		.cfi_restore 7
 2646              		.cfi_def_cfa_offset 0
 2647 0490 7047     		bx	lr	@
 2648              		.cfi_endproc
 2649              	.LFE68:
 2651              		.align	1
 2652              		.global	fnDMA_23_IRQ
 2653              		.syntax unified
 2654              		.thumb
 2655              		.thumb_func
 2656              		.fpu fpv4-sp-d16
 2658              	fnDMA_23_IRQ:
 2659              	.LFB69:
 859:interrupts.c  **** 
 860:interrupts.c  **** //---------------------------------------------------------------------------------------------
 861:interrupts.c  **** //  Function Name  :
 862:interrupts.c  **** //---------------------------------------------------------------------------------------------
 863:interrupts.c  **** void  fnDMA_23_IRQ(void)                        //--- IRQ_58
 864:interrupts.c  **** {
 2660              		.loc 2 864 1
 2661              		.cfi_startproc
 2662              		@ args = 0, pretend = 0, frame = 0
 2663              		@ frame_needed = 1, uses_anonymous_args = 0
 2664              		@ link register save eliminated.
 2665 0492 80B4     		push	{r7}	@
 2666              	.LCFI255:
 2667              		.cfi_def_cfa_offset 4
 2668              		.cfi_offset 7, -4
 2669 0494 00AF     		add	r7, sp, #0	@,,
 2670              	.LCFI256:
 2671              		.cfi_def_cfa_register 7
 2672              	@ interrupts.c:865: }
 865:interrupts.c  **** }
 2673              		.loc 2 865 1
 2674 0496 00BF     		nop	
 2675 0498 BD46     		mov	sp, r7	@,
 2676              	.LCFI257:
 2677              		.cfi_def_cfa_register 13
 2678              		@ sp needed	@
 2679 049a 5DF8047B 		ldr	r7, [sp], #4	@,
 2680              	.LCFI258:
 2681              		.cfi_restore 7
 2682              		.cfi_def_cfa_offset 0
 2683 049e 7047     		bx	lr	@
 2684              		.cfi_endproc
 2685              	.LFE69:
 2687              		.align	1
 2688              		.global	fnDMA_24_IRQ
 2689              		.syntax unified
 2690              		.thumb
 2691              		.thumb_func
 2692              		.fpu fpv4-sp-d16
 2694              	fnDMA_24_IRQ:
 2695              	.LFB70:
 866:interrupts.c  **** 
 867:interrupts.c  **** //---------------------------------------------------------------------------------------------
 868:interrupts.c  **** //  Function Name  :
 869:interrupts.c  **** //---------------------------------------------------------------------------------------------
 870:interrupts.c  **** void  fnDMA_24_IRQ(void)                        //--- IRQ_59
 871:interrupts.c  **** {
 2696              		.loc 2 871 1
 2697              		.cfi_startproc
 2698              		@ args = 0, pretend = 0, frame = 0
 2699              		@ frame_needed = 1, uses_anonymous_args = 0
 2700              		@ link register save eliminated.
 2701 04a0 80B4     		push	{r7}	@
 2702              	.LCFI259:
 2703              		.cfi_def_cfa_offset 4
 2704              		.cfi_offset 7, -4
 2705 04a2 00AF     		add	r7, sp, #0	@,,
 2706              	.LCFI260:
 2707              		.cfi_def_cfa_register 7
 2708              	@ interrupts.c:872: }
 872:interrupts.c  **** }
 2709              		.loc 2 872 1
 2710 04a4 00BF     		nop	
 2711 04a6 BD46     		mov	sp, r7	@,
 2712              	.LCFI261:
 2713              		.cfi_def_cfa_register 13
 2714              		@ sp needed	@
 2715 04a8 5DF8047B 		ldr	r7, [sp], #4	@,
 2716              	.LCFI262:
 2717              		.cfi_restore 7
 2718              		.cfi_def_cfa_offset 0
 2719 04ac 7047     		bx	lr	@
 2720              		.cfi_endproc
 2721              	.LFE70:
 2723              		.align	1
 2724              		.global	fnDMA_25_IRQ
 2725              		.syntax unified
 2726              		.thumb
 2727              		.thumb_func
 2728              		.fpu fpv4-sp-d16
 2730              	fnDMA_25_IRQ:
 2731              	.LFB71:
 873:interrupts.c  **** 
 874:interrupts.c  **** //---------------------------------------------------------------------------------------------
 875:interrupts.c  **** //  Function Name  :
 876:interrupts.c  **** //---------------------------------------------------------------------------------------------
 877:interrupts.c  **** void  fnDMA_25_IRQ(void)                        //--- IRQ_60
 878:interrupts.c  **** {
 2732              		.loc 2 878 1
 2733              		.cfi_startproc
 2734              		@ args = 0, pretend = 0, frame = 0
 2735              		@ frame_needed = 1, uses_anonymous_args = 0
 2736              		@ link register save eliminated.
 2737 04ae 80B4     		push	{r7}	@
 2738              	.LCFI263:
 2739              		.cfi_def_cfa_offset 4
 2740              		.cfi_offset 7, -4
 2741 04b0 00AF     		add	r7, sp, #0	@,,
 2742              	.LCFI264:
 2743              		.cfi_def_cfa_register 7
 2744              	@ interrupts.c:879: }
 879:interrupts.c  **** }
 2745              		.loc 2 879 1
 2746 04b2 00BF     		nop	
 2747 04b4 BD46     		mov	sp, r7	@,
 2748              	.LCFI265:
 2749              		.cfi_def_cfa_register 13
 2750              		@ sp needed	@
 2751 04b6 5DF8047B 		ldr	r7, [sp], #4	@,
 2752              	.LCFI266:
 2753              		.cfi_restore 7
 2754              		.cfi_def_cfa_offset 0
 2755 04ba 7047     		bx	lr	@
 2756              		.cfi_endproc
 2757              	.LFE71:
 2759              		.align	1
 2760              		.global	fnCOMP_IRQ
 2761              		.syntax unified
 2762              		.thumb
 2763              		.thumb_func
 2764              		.fpu fpv4-sp-d16
 2766              	fnCOMP_IRQ:
 2767              	.LFB72:
 880:interrupts.c  **** 
 881:interrupts.c  **** //---------------------------------------------------------------------------------------------
 882:interrupts.c  **** //  Function Name  : Unused IRQ 61, 62, 63
 883:interrupts.c  **** //---------------------------------------------------------------------------------------------
 884:interrupts.c  **** 
 885:interrupts.c  **** //---------------------------------------------------------------------------------------------
 886:interrupts.c  **** //  Function Name  : COMParator IRQ
 887:interrupts.c  **** //---------------------------------------------------------------------------------------------
 888:interrupts.c  **** void fnCOMP_IRQ(void)                           //--- IRQ_64
 889:interrupts.c  **** {
 2768              		.loc 2 889 1
 2769              		.cfi_startproc
 2770              		@ args = 0, pretend = 0, frame = 0
 2771              		@ frame_needed = 1, uses_anonymous_args = 0
 2772              		@ link register save eliminated.
 2773 04bc 80B4     		push	{r7}	@
 2774              	.LCFI267:
 2775              		.cfi_def_cfa_offset 4
 2776              		.cfi_offset 7, -4
 2777 04be 00AF     		add	r7, sp, #0	@,,
 2778              	.LCFI268:
 2779              		.cfi_def_cfa_register 7
 2780              	@ interrupts.c:890: }
 890:interrupts.c  **** }
 2781              		.loc 2 890 1
 2782 04c0 00BF     		nop	
 2783 04c2 BD46     		mov	sp, r7	@,
 2784              	.LCFI269:
 2785              		.cfi_def_cfa_register 13
 2786              		@ sp needed	@
 2787 04c4 5DF8047B 		ldr	r7, [sp], #4	@,
 2788              	.LCFI270:
 2789              		.cfi_restore 7
 2790              		.cfi_def_cfa_offset 0
 2791 04c8 7047     		bx	lr	@
 2792              		.cfi_endproc
 2793              	.LFE72:
 2795              		.align	1
 2796              		.global	fnLPTIM1_IRQ
 2797              		.syntax unified
 2798              		.thumb
 2799              		.thumb_func
 2800              		.fpu fpv4-sp-d16
 2802              	fnLPTIM1_IRQ:
 2803              	.LFB73:
 891:interrupts.c  **** 
 892:interrupts.c  **** //---------------------------------------------------------------------------------------------
 893:interrupts.c  **** //  Function Name  : LPTIM1 IRQ
 894:interrupts.c  **** //---------------------------------------------------------------------------------------------
 895:interrupts.c  **** void fnLPTIM1_IRQ(void)                         //--- IRQ_65
 896:interrupts.c  **** {
 2804              		.loc 2 896 1
 2805              		.cfi_startproc
 2806              		@ args = 0, pretend = 0, frame = 0
 2807              		@ frame_needed = 1, uses_anonymous_args = 0
 2808              		@ link register save eliminated.
 2809 04ca 80B4     		push	{r7}	@
 2810              	.LCFI271:
 2811              		.cfi_def_cfa_offset 4
 2812              		.cfi_offset 7, -4
 2813 04cc 00AF     		add	r7, sp, #0	@,,
 2814              	.LCFI272:
 2815              		.cfi_def_cfa_register 7
 2816              	@ interrupts.c:897: }
 897:interrupts.c  **** }
 2817              		.loc 2 897 1
 2818 04ce 00BF     		nop	
 2819 04d0 BD46     		mov	sp, r7	@,
 2820              	.LCFI273:
 2821              		.cfi_def_cfa_register 13
 2822              		@ sp needed	@
 2823 04d2 5DF8047B 		ldr	r7, [sp], #4	@,
 2824              	.LCFI274:
 2825              		.cfi_restore 7
 2826              		.cfi_def_cfa_offset 0
 2827 04d6 7047     		bx	lr	@
 2828              		.cfi_endproc
 2829              	.LFE73:
 2831              		.align	1
 2832              		.global	fnLPTIM2_IRQ
 2833              		.syntax unified
 2834              		.thumb
 2835              		.thumb_func
 2836              		.fpu fpv4-sp-d16
 2838              	fnLPTIM2_IRQ:
 2839              	.LFB74:
 898:interrupts.c  **** 
 899:interrupts.c  **** //---------------------------------------------------------------------------------------------
 900:interrupts.c  **** //  Function Name  : LPTIM2 IRQ
 901:interrupts.c  **** //---------------------------------------------------------------------------------------------
 902:interrupts.c  **** void fnLPTIM2_IRQ(void)                         //--- IRQ_66
 903:interrupts.c  **** {
 2840              		.loc 2 903 1
 2841              		.cfi_startproc
 2842              		@ args = 0, pretend = 0, frame = 0
 2843              		@ frame_needed = 1, uses_anonymous_args = 0
 2844              		@ link register save eliminated.
 2845 04d8 80B4     		push	{r7}	@
 2846              	.LCFI275:
 2847              		.cfi_def_cfa_offset 4
 2848              		.cfi_offset 7, -4
 2849 04da 00AF     		add	r7, sp, #0	@,,
 2850              	.LCFI276:
 2851              		.cfi_def_cfa_register 7
 2852              	@ interrupts.c:904: }
 904:interrupts.c  **** }
 2853              		.loc 2 904 1
 2854 04dc 00BF     		nop	
 2855 04de BD46     		mov	sp, r7	@,
 2856              	.LCFI277:
 2857              		.cfi_def_cfa_register 13
 2858              		@ sp needed	@
 2859 04e0 5DF8047B 		ldr	r7, [sp], #4	@,
 2860              	.LCFI278:
 2861              		.cfi_restore 7
 2862              		.cfi_def_cfa_offset 0
 2863 04e4 7047     		bx	lr	@
 2864              		.cfi_endproc
 2865              	.LFE74:
 2867              		.align	1
 2868              		.global	fnUSB_FS_IRQ
 2869              		.syntax unified
 2870              		.thumb
 2871              		.thumb_func
 2872              		.fpu fpv4-sp-d16
 2874              	fnUSB_FS_IRQ:
 2875              	.LFB75:
 905:interrupts.c  **** 
 906:interrupts.c  **** //---------------------------------------------------------------------------------------------
 907:interrupts.c  **** //  Function Name  : USB Full Speed IRQ
 908:interrupts.c  **** //---------------------------------------------------------------------------------------------
 909:interrupts.c  **** void fnUSB_FS_IRQ(void)                         //--- IRQ_67
 910:interrupts.c  **** {
 2876              		.loc 2 910 1
 2877              		.cfi_startproc
 2878              		@ args = 0, pretend = 0, frame = 0
 2879              		@ frame_needed = 1, uses_anonymous_args = 0
 2880              		@ link register save eliminated.
 2881 04e6 80B4     		push	{r7}	@
 2882              	.LCFI279:
 2883              		.cfi_def_cfa_offset 4
 2884              		.cfi_offset 7, -4
 2885 04e8 00AF     		add	r7, sp, #0	@,,
 2886              	.LCFI280:
 2887              		.cfi_def_cfa_register 7
 2888              	@ interrupts.c:911: }
 911:interrupts.c  **** }
 2889              		.loc 2 911 1
 2890 04ea 00BF     		nop	
 2891 04ec BD46     		mov	sp, r7	@,
 2892              	.LCFI281:
 2893              		.cfi_def_cfa_register 13
 2894              		@ sp needed	@
 2895 04ee 5DF8047B 		ldr	r7, [sp], #4	@,
 2896              	.LCFI282:
 2897              		.cfi_restore 7
 2898              		.cfi_def_cfa_offset 0
 2899 04f2 7047     		bx	lr	@
 2900              		.cfi_endproc
 2901              	.LFE75:
 2903              		.align	1
 2904              		.global	fnDMA_26_IRQ
 2905              		.syntax unified
 2906              		.thumb
 2907              		.thumb_func
 2908              		.fpu fpv4-sp-d16
 2910              	fnDMA_26_IRQ:
 2911              	.LFB76:
 912:interrupts.c  **** 
 913:interrupts.c  **** //---------------------------------------------------------------------------------------------
 914:interrupts.c  **** //  Function Name  : DMA_26_IRQ
 915:interrupts.c  **** //---------------------------------------------------------------------------------------------
 916:interrupts.c  **** void fnDMA_26_IRQ(void)                         //--- IRQ_68
 917:interrupts.c  **** {
 2912              		.loc 2 917 1
 2913              		.cfi_startproc
 2914              		@ args = 0, pretend = 0, frame = 0
 2915              		@ frame_needed = 1, uses_anonymous_args = 0
 2916              		@ link register save eliminated.
 2917 04f4 80B4     		push	{r7}	@
 2918              	.LCFI283:
 2919              		.cfi_def_cfa_offset 4
 2920              		.cfi_offset 7, -4
 2921 04f6 00AF     		add	r7, sp, #0	@,,
 2922              	.LCFI284:
 2923              		.cfi_def_cfa_register 7
 2924              	@ interrupts.c:918: }
 918:interrupts.c  **** }
 2925              		.loc 2 918 1
 2926 04f8 00BF     		nop	
 2927 04fa BD46     		mov	sp, r7	@,
 2928              	.LCFI285:
 2929              		.cfi_def_cfa_register 13
 2930              		@ sp needed	@
 2931 04fc 5DF8047B 		ldr	r7, [sp], #4	@,
 2932              	.LCFI286:
 2933              		.cfi_restore 7
 2934              		.cfi_def_cfa_offset 0
 2935 0500 7047     		bx	lr	@
 2936              		.cfi_endproc
 2937              	.LFE76:
 2939              		.align	1
 2940              		.global	fnDMA_27_IRQ
 2941              		.syntax unified
 2942              		.thumb
 2943              		.thumb_func
 2944              		.fpu fpv4-sp-d16
 2946              	fnDMA_27_IRQ:
 2947              	.LFB77:
 919:interrupts.c  **** 
 920:interrupts.c  **** //---------------------------------------------------------------------------------------------
 921:interrupts.c  **** //  Function Name  : DMA_27_IRQ
 922:interrupts.c  **** //---------------------------------------------------------------------------------------------
 923:interrupts.c  **** void fnDMA_27_IRQ(void)                         //--- IRQ_69
 924:interrupts.c  **** {
 2948              		.loc 2 924 1
 2949              		.cfi_startproc
 2950              		@ args = 0, pretend = 0, frame = 0
 2951              		@ frame_needed = 1, uses_anonymous_args = 0
 2952              		@ link register save eliminated.
 2953 0502 80B4     		push	{r7}	@
 2954              	.LCFI287:
 2955              		.cfi_def_cfa_offset 4
 2956              		.cfi_offset 7, -4
 2957 0504 00AF     		add	r7, sp, #0	@,,
 2958              	.LCFI288:
 2959              		.cfi_def_cfa_register 7
 2960              	@ interrupts.c:925: }
 925:interrupts.c  **** }
 2961              		.loc 2 925 1
 2962 0506 00BF     		nop	
 2963 0508 BD46     		mov	sp, r7	@,
 2964              	.LCFI289:
 2965              		.cfi_def_cfa_register 13
 2966              		@ sp needed	@
 2967 050a 5DF8047B 		ldr	r7, [sp], #4	@,
 2968              	.LCFI290:
 2969              		.cfi_restore 7
 2970              		.cfi_def_cfa_offset 0
 2971 050e 7047     		bx	lr	@
 2972              		.cfi_endproc
 2973              	.LFE77:
 2975              		.align	1
 2976              		.global	fnLPUART1_IRQ
 2977              		.syntax unified
 2978              		.thumb
 2979              		.thumb_func
 2980              		.fpu fpv4-sp-d16
 2982              	fnLPUART1_IRQ:
 2983              	.LFB78:
 926:interrupts.c  **** 
 927:interrupts.c  **** //---------------------------------------------------------------------------------------------
 928:interrupts.c  **** //  Function Name  : Low Power UART 1
 929:interrupts.c  **** //---------------------------------------------------------------------------------------------
 930:interrupts.c  **** void fnLPUART1_IRQ(void)                        //--- IRQ_70
 931:interrupts.c  **** {
 2984              		.loc 2 931 1
 2985              		.cfi_startproc
 2986              		@ args = 0, pretend = 0, frame = 0
 2987              		@ frame_needed = 1, uses_anonymous_args = 0
 2988              		@ link register save eliminated.
 2989 0510 80B4     		push	{r7}	@
 2990              	.LCFI291:
 2991              		.cfi_def_cfa_offset 4
 2992              		.cfi_offset 7, -4
 2993 0512 00AF     		add	r7, sp, #0	@,,
 2994              	.LCFI292:
 2995              		.cfi_def_cfa_register 7
 2996              	@ interrupts.c:932: }
 932:interrupts.c  **** }
 2997              		.loc 2 932 1
 2998 0514 00BF     		nop	
 2999 0516 BD46     		mov	sp, r7	@,
 3000              	.LCFI293:
 3001              		.cfi_def_cfa_register 13
 3002              		@ sp needed	@
 3003 0518 5DF8047B 		ldr	r7, [sp], #4	@,
 3004              	.LCFI294:
 3005              		.cfi_restore 7
 3006              		.cfi_def_cfa_offset 0
 3007 051c 7047     		bx	lr	@
 3008              		.cfi_endproc
 3009              	.LFE78:
 3011              		.align	1
 3012              		.global	fnQUADSPI_IRQ
 3013              		.syntax unified
 3014              		.thumb
 3015              		.thumb_func
 3016              		.fpu fpv4-sp-d16
 3018              	fnQUADSPI_IRQ:
 3019              	.LFB79:
 933:interrupts.c  **** 
 934:interrupts.c  **** //---------------------------------------------------------------------------------------------
 935:interrupts.c  **** //  Function Name  : QUAD SPI
 936:interrupts.c  **** //---------------------------------------------------------------------------------------------
 937:interrupts.c  **** void fnQUADSPI_IRQ(void)                        //--- IRQ_71
 938:interrupts.c  **** {
 3020              		.loc 2 938 1
 3021              		.cfi_startproc
 3022              		@ args = 0, pretend = 0, frame = 0
 3023              		@ frame_needed = 1, uses_anonymous_args = 0
 3024              		@ link register save eliminated.
 3025 051e 80B4     		push	{r7}	@
 3026              	.LCFI295:
 3027              		.cfi_def_cfa_offset 4
 3028              		.cfi_offset 7, -4
 3029 0520 00AF     		add	r7, sp, #0	@,,
 3030              	.LCFI296:
 3031              		.cfi_def_cfa_register 7
 3032              	@ interrupts.c:939: }
 939:interrupts.c  **** }
 3033              		.loc 2 939 1
 3034 0522 00BF     		nop	
 3035 0524 BD46     		mov	sp, r7	@,
 3036              	.LCFI297:
 3037              		.cfi_def_cfa_register 13
 3038              		@ sp needed	@
 3039 0526 5DF8047B 		ldr	r7, [sp], #4	@,
 3040              	.LCFI298:
 3041              		.cfi_restore 7
 3042              		.cfi_def_cfa_offset 0
 3043 052a 7047     		bx	lr	@
 3044              		.cfi_endproc
 3045              	.LFE79:
 3047              		.align	1
 3048              		.global	fnI2C3_EV_IRQ
 3049              		.syntax unified
 3050              		.thumb
 3051              		.thumb_func
 3052              		.fpu fpv4-sp-d16
 3054              	fnI2C3_EV_IRQ:
 3055              	.LFB80:
 940:interrupts.c  **** 
 941:interrupts.c  **** //---------------------------------------------------------------------------------------------
 942:interrupts.c  **** //  Function Name  : I2C3 Event
 943:interrupts.c  **** //---------------------------------------------------------------------------------------------
 944:interrupts.c  **** void fnI2C3_EV_IRQ(void)                        //--- IRQ_72
 945:interrupts.c  **** {
 3056              		.loc 2 945 1
 3057              		.cfi_startproc
 3058              		@ args = 0, pretend = 0, frame = 0
 3059              		@ frame_needed = 1, uses_anonymous_args = 0
 3060              		@ link register save eliminated.
 3061 052c 80B4     		push	{r7}	@
 3062              	.LCFI299:
 3063              		.cfi_def_cfa_offset 4
 3064              		.cfi_offset 7, -4
 3065 052e 00AF     		add	r7, sp, #0	@,,
 3066              	.LCFI300:
 3067              		.cfi_def_cfa_register 7
 3068              	@ interrupts.c:946: }
 946:interrupts.c  **** }
 3069              		.loc 2 946 1
 3070 0530 00BF     		nop	
 3071 0532 BD46     		mov	sp, r7	@,
 3072              	.LCFI301:
 3073              		.cfi_def_cfa_register 13
 3074              		@ sp needed	@
 3075 0534 5DF8047B 		ldr	r7, [sp], #4	@,
 3076              	.LCFI302:
 3077              		.cfi_restore 7
 3078              		.cfi_def_cfa_offset 0
 3079 0538 7047     		bx	lr	@
 3080              		.cfi_endproc
 3081              	.LFE80:
 3083              		.align	1
 3084              		.global	fnI2C3_ER_IRQ
 3085              		.syntax unified
 3086              		.thumb
 3087              		.thumb_func
 3088              		.fpu fpv4-sp-d16
 3090              	fnI2C3_ER_IRQ:
 3091              	.LFB81:
 947:interrupts.c  **** 
 948:interrupts.c  **** //---------------------------------------------------------------------------------------------
 949:interrupts.c  **** //  Function Name  : I2C3 Error
 950:interrupts.c  **** //---------------------------------------------------------------------------------------------
 951:interrupts.c  **** void fnI2C3_ER_IRQ(void)                        //--- IRQ_73
 952:interrupts.c  **** {
 3092              		.loc 2 952 1
 3093              		.cfi_startproc
 3094              		@ args = 0, pretend = 0, frame = 0
 3095              		@ frame_needed = 1, uses_anonymous_args = 0
 3096              		@ link register save eliminated.
 3097 053a 80B4     		push	{r7}	@
 3098              	.LCFI303:
 3099              		.cfi_def_cfa_offset 4
 3100              		.cfi_offset 7, -4
 3101 053c 00AF     		add	r7, sp, #0	@,,
 3102              	.LCFI304:
 3103              		.cfi_def_cfa_register 7
 3104              	@ interrupts.c:953: }
 953:interrupts.c  **** }
 3105              		.loc 2 953 1
 3106 053e 00BF     		nop	
 3107 0540 BD46     		mov	sp, r7	@,
 3108              	.LCFI305:
 3109              		.cfi_def_cfa_register 13
 3110              		@ sp needed	@
 3111 0542 5DF8047B 		ldr	r7, [sp], #4	@,
 3112              	.LCFI306:
 3113              		.cfi_restore 7
 3114              		.cfi_def_cfa_offset 0
 3115 0546 7047     		bx	lr	@
 3116              		.cfi_endproc
 3117              	.LFE81:
 3119              		.align	1
 3120              		.global	fnSAI_IRQ
 3121              		.syntax unified
 3122              		.thumb
 3123              		.thumb_func
 3124              		.fpu fpv4-sp-d16
 3126              	fnSAI_IRQ:
 3127              	.LFB82:
 954:interrupts.c  **** 
 955:interrupts.c  **** //---------------------------------------------------------------------------------------------
 956:interrupts.c  **** //  Function Name  : SAI Event
 957:interrupts.c  **** //---------------------------------------------------------------------------------------------
 958:interrupts.c  **** void fnSAI_IRQ(void)                            //--- IRQ_74
 959:interrupts.c  **** {
 3128              		.loc 2 959 1
 3129              		.cfi_startproc
 3130              		@ args = 0, pretend = 0, frame = 0
 3131              		@ frame_needed = 1, uses_anonymous_args = 0
 3132              		@ link register save eliminated.
 3133 0548 80B4     		push	{r7}	@
 3134              	.LCFI307:
 3135              		.cfi_def_cfa_offset 4
 3136              		.cfi_offset 7, -4
 3137 054a 00AF     		add	r7, sp, #0	@,,
 3138              	.LCFI308:
 3139              		.cfi_def_cfa_register 7
 3140              	@ interrupts.c:960: }
 960:interrupts.c  **** }
 3141              		.loc 2 960 1
 3142 054c 00BF     		nop	
 3143 054e BD46     		mov	sp, r7	@,
 3144              	.LCFI309:
 3145              		.cfi_def_cfa_register 13
 3146              		@ sp needed	@
 3147 0550 5DF8047B 		ldr	r7, [sp], #4	@,
 3148              	.LCFI310:
 3149              		.cfi_restore 7
 3150              		.cfi_def_cfa_offset 0
 3151 0554 7047     		bx	lr	@
 3152              		.cfi_endproc
 3153              	.LFE82:
 3155              		.align	1
 3156              		.global	fnSWPMI1_IRQ
 3157              		.syntax unified
 3158              		.thumb
 3159              		.thumb_func
 3160              		.fpu fpv4-sp-d16
 3162              	fnSWPMI1_IRQ:
 3163              	.LFB83:
 961:interrupts.c  **** 
 962:interrupts.c  **** //---------------------------------------------------------------------------------------------
 963:interrupts.c  **** //  Function Name  : Unused                     //--- IRQ 75
 964:interrupts.c  **** //---------------------------------------------------------------------------------------------
 965:interrupts.c  **** 
 966:interrupts.c  **** //---------------------------------------------------------------------------------------------
 967:interrupts.c  **** //  Function Name  : SWPMI1 Event
 968:interrupts.c  **** //---------------------------------------------------------------------------------------------
 969:interrupts.c  **** void fnSWPMI1_IRQ(void)                         //--- IRQ_76
 970:interrupts.c  **** {
 3164              		.loc 2 970 1
 3165              		.cfi_startproc
 3166              		@ args = 0, pretend = 0, frame = 0
 3167              		@ frame_needed = 1, uses_anonymous_args = 0
 3168              		@ link register save eliminated.
 3169 0556 80B4     		push	{r7}	@
 3170              	.LCFI311:
 3171              		.cfi_def_cfa_offset 4
 3172              		.cfi_offset 7, -4
 3173 0558 00AF     		add	r7, sp, #0	@,,
 3174              	.LCFI312:
 3175              		.cfi_def_cfa_register 7
 3176              	@ interrupts.c:971: }
 971:interrupts.c  **** }
 3177              		.loc 2 971 1
 3178 055a 00BF     		nop	
 3179 055c BD46     		mov	sp, r7	@,
 3180              	.LCFI313:
 3181              		.cfi_def_cfa_register 13
 3182              		@ sp needed	@
 3183 055e 5DF8047B 		ldr	r7, [sp], #4	@,
 3184              	.LCFI314:
 3185              		.cfi_restore 7
 3186              		.cfi_def_cfa_offset 0
 3187 0562 7047     		bx	lr	@
 3188              		.cfi_endproc
 3189              	.LFE83:
 3191              		.align	1
 3192              		.global	fnTSC_IRQ
 3193              		.syntax unified
 3194              		.thumb
 3195              		.thumb_func
 3196              		.fpu fpv4-sp-d16
 3198              	fnTSC_IRQ:
 3199              	.LFB84:
 972:interrupts.c  **** 
 973:interrupts.c  **** //---------------------------------------------------------------------------------------------
 974:interrupts.c  **** //  Function Name  : TSC Event
 975:interrupts.c  **** //---------------------------------------------------------------------------------------------
 976:interrupts.c  **** void fnTSC_IRQ(void)                            //--- IRQ_77
 977:interrupts.c  **** {
 3200              		.loc 2 977 1
 3201              		.cfi_startproc
 3202              		@ args = 0, pretend = 0, frame = 0
 3203              		@ frame_needed = 1, uses_anonymous_args = 0
 3204              		@ link register save eliminated.
 3205 0564 80B4     		push	{r7}	@
 3206              	.LCFI315:
 3207              		.cfi_def_cfa_offset 4
 3208              		.cfi_offset 7, -4
 3209 0566 00AF     		add	r7, sp, #0	@,,
 3210              	.LCFI316:
 3211              		.cfi_def_cfa_register 7
 3212              	@ interrupts.c:978: }
 978:interrupts.c  **** }
 3213              		.loc 2 978 1
 3214 0568 00BF     		nop	
 3215 056a BD46     		mov	sp, r7	@,
 3216              	.LCFI317:
 3217              		.cfi_def_cfa_register 13
 3218              		@ sp needed	@
 3219 056c 5DF8047B 		ldr	r7, [sp], #4	@,
 3220              	.LCFI318:
 3221              		.cfi_restore 7
 3222              		.cfi_def_cfa_offset 0
 3223 0570 7047     		bx	lr	@
 3224              		.cfi_endproc
 3225              	.LFE84:
 3227              		.align	1
 3228              		.global	fnRNG_IRQ
 3229              		.syntax unified
 3230              		.thumb
 3231              		.thumb_func
 3232              		.fpu fpv4-sp-d16
 3234              	fnRNG_IRQ:
 3235              	.LFB85:
 979:interrupts.c  **** 
 980:interrupts.c  **** //---------------------------------------------------------------------------------------------
 981:interrupts.c  **** //  Function Name  : Unused                     //--- IRQ 78, 79
 982:interrupts.c  **** //---------------------------------------------------------------------------------------------
 983:interrupts.c  **** 
 984:interrupts.c  **** //---------------------------------------------------------------------------------------------
 985:interrupts.c  **** //  Function Name  : Random Number Generator
 986:interrupts.c  **** //---------------------------------------------------------------------------------------------
 987:interrupts.c  **** void fnRNG_IRQ(void)                            //--- IRQ_80
 988:interrupts.c  **** {
 3236              		.loc 2 988 1
 3237              		.cfi_startproc
 3238              		@ args = 0, pretend = 0, frame = 0
 3239              		@ frame_needed = 1, uses_anonymous_args = 0
 3240              		@ link register save eliminated.
 3241 0572 80B4     		push	{r7}	@
 3242              	.LCFI319:
 3243              		.cfi_def_cfa_offset 4
 3244              		.cfi_offset 7, -4
 3245 0574 00AF     		add	r7, sp, #0	@,,
 3246              	.LCFI320:
 3247              		.cfi_def_cfa_register 7
 3248              	@ interrupts.c:989: }
 989:interrupts.c  **** }
 3249              		.loc 2 989 1
 3250 0576 00BF     		nop	
 3251 0578 BD46     		mov	sp, r7	@,
 3252              	.LCFI321:
 3253              		.cfi_def_cfa_register 13
 3254              		@ sp needed	@
 3255 057a 5DF8047B 		ldr	r7, [sp], #4	@,
 3256              	.LCFI322:
 3257              		.cfi_restore 7
 3258              		.cfi_def_cfa_offset 0
 3259 057e 7047     		bx	lr	@
 3260              		.cfi_endproc
 3261              	.LFE85:
 3263              		.align	1
 3264              		.global	fnFPU_IRQ
 3265              		.syntax unified
 3266              		.thumb
 3267              		.thumb_func
 3268              		.fpu fpv4-sp-d16
 3270              	fnFPU_IRQ:
 3271              	.LFB86:
 990:interrupts.c  **** 
 991:interrupts.c  **** //---------------------------------------------------------------------------------------------
 992:interrupts.c  **** //  Function Name  : Floating Point Processor
 993:interrupts.c  **** //---------------------------------------------------------------------------------------------
 994:interrupts.c  **** void fnFPU_IRQ(void)                            //--- IRQ_81
 995:interrupts.c  **** {
 3272              		.loc 2 995 1
 3273              		.cfi_startproc
 3274              		@ args = 0, pretend = 0, frame = 0
 3275              		@ frame_needed = 1, uses_anonymous_args = 0
 3276              		@ link register save eliminated.
 3277 0580 80B4     		push	{r7}	@
 3278              	.LCFI323:
 3279              		.cfi_def_cfa_offset 4
 3280              		.cfi_offset 7, -4
 3281 0582 00AF     		add	r7, sp, #0	@,,
 3282              	.LCFI324:
 3283              		.cfi_def_cfa_register 7
 3284              	@ interrupts.c:996: }
 996:interrupts.c  **** }
 3285              		.loc 2 996 1
 3286 0584 00BF     		nop	
 3287 0586 BD46     		mov	sp, r7	@,
 3288              	.LCFI325:
 3289              		.cfi_def_cfa_register 13
 3290              		@ sp needed	@
 3291 0588 5DF8047B 		ldr	r7, [sp], #4	@,
 3292              	.LCFI326:
 3293              		.cfi_restore 7
 3294              		.cfi_def_cfa_offset 0
 3295 058c 7047     		bx	lr	@
 3296              		.cfi_endproc
 3297              	.LFE86:
 3299              		.align	1
 3300              		.global	fnCRS_IRQ
 3301              		.syntax unified
 3302              		.thumb
 3303              		.thumb_func
 3304              		.fpu fpv4-sp-d16
 3306              	fnCRS_IRQ:
 3307              	.LFB87:
 997:interrupts.c  **** 
 998:interrupts.c  **** //---------------------------------------------------------------------------------------------
 999:interrupts.c  **** //  Function Name  : CRS Event
1000:interrupts.c  **** //---------------------------------------------------------------------------------------------
1001:interrupts.c  **** void fnCRS_IRQ(void)                            //--- IRQ_82
1002:interrupts.c  **** {
 3308              		.loc 2 1002 1
 3309              		.cfi_startproc
 3310              		@ args = 0, pretend = 0, frame = 0
 3311              		@ frame_needed = 1, uses_anonymous_args = 0
 3312              		@ link register save eliminated.
 3313 058e 80B4     		push	{r7}	@
 3314              	.LCFI327:
 3315              		.cfi_def_cfa_offset 4
 3316              		.cfi_offset 7, -4
 3317 0590 00AF     		add	r7, sp, #0	@,,
 3318              	.LCFI328:
 3319              		.cfi_def_cfa_register 7
 3320              	@ interrupts.c:1003: }
1003:interrupts.c  **** }
 3321              		.loc 2 1003 1
 3322 0592 00BF     		nop	
 3323 0594 BD46     		mov	sp, r7	@,
 3324              	.LCFI329:
 3325              		.cfi_def_cfa_register 13
 3326              		@ sp needed	@
 3327 0596 5DF8047B 		ldr	r7, [sp], #4	@,
 3328              	.LCFI330:
 3329              		.cfi_restore 7
 3330              		.cfi_def_cfa_offset 0
 3331 059a 7047     		bx	lr	@
 3332              		.cfi_endproc
 3333              	.LFE87:
 3335              		.align	1
 3336              		.global	fnEnaInt
 3337              		.syntax unified
 3338              		.thumb
 3339              		.thumb_func
 3340              		.fpu fpv4-sp-d16
 3342              	fnEnaInt:
 3343              	.LFB88:
1004:interrupts.c  **** 
1005:interrupts.c  **** //=============================================================================================
1006:interrupts.c  **** //    Functions for interrupt Controller
1007:interrupts.c  **** //=============================================================================================
1008:interrupts.c  **** 
1009:interrupts.c  **** //---------------------------------------------------------------------------------------------
1010:interrupts.c  **** //    Enable Individual Interrupts  (0 to 96) (97 Total Interrupts)
1011:interrupts.c  **** //---------------------------------------------------------------------------------------------
1012:interrupts.c  **** void  fnEnaInt (u16 uwIntNum)
1013:interrupts.c  **** {
 3344              		.loc 2 1013 1
 3345              		.cfi_startproc
 3346              		@ args = 0, pretend = 0, frame = 8
 3347              		@ frame_needed = 1, uses_anonymous_args = 0
 3348 059c 80B5     		push	{r7, lr}	@
 3349              	.LCFI331:
 3350              		.cfi_def_cfa_offset 8
 3351              		.cfi_offset 7, -8
 3352              		.cfi_offset 14, -4
 3353 059e 82B0     		sub	sp, sp, #8	@,,
 3354              	.LCFI332:
 3355              		.cfi_def_cfa_offset 16
 3356 05a0 00AF     		add	r7, sp, #0	@,,
 3357              	.LCFI333:
 3358              		.cfi_def_cfa_register 7
 3359 05a2 0346     		mov	r3, r0	@ tmp111, uwIntNum
 3360 05a4 FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp112, uwIntNum
 3361              	@ interrupts.c:1014:   GID;                                            //--- Kill Other Interrupts
1014:interrupts.c  ****   GID;                                            //--- Kill Other Interrupts
 3362              		.loc 2 1014 3
 3363              		.syntax unified
 3364              	@ 1014 "interrupts.c" 1
 3365 05a6 72B6     		cpsid   i
 3366              	@ 0 "" 2
 3367              	@ interrupts.c:1015:   NVIC_EnableIRQ(uwIntNum);
1015:interrupts.c  ****   NVIC_EnableIRQ(uwIntNum);
 3368              		.loc 2 1015 3
 3369              		.thumb
 3370              		.syntax unified
 3371 05a8 FB88     		ldrh	r3, [r7, #6]	@ _1, uwIntNum
 3372 05aa 1846     		mov	r0, r3	@, _1
 3373 05ac FFF728FD 		bl	NVIC_EnableIRQ		@
 3374              	@ interrupts.c:1016:   GIE;                                            //--- Enable Other Interrupt
1016:interrupts.c  ****   GIE;                                            //--- Enable Other Interrupts
 3375              		.loc 2 1016 3
 3376              		.syntax unified
 3377              	@ 1016 "interrupts.c" 1
 3378 05b0 62B6     		cpsie   i
 3379              	@ 0 "" 2
 3380              	@ interrupts.c:1017: }
1017:interrupts.c  **** }
 3381              		.loc 2 1017 1
 3382              		.thumb
 3383              		.syntax unified
 3384 05b2 00BF     		nop	
 3385 05b4 0837     		adds	r7, r7, #8	@,,
 3386              	.LCFI334:
 3387              		.cfi_def_cfa_offset 8
 3388 05b6 BD46     		mov	sp, r7	@,
 3389              	.LCFI335:
 3390              		.cfi_def_cfa_register 13
 3391              		@ sp needed	@
 3392 05b8 80BD     		pop	{r7, pc}	@
 3393              		.cfi_endproc
 3394              	.LFE88:
 3396              		.align	1
 3397              		.global	fnDisInt
 3398              		.syntax unified
 3399              		.thumb
 3400              		.thumb_func
 3401              		.fpu fpv4-sp-d16
 3403              	fnDisInt:
 3404              	.LFB89:
1018:interrupts.c  **** 
1019:interrupts.c  **** //---------------------------------------------------------------------------------------------
1020:interrupts.c  **** //    Disable Individual Interrupt (0 to 96)
1021:interrupts.c  **** //---------------------------------------------------------------------------------------------
1022:interrupts.c  **** void  fnDisInt (u16 uwIntNum)
1023:interrupts.c  **** {
 3405              		.loc 2 1023 1
 3406              		.cfi_startproc
 3407              		@ args = 0, pretend = 0, frame = 8
 3408              		@ frame_needed = 1, uses_anonymous_args = 0
 3409 05ba 80B5     		push	{r7, lr}	@
 3410              	.LCFI336:
 3411              		.cfi_def_cfa_offset 8
 3412              		.cfi_offset 7, -8
 3413              		.cfi_offset 14, -4
 3414 05bc 82B0     		sub	sp, sp, #8	@,,
 3415              	.LCFI337:
 3416              		.cfi_def_cfa_offset 16
 3417 05be 00AF     		add	r7, sp, #0	@,,
 3418              	.LCFI338:
 3419              		.cfi_def_cfa_register 7
 3420 05c0 0346     		mov	r3, r0	@ tmp111, uwIntNum
 3421 05c2 FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp112, uwIntNum
 3422              	@ interrupts.c:1024:   GID;                                            //--- Kill Other Interrupts
1024:interrupts.c  ****   GID;                                            //--- Kill Other Interrupts
 3423              		.loc 2 1024 3
 3424              		.syntax unified
 3425              	@ 1024 "interrupts.c" 1
 3426 05c4 72B6     		cpsid   i
 3427              	@ 0 "" 2
 3428              	@ interrupts.c:1025:   NVIC_EnableIRQ(uwIntNum);
1025:interrupts.c  ****   NVIC_EnableIRQ(uwIntNum);
 3429              		.loc 2 1025 3
 3430              		.thumb
 3431              		.syntax unified
 3432 05c6 FB88     		ldrh	r3, [r7, #6]	@ _1, uwIntNum
 3433 05c8 1846     		mov	r0, r3	@, _1
 3434 05ca FFF719FD 		bl	NVIC_EnableIRQ		@
 3435              	@ interrupts.c:1026:   GIE;                                            //--- Enable Other Interrupt
1026:interrupts.c  ****   GIE;                                            //--- Enable Other Interrupts
 3436              		.loc 2 1026 3
 3437              		.syntax unified
 3438              	@ 1026 "interrupts.c" 1
 3439 05ce 62B6     		cpsie   i
 3440              	@ 0 "" 2
 3441              	@ interrupts.c:1027: }
1027:interrupts.c  **** }
 3442              		.loc 2 1027 1
 3443              		.thumb
 3444              		.syntax unified
 3445 05d0 00BF     		nop	
 3446 05d2 0837     		adds	r7, r7, #8	@,,
 3447              	.LCFI339:
 3448              		.cfi_def_cfa_offset 8
 3449 05d4 BD46     		mov	sp, r7	@,
 3450              	.LCFI340:
 3451              		.cfi_def_cfa_register 13
 3452              		@ sp needed	@
 3453 05d6 80BD     		pop	{r7, pc}	@
 3454              		.cfi_endproc
 3455              	.LFE89:
 3457              		.align	1
 3458              		.global	fnSetIntPend
 3459              		.syntax unified
 3460              		.thumb
 3461              		.thumb_func
 3462              		.fpu fpv4-sp-d16
 3464              	fnSetIntPend:
 3465              	.LFB90:
1028:interrupts.c  **** 
1029:interrupts.c  **** 
1030:interrupts.c  **** //---------------------------------------------------------------------------------------------
1031:interrupts.c  **** //    Set an Interrupt Bit in the Interrupts Mask
1032:interrupts.c  **** //---------------------------------------------------------------------------------------------
1033:interrupts.c  **** void  fnSetIntPend (u16 uwIntNum)
1034:interrupts.c  **** {
 3466              		.loc 2 1034 1
 3467              		.cfi_startproc
 3468              		@ args = 0, pretend = 0, frame = 8
 3469              		@ frame_needed = 1, uses_anonymous_args = 0
 3470 05d8 80B5     		push	{r7, lr}	@
 3471              	.LCFI341:
 3472              		.cfi_def_cfa_offset 8
 3473              		.cfi_offset 7, -8
 3474              		.cfi_offset 14, -4
 3475 05da 82B0     		sub	sp, sp, #8	@,,
 3476              	.LCFI342:
 3477              		.cfi_def_cfa_offset 16
 3478 05dc 00AF     		add	r7, sp, #0	@,,
 3479              	.LCFI343:
 3480              		.cfi_def_cfa_register 7
 3481 05de 0346     		mov	r3, r0	@ tmp111, uwIntNum
 3482 05e0 FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp112, uwIntNum
 3483              	@ interrupts.c:1035:   GID;                                            //--- Kill Other Interrupts
1035:interrupts.c  ****   GID;                                            //--- Kill Other Interrupts
 3484              		.loc 2 1035 3
 3485              		.syntax unified
 3486              	@ 1035 "interrupts.c" 1
 3487 05e2 72B6     		cpsid   i
 3488              	@ 0 "" 2
 3489              	@ interrupts.c:1036:   NVIC_DisableIRQ(uwIntNum);
1036:interrupts.c  ****   NVIC_DisableIRQ(uwIntNum);
 3490              		.loc 2 1036 3
 3491              		.thumb
 3492              		.syntax unified
 3493 05e4 FB88     		ldrh	r3, [r7, #6]	@ _1, uwIntNum
 3494 05e6 1846     		mov	r0, r3	@, _1
 3495 05e8 FFF722FD 		bl	NVIC_DisableIRQ		@
 3496              	@ interrupts.c:1037:   GIE;                                            //--- Enable Other Interrupt
1037:interrupts.c  ****   GIE;                                            //--- Enable Other Interrupts
 3497              		.loc 2 1037 3
 3498              		.syntax unified
 3499              	@ 1037 "interrupts.c" 1
 3500 05ec 62B6     		cpsie   i
 3501              	@ 0 "" 2
 3502              	@ interrupts.c:1038: }
1038:interrupts.c  **** }
 3503              		.loc 2 1038 1
 3504              		.thumb
 3505              		.syntax unified
 3506 05ee 00BF     		nop	
 3507 05f0 0837     		adds	r7, r7, #8	@,,
 3508              	.LCFI344:
 3509              		.cfi_def_cfa_offset 8
 3510 05f2 BD46     		mov	sp, r7	@,
 3511              	.LCFI345:
 3512              		.cfi_def_cfa_register 13
 3513              		@ sp needed	@
 3514 05f4 80BD     		pop	{r7, pc}	@
 3515              		.cfi_endproc
 3516              	.LFE90:
 3518              		.align	1
 3519              		.global	fnClrIntPend
 3520              		.syntax unified
 3521              		.thumb
 3522              		.thumb_func
 3523              		.fpu fpv4-sp-d16
 3525              	fnClrIntPend:
 3526              	.LFB91:
1039:interrupts.c  **** 
1040:interrupts.c  **** //---------------------------------------------------------------------------------------------
1041:interrupts.c  **** //    Clear an Interrupt Bit in the Interrupts Pending Mask
1042:interrupts.c  **** //---------------------------------------------------------------------------------------------
1043:interrupts.c  **** void  fnClrIntPend (u16 uwIntNum)
1044:interrupts.c  **** {
 3527              		.loc 2 1044 1
 3528              		.cfi_startproc
 3529              		@ args = 0, pretend = 0, frame = 8
 3530              		@ frame_needed = 1, uses_anonymous_args = 0
 3531 05f6 80B5     		push	{r7, lr}	@
 3532              	.LCFI346:
 3533              		.cfi_def_cfa_offset 8
 3534              		.cfi_offset 7, -8
 3535              		.cfi_offset 14, -4
 3536 05f8 82B0     		sub	sp, sp, #8	@,,
 3537              	.LCFI347:
 3538              		.cfi_def_cfa_offset 16
 3539 05fa 00AF     		add	r7, sp, #0	@,,
 3540              	.LCFI348:
 3541              		.cfi_def_cfa_register 7
 3542 05fc 0346     		mov	r3, r0	@ tmp111, uwIntNum
 3543 05fe FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp112, uwIntNum
 3544              	@ interrupts.c:1045:   GID;                                            //--- Kill Other Interrupts
1045:interrupts.c  ****   GID;                                            //--- Kill Other Interrupts
 3545              		.loc 2 1045 3
 3546              		.syntax unified
 3547              	@ 1045 "interrupts.c" 1
 3548 0600 72B6     		cpsid   i
 3549              	@ 0 "" 2
 3550              	@ interrupts.c:1046:   NVIC_ClearPendingIRQ(uwIntNum);
1046:interrupts.c  ****   NVIC_ClearPendingIRQ(uwIntNum);
 3551              		.loc 2 1046 3
 3552              		.thumb
 3553              		.syntax unified
 3554 0602 FB88     		ldrh	r3, [r7, #6]	@ _1, uwIntNum
 3555 0604 1846     		mov	r0, r3	@, _1
 3556 0606 FFF72BFD 		bl	NVIC_ClearPendingIRQ		@
 3557              	@ interrupts.c:1047:   GIE;                                            //--- Enable Other Interrupt
1047:interrupts.c  ****   GIE;                                            //--- Enable Other Interrupts
 3558              		.loc 2 1047 3
 3559              		.syntax unified
 3560              	@ 1047 "interrupts.c" 1
 3561 060a 62B6     		cpsie   i
 3562              	@ 0 "" 2
 3563              	@ interrupts.c:1048: }
1048:interrupts.c  **** }
 3564              		.loc 2 1048 1
 3565              		.thumb
 3566              		.syntax unified
 3567 060c 00BF     		nop	
 3568 060e 0837     		adds	r7, r7, #8	@,,
 3569              	.LCFI349:
 3570              		.cfi_def_cfa_offset 8
 3571 0610 BD46     		mov	sp, r7	@,
 3572              	.LCFI350:
 3573              		.cfi_def_cfa_register 13
 3574              		@ sp needed	@
 3575 0612 80BD     		pop	{r7, pc}	@
 3576              		.cfi_endproc
 3577              	.LFE91:
 3579              		.align	1
 3580              		.global	fnSetIntPriority
 3581              		.syntax unified
 3582              		.thumb
 3583              		.thumb_func
 3584              		.fpu fpv4-sp-d16
 3586              	fnSetIntPriority:
 3587              	.LFB92:
1049:interrupts.c  **** 
1050:interrupts.c  **** //---------------------------------------------------------------------------------------------
1051:interrupts.c  **** //    Set Interrupt Priority in the Interrupts Mask
1052:interrupts.c  **** //
1053:interrupts.c  **** //    uwIntNum = Interrupt Number (0 - 96)
1054:interrupts.c  **** //    ubPri = Priority Level (0 - 15) Higher Number = Weaker priority
1055:interrupts.c  **** //---------------------------------------------------------------------------------------------
1056:interrupts.c  **** void  fnSetIntPriority (u16 uwIntNum, u08 ubPri)
1057:interrupts.c  **** {
 3588              		.loc 2 1057 1
 3589              		.cfi_startproc
 3590              		@ args = 0, pretend = 0, frame = 8
 3591              		@ frame_needed = 1, uses_anonymous_args = 0
 3592 0614 80B5     		push	{r7, lr}	@
 3593              	.LCFI351:
 3594              		.cfi_def_cfa_offset 8
 3595              		.cfi_offset 7, -8
 3596              		.cfi_offset 14, -4
 3597 0616 82B0     		sub	sp, sp, #8	@,,
 3598              	.LCFI352:
 3599              		.cfi_def_cfa_offset 16
 3600 0618 00AF     		add	r7, sp, #0	@,,
 3601              	.LCFI353:
 3602              		.cfi_def_cfa_register 7
 3603 061a 0346     		mov	r3, r0	@ tmp112, uwIntNum
 3604 061c 0A46     		mov	r2, r1	@ tmp114, ubPri
 3605 061e FB80     		strh	r3, [r7, #6]	@ movhi	@ tmp113, uwIntNum
 3606 0620 1346     		mov	r3, r2	@ tmp115, tmp114
 3607 0622 7B71     		strb	r3, [r7, #5]	@ tmp115, ubPri
 3608              	@ interrupts.c:1058:   NVIC_SetPriority(uwIntNum, ubPri);
1058:interrupts.c  ****   NVIC_SetPriority(uwIntNum, ubPri);
 3609              		.loc 2 1058 3
 3610 0624 FB88     		ldrh	r3, [r7, #6]	@ _1, uwIntNum
 3611 0626 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2	@ _2, ubPri
 3612 0628 1146     		mov	r1, r2	@, _2
 3613 062a 1846     		mov	r0, r3	@, _1
 3614 062c FFF730FD 		bl	NVIC_SetPriority		@
 3615              	@ interrupts.c:1059: }
1059:interrupts.c  **** }
 3616              		.loc 2 1059 1
 3617 0630 00BF     		nop	
 3618 0632 0837     		adds	r7, r7, #8	@,,
 3619              	.LCFI354:
 3620              		.cfi_def_cfa_offset 8
 3621 0634 BD46     		mov	sp, r7	@,
 3622              	.LCFI355:
 3623              		.cfi_def_cfa_register 13
 3624              		@ sp needed	@
 3625 0636 80BD     		pop	{r7, pc}	@
 3626              		.cfi_endproc
 3627              	.LFE92:
 3629              	.Letext0:
 3630              		.file 3 "c:\\gcc\\arm-eabi\\lib\\gcc\\arm-none-eabi\\9.3.1\\include\\stddef.h"
 3631              		.file 4 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\_types.h"
 3632              		.file 5 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\reent.h"
 3633              		.file 6 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\lock.h"
 3634              		.file 7 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\sys\\errno.h"
 3635              		.file 8 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\time.h"
 3636              		.file 9 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\stdlib.h"
 3637              		.file 10 "c:\\gcc\\arm-eabi\\arm-none-eabi\\include\\math.h"
 3638              		.file 11 "commonheader.h"
 3639              		.file 12 "STM32L432_Map.h"
 3640              		.file 13 "opsys.h"
 3641              		.file 14 "sys_tick.h"
 3642              		.file 15 "main.h"
 3643              		.file 16 "startup.h"
 3644              		.file 17 "test_help.h"
 3645              		.file 18 "uart_com.h"
DEFINED SYMBOLS
                            *ABS*:00000000 interrupts.c
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:55     .text:00000000 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:62     .text:00000000 NVIC_EnableIRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:117    .text:0000002c $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:121    .text:00000030 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:127    .text:00000030 NVIC_DisableIRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:182    .text:0000005c $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:186    .text:00000060 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:192    .text:00000060 NVIC_ClearPendingIRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:247    .text:0000008c $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:251    .text:00000090 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:257    .text:00000090 NVIC_SetPriority
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:312    .text:000000bc $d
                            *COM*:00000064 ubNVICpriorityTable
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:322    .isr_vector:00000000 g_pfnVectors
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:319    .isr_vector:00000000 $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:597    .text:00000122 fnNMI_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:633    .text:00000130 fnHardFault_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:669    .text:0000013e fnMemManage_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:705    .text:0000014c fnBusFault_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:741    .text:0000015a fnIllegal_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:561    .text:00000114 fnNull_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:777    .text:00000168 fnSVC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:863    .text:000001d8 fnDebug_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:899    .text:000001e6 fnPendSVC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:935    .text:000001f4 fnSysTick_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:966    .text:00000200 fnWWDG_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1002   .text:0000020e fnPVD_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1038   .text:0000021c fnRTC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1074   .text:0000022a fnRTC_WKUP_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1110   .text:00000238 fnFLASH_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1146   .text:00000246 fnRCC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1182   .text:00000254 fnEXTI_0_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1218   .text:00000262 fnEXTI_1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1254   .text:00000270 fnEXTI_2_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1290   .text:0000027e fnEXTI_3_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1326   .text:0000028c fnEXTI_4_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1362   .text:0000029a fnDMA_11_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1398   .text:000002a8 fnDMA_12_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1434   .text:000002b6 fnDMA_13_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1470   .text:000002c4 fnDMA_14_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1506   .text:000002d2 fnDMA_15_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1542   .text:000002e0 fnDMA_16_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1578   .text:000002ee fnDMA_17_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1614   .text:000002fc fnADC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1650   .text:0000030a fnCAN1_TX_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1686   .text:00000318 fnCAN1_RX0_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1722   .text:00000326 fnCAN1_RX1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1758   .text:00000334 fnCAN1_SCE_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1794   .text:00000342 fnEXTI_5_9_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1830   .text:00000350 fnTIM1_BK_TIM15_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1866   .text:0000035e fnTIM1_UP_TIM16_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1902   .text:0000036c fnTIM1_TRG_COM_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1938   .text:0000037a fnTIM1_CC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:1974   .text:00000388 fnTIM2_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2010   .text:00000396 fnTIM3_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2046   .text:000003a4 fnTIM4_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2082   .text:000003b2 fnI2C1_EV_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2118   .text:000003c0 fnI2C1_ER_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2154   .text:000003ce fnI2C2_EV_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2190   .text:000003dc fnI2C2_ER_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2226   .text:000003ea fnSPI1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2262   .text:000003f8 fnSPI2_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2298   .text:00000406 fnUSART3_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2334   .text:00000414 fnEXTI_10_15_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2370   .text:00000422 fnRTC_ALARM_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2406   .text:00000430 fnSDMMC1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2442   .text:0000043e fnSPI3_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2478   .text:0000044c fnUSART4_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2514   .text:0000045a fnTIM6_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2550   .text:00000468 fnTIM7_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2586   .text:00000476 fnDMA_21_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2622   .text:00000484 fnDMA_22_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2658   .text:00000492 fnDMA_23_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2694   .text:000004a0 fnDMA_24_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2730   .text:000004ae fnDMA_25_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2766   .text:000004bc fnCOMP_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2802   .text:000004ca fnLPTIM1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2838   .text:000004d8 fnLPTIM2_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2874   .text:000004e6 fnUSB_FS_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2910   .text:000004f4 fnDMA_26_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2946   .text:00000502 fnDMA_27_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:2982   .text:00000510 fnLPUART1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3018   .text:0000051e fnQUADSPI_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3054   .text:0000052c fnI2C3_EV_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3090   .text:0000053a fnI2C3_ER_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3126   .text:00000548 fnSAI_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3162   .text:00000556 fnSWPMI1_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3198   .text:00000564 fnTSC_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3234   .text:00000572 fnRNG_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3270   .text:00000580 fnFPU_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3306   .text:0000058e fnCRS_IRQ
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:432    .text:000000c0 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:439    .text:000000c0 fnInitNVIC
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3586   .text:00000614 fnSetIntPriority
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:533    .text:00000108 $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:544    .rodata:00000000 ubInterruptConfigs
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:541    .rodata:00000000 $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:554    .text:00000114 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:801    .text:0000017c $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:817    .text:000001bc $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:852    .text:000001d4 $d
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:856    .text:000001d8 $t
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3342   .text:0000059c fnEnaInt
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3403   .text:000005ba fnDisInt
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3464   .text:000005d8 fnSetIntPend
C:\Users\Jim\AppData\Local\Temp\ccZ8CovR.s:3525   .text:000005f6 fnClrIntPend

UNDEFINED SYMBOLS
_estack
fnReset_IRQ
fnUSART1_IRQ
fnUSART2_IRQ
ubSVCn
fnPacer
